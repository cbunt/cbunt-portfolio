{"version":3,"file":"710.bundle.js","mappings":"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","sources":["webpack://cbunt-portfolio/./src/rendering/utils/data-copy.ts","webpack://cbunt-portfolio/./src/components/select/select.module.scss","webpack://cbunt-portfolio/./src/components/checkbox/checkbox.module.scss","webpack://cbunt-portfolio/./src/rendering/core/camera/camera.ts","webpack://cbunt-portfolio/./src/components/viewport/settings-panel/settings-panel.module.scss","webpack://cbunt-portfolio/./src/rendering/shaders/cubemap-sampling.shader.ts","webpack://cbunt-portfolio/./src/utils/general.ts","webpack://cbunt-portfolio/./src/rendering/core/tonemap-pass.ts","webpack://cbunt-portfolio/./src/rendering/core/skybox-pass.ts","webpack://cbunt-portfolio/./src/rendering/core/gbuffer.ts","webpack://cbunt-portfolio/./src/rendering/shaders/brdfs.shader.ts","webpack://cbunt-portfolio/./src/rendering/core/ibl-textures/create-bfrd-lut.ts","webpack://cbunt-portfolio/./src/rendering/core/ibl-textures/create-irradiance-texture.ts","webpack://cbunt-portfolio/./src/rendering/core/ibl-textures/create-radiance-texture.ts","webpack://cbunt-portfolio/./src/rendering/core/deferred-pass.ts","webpack://cbunt-portfolio/./src/rendering/core/renderer.ts","webpack://cbunt-portfolio/./src/components/button/button.module.scss?8b99","webpack://cbunt-portfolio/./src/components/button/button.tsx","webpack://cbunt-portfolio/./src/components/select/select.module.scss?d9ad","webpack://cbunt-portfolio/./src/components/select/select.tsx","webpack://cbunt-portfolio/./src/components/file-upload/file-upload.tsx","webpack://cbunt-portfolio/./src/utils/hooks.tsx","webpack://cbunt-portfolio/./src/components/checkbox/checkbox.module.scss?46d1","webpack://cbunt-portfolio/./src/components/checkbox/checkbox.tsx","webpack://cbunt-portfolio/./src/components/slider/slider.module.scss?a739","webpack://cbunt-portfolio/./src/components/slider/slider.tsx","webpack://cbunt-portfolio/./src/components/viewport/settings-panel/settings-panel.module.scss?1d88","webpack://cbunt-portfolio/./src/components/viewport/settings-panel/settings-panel.tsx","webpack://cbunt-portfolio/./src/components/viewport/model-settings-gui.tsx","webpack://cbunt-portfolio/./src/components/viewport/fullscreen-button/fullscreen-button.module.scss?385f","webpack://cbunt-portfolio/./src/components/viewport/fullscreen-button/fullscreen-button.tsx","webpack://cbunt-portfolio/./src/rendering/core/camera/orbit-camera-controller.ts","webpack://cbunt-portfolio/./src/components/viewport/viewport.tsx","webpack://cbunt-portfolio/./src/rendering/core/constants.ts","webpack://cbunt-portfolio/./src/rendering/samples/settings/property-listener.ts","webpack://cbunt-portfolio/./src/rendering/shaders/blit-vert.shader.ts","webpack://cbunt-portfolio/./src/components/viewport/fullscreen-button/fullscreen-button.module.scss","webpack://cbunt-portfolio/./src/components/button/button.module.scss","webpack://cbunt-portfolio/./src/rendering/core/global-uniforms.ts","webpack://cbunt-portfolio/./src/components/slider/slider.module.scss"],"sourcesContent":["import * as ktxparse from 'ktx-parse';\r\n\r\nimport { TextureFormatToSize, TextureFormatToChannelSize, WebGPUToVkFormat } from '../core/constants';\r\nimport { mapRange, padTemplate } from '../../utils/general';\r\n\r\nexport function createAndCopyBuffer(\r\n    arr: ArrayBuffer | ArrayBufferView,\r\n    usage: GPUFlagsConstant,\r\n    device: GPUDevice,\r\n    label?: string,\r\n    alignment = 4,\r\n): GPUBuffer {\r\n    const pad = alignment - 1;\r\n    const buffer = device.createBuffer({\r\n        label,\r\n        usage,\r\n        size: (arr.byteLength + pad) & ~pad,\r\n        mappedAtCreation: true,\r\n    } as GPUBufferDescriptor);\r\n\r\n    const writeArray = new Uint8Array(buffer.getMappedRange());\r\n    const readArray = arr instanceof ArrayBuffer\r\n        ? new Uint8Array(arr)\r\n        : new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\r\n\r\n    writeArray.set(readArray);\r\n    buffer.unmap();\r\n\r\n    return buffer;\r\n}\r\n\r\nexport function createAndCopyCubemap(\r\n    device: GPUDevice,\r\n    data: ArrayBuffer,\r\n    format: GPUTextureFormat,\r\n    usage: number,\r\n    label?: string,\r\n) {\r\n    const pixelSize = TextureFormatToSize[format];\r\n    if (pixelSize == null) {\r\n        throw new Error(`copy cubemap -- unsupported format: ${format}`);\r\n    }\r\n\r\n    const width = Math.sqrt(data.byteLength / (6 * pixelSize));\r\n    const size = { width, height: width, depthOrArrayLayers: 6 };\r\n\r\n    const texture = device.createTexture({\r\n        usage: usage | GPUTextureUsage.COPY_DST,\r\n        label,\r\n        format,\r\n        size,\r\n    });\r\n\r\n    device.queue.writeTexture(\r\n        { texture },\r\n        data,\r\n        { bytesPerRow: width * pixelSize, rowsPerImage: width },\r\n        size,\r\n    );\r\n\r\n    return texture;\r\n}\r\n\r\nexport type TextureToArrayBufferOptions = {\r\n    device: GPUDevice,\r\n    texture: GPUTexture,\r\n    mipLevel?: number,\r\n    resultBuffer?: Uint8Array,\r\n    storageBuffer?: GPUBuffer,\r\n    returnBuffer?: boolean,\r\n    description?: string,\r\n};\r\n\r\nexport async function textureToArrayBuffer(\r\n    options: Omit<TextureToArrayBufferOptions, 'returnBuffer'> & { returnBuffer?: false },\r\n): Promise<{ imageData: Uint8Array }>;\r\n\r\nexport async function textureToArrayBuffer(\r\n    options: Omit<TextureToArrayBufferOptions, 'returnBuffer'> & { returnBuffer: true },\r\n): Promise<{ imageData: Uint8Array, storageBuffer: GPUBuffer }>;\r\n\r\nexport async function textureToArrayBuffer({\r\n    device,\r\n    texture,\r\n    mipLevel = 0,\r\n    returnBuffer,\r\n    storageBuffer,\r\n    resultBuffer,\r\n    description,\r\n}: TextureToArrayBufferOptions) {\r\n    const pixelSize = TextureFormatToSize[texture.format];\r\n    const fullDescription = padTemplate`[textureToKTX${description ?? ''}${texture.label}] --`;\r\n\r\n    if (pixelSize == null) {\r\n        throw new Error(`${fullDescription} format ${texture.format} unsupported`);\r\n    }\r\n\r\n    const width = texture.width >> mipLevel;\r\n    const height = texture.height >> mipLevel;\r\n    const rawBytesPerRow = width * pixelSize;\r\n    const bytesPerRow = Math.max(rawBytesPerRow, 256);\r\n    const rowsPerImage = height;\r\n    const byteSize = rowsPerImage * bytesPerRow * texture.depthOrArrayLayers;\r\n    const resultSize = rawBytesPerRow * height * texture.depthOrArrayLayers;\r\n\r\n    if (resultBuffer != null && resultBuffer.byteLength < byteSize) {\r\n        throw new Error(`${fullDescription} given result array not large enough.\r\n${resultBuffer.byteLength} < ${byteSize}`);\r\n    }\r\n\r\n    if (storageBuffer != null && storageBuffer.size < byteSize) {\r\n        throw new Error(`${fullDescription} given storage buffer not large enough.\r\n${storageBuffer.size} < ${byteSize}`);\r\n    }\r\n\r\n    const requiredUsage = GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ;\r\n\r\n    if (storageBuffer != null && (storageBuffer.usage & requiredUsage) !== requiredUsage) {\r\n        throw new Error(`${fullDescription} given storage does not have correct usage flags.\r\nGiven: ${storageBuffer.usage}\r\nRequired: ${requiredUsage}`);\r\n    }\r\n\r\n    let imageData = resultBuffer ?? new Uint8Array(byteSize);\r\n    const storage = storageBuffer ?? device.createBuffer({\r\n        label: `${fullDescription} storage buffer`,\r\n        size: byteSize,\r\n        usage: requiredUsage,\r\n    });\r\n\r\n    const encoder = device.createCommandEncoder({ label: `${fullDescription} encoder` });\r\n    encoder.copyTextureToBuffer(\r\n        { texture, mipLevel },\r\n        { buffer: storage, rowsPerImage, bytesPerRow },\r\n        { width, height, depthOrArrayLayers: texture.depthOrArrayLayers },\r\n    );\r\n    device.queue.submit([encoder.finish()]);\r\n\r\n    await Promise.all([\r\n        storage.mapAsync(GPUMapMode.READ, 0, byteSize),\r\n        device.queue.onSubmittedWorkDone(),\r\n    ]);\r\n\r\n    const mapped = storage.getMappedRange(0, byteSize);\r\n    imageData.set(new Uint8Array(mapped));\r\n    storage.unmap();\r\n\r\n    if (bytesPerRow > rawBytesPerRow) {\r\n        for (let h = 0; h < height * texture.depthOrArrayLayers; h += 1) {\r\n            for (let w = 0; w < rawBytesPerRow; w += 1) {\r\n                imageData[w + h * rawBytesPerRow] = imageData[w + h * bytesPerRow];\r\n            }\r\n        }\r\n        imageData = imageData.slice(0, resultSize);\r\n    }\r\n\r\n    return {\r\n        imageData,\r\n        storageBuffer: returnBuffer ? storage : undefined,\r\n    };\r\n}\r\n\r\nexport async function textureToKTX(device: GPUDevice, texture: GPUTexture, cube = false) {\r\n    const pixelSize = TextureFormatToSize[texture.format];\r\n    const typeSize = TextureFormatToChannelSize[texture.format];\r\n\r\n    if (pixelSize == null || typeSize == null) {\r\n        throw new Error(`textureToKTX -- format ${texture.format} of ${texture.label} unsupported`);\r\n    }\r\n\r\n    const container = ktxparse.createDefaultContainer();\r\n    container.pixelWidth = texture.width;\r\n    container.pixelHeight = texture.height;\r\n    container.vkFormat = WebGPUToVkFormat[texture.format];\r\n    container.typeSize = typeSize;\r\n    delete container.keyValue.KTXswizzle;\r\n\r\n    const dataFormat = container.dataFormatDescriptor[0];\r\n    dataFormat.colorModel = ktxparse.KHR_DF_MODEL_RGBSDA;\r\n    dataFormat.transferFunction = ktxparse.KHR_DF_TRANSFER_LINEAR;\r\n    dataFormat.bytesPlane[0] = pixelSize;\r\n\r\n    dataFormat.samples = mapRange(4, (i) => ({\r\n        channelType: [192, 193, 194, 207][i],\r\n        samplePosition: [0, 0, 0, 0],\r\n        bitLength: container.typeSize * 8 - 1,\r\n        bitOffset: container.typeSize * 8 * i,\r\n        sampleLower: -1082130432,\r\n        sampleUpper: 1065353216,\r\n    }));\r\n\r\n    if (texture.dimension === '3d') {\r\n        container.faceCount = 1;\r\n        container.pixelDepth = texture.depthOrArrayLayers;\r\n    } else if (cube) {\r\n        const cubeLayers = texture.depthOrArrayLayers / 6;\r\n        container.layerCount = cubeLayers === 1 ? 0 : cubeLayers;\r\n        container.faceCount = 6;\r\n    } else {\r\n        container.layerCount = texture.depthOrArrayLayers;\r\n        container.faceCount = 1;\r\n    }\r\n\r\n    let storageBuffer: GPUBuffer | undefined;\r\n    let imageData: Uint8Array;\r\n\r\n    for (let i = 0; i < texture.mipLevelCount; i += 1) {\r\n        ({ imageData, storageBuffer } = await textureToArrayBuffer({\r\n            mipLevel: i,\r\n            returnBuffer: true,\r\n            device,\r\n            texture,\r\n            storageBuffer,\r\n        }));\r\n\r\n        container.levels.push({\r\n            levelData: imageData,\r\n            uncompressedByteLength: imageData.byteLength,\r\n        });\r\n    }\r\n\r\n    return ktxparse.write(container);\r\n}\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `select{text-wrap:none;text-overflow:ellipsis;max-width:30ch}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/select/select.module.scss\"],\"names\":[],\"mappings\":\"AAAA,OACI,cAAA,CACA,sBAAA,CACA,cAAA\",\"sourcesContent\":[\"select {\\n    text-wrap: none;\\n    text-overflow: ellipsis;\\n    max-width: 30ch;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `html{--hover-scale: 1.075;--active-scale: 0.95;--scale-bezier: cubic-bezier(0.81, 0, 0.37, 3.69);--scale-transition-duration: 0.2s}@media(prefers-reduced-motion)or (hover: none){html{--hover-scale: 1 !important;--active-scale: 1 !important}}input[type=checkbox]{--scale-transition: scale var(--scale-transition-duration) var(--scale-bezier);transition:var(--scale-transition);--height: 1lh;height:var(--height);appearance:none;margin:0;aspect-ratio:1;position:relative;border:.25lh solid oklch(from var(--accent-2) calc(l * var(--ok-l2)) c h);border-radius:5px;background-color:var(--background-color);transition:var(--scale-transition),background-color .2s ease-out,border-color .2s ease-out}input[type=checkbox]:not(:disabled){cursor:pointer}input[type=checkbox]:hover:not(:disabled){scale:var(--hover-scale)}input[type=checkbox]:active:not(:disabled){scale:var(--active-scale)}input[type=checkbox] label{position:relative}input[type=checkbox]:checked{background-color:var(--accent-2);border-color:var(--accent-2)}input[type=checkbox]:before,input[type=checkbox]:after{content:\"\";position:absolute;top:-0.2lh;width:calc(var(--height)*1.4142135624);height:max(4px,.2rem);scale:0 1;background:oklch(from var(--accent-2) calc(l * var(--ok-l2)) c h);border-radius:6px;transition-property:scale;transition-timing-function:ease-in;transition-duration:75ms}input[type=checkbox]:checked::before,input[type=checkbox]:checked:after{scale:1;transition-timing-function:ease-out;transition-duration:100ms}input[type=checkbox]:before{rotate:45deg;left:0;transform-origin:left top;transition-delay:100ms}input[type=checkbox]:after{rotate:-45deg;right:0;transform-origin:right top}input[type=checkbox]:checked:after{transition-delay:150ms}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/mixins.module.scss\",\"webpack://./src/components/checkbox/checkbox.module.scss\"],\"names\":[],\"mappings\":\"AAAA,KACI,oBAAA,CACA,oBAAA,CACA,iDAAA,CACA,iCAAA,CAEA,+CANJ,KAOQ,2BAAA,CACA,4BAAA,CAAA,CCNR,qBDWI,8EAAA,CACA,kCAAA,CCTA,aAAA,CACA,oBAAA,CAEA,eAAA,CACA,QAAA,CAEA,cAAA,CACA,iBAAA,CAEA,yEAAA,CACA,iBAAA,CACA,wCAAA,CAEA,0FACI,CDHJ,oCACI,cAAA,CAGJ,0CACI,wBAAA,CAGJ,2CACI,yBAAA,CCFJ,2BACI,iBAAA,CAGJ,6BACI,gCAAA,CACA,4BAAA,CAGJ,uDAEI,UAAA,CACA,iBAAA,CACA,UAAA,CAEA,sCAAA,CACA,qBAAA,CACA,SAAA,CAEA,iEAAA,CACA,iBAAA,CAEA,yBAAA,CACA,kCAAA,CACA,wBAAA,CAGJ,wEAEI,OAAA,CACA,mCAAA,CACA,yBAAA,CAGJ,4BACI,YAAA,CACA,MAAA,CACA,yBAAA,CACA,sBAAA,CAGJ,2BACI,aAAA,CACA,OAAA,CACA,0BAAA,CAGJ,mCACI,sBAAA\",\"sourcesContent\":[\"html {\\n    --hover-scale: 1.075;\\n    --active-scale: 0.95;\\n    --scale-bezier: cubic-bezier(0.81, 0, 0.37, 3.69);\\n    --scale-transition-duration: 0.2s; \\n\\n    @media (prefers-reduced-motion) OR (hover: none) { \\n        --hover-scale: 1 !important;\\n        --active-scale: 1 !important;\\n    }\\n}\\n\\n@mixin clickable {\\n    --scale-transition: scale var(--scale-transition-duration) var(--scale-bezier);\\n    transition: var(--scale-transition);\\n\\n    &:not(:disabled) {\\n        cursor: pointer;\\n    }\\n    \\n    &:hover:not(:disabled) {\\n        scale: var(--hover-scale);\\n    }\\n    \\n    &:active:not(:disabled) {\\n        scale: var(--active-scale);\\n    }\\n}\\n\\n@mixin distortion-border($width, $color: currentColor) {\\n    position: relative;\\n    border: #{$width} solid transparent;\\n\\n    &:before {\\n        content: '';\\n        position: absolute;\\n        z-index: 1;\\n        pointer-events: none;\\n    \\n        width: calc(100% + #{$width});\\n        height: calc(100% + #{$width});\\n        top: calc(-0.5 * #{$width});\\n        left: calc(-0.5 * #{$width});\\n        filter: var(--distortion-filter);\\n    \\n        border: solid;\\n        background-color: #0000;\\n        border-radius: inherit;\\n        border-width: #{$width};\\n        border-color: #{$color};\\n    }\\n}\\n\\n@mixin distortion-background($color:var(--background-color)) {\\n    position: relative;\\n\\n    &:before {\\n        content: '';\\n        position: absolute;\\n        z-index: -1;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        height: 100%;\\n        filter: var(--distortion-filter);\\n\\n        border-radius: inherit;\\n        background-color: #{$color};\\n    }\\n}\\n\",\"@use \\\"../mixins.module.scss\\\" as mixins;\\n\\ninput[type=\\\"checkbox\\\"] {\\n    @include mixins.clickable;\\n\\n    --height: 1lh;\\n    height: var(--height);\\n\\n    appearance: none;\\n    margin: 0;\\n\\n    aspect-ratio: 1;\\n    position: relative;\\n\\n    border: 0.25lh solid oklch(from var(--accent-2) calc(l * var(--ok-l2)) c h);\\n    border-radius: 5px;\\n    background-color: var(--background-color);\\n\\n    transition:\\n        var(--scale-transition),\\n        background-color 0.2s ease-out,\\n        border-color 0.2s ease-out;\\n\\n    label {\\n        position: relative;\\n    }\\n\\n    &:checked {\\n        background-color: var(--accent-2);\\n        border-color: var(--accent-2);\\n    }\\n\\n    &:before,\\n    &:after {\\n        content: '';\\n        position: absolute;\\n        top: -0.2lh;\\n\\n        width: calc(var(--height) * sqrt(2));\\n        height: max(4px, 0.2rem);\\n        scale: 0 1;\\n\\n        background: oklch(from var(--accent-2) calc(l * var(--ok-l2)) c h);\\n        border-radius: 6px;\\n        \\n        transition-property: scale;\\n        transition-timing-function: ease-in;\\n        transition-duration: 75ms;\\n    }\\n\\n    &:checked::before,\\n    &:checked:after {\\n        scale: 1;\\n        transition-timing-function: ease-out;\\n        transition-duration: 100ms;\\n    }\\n\\n    &:before {\\n        rotate: 45deg;\\n        left: 0;\\n        transform-origin: left top;\\n        transition-delay: 100ms;\\n    }\\n\\n    &:after {\\n        rotate: -45deg;\\n        right: 0;\\n        transform-origin: right top;\\n    }\\n\\n    &:checked:after {\\n        transition-delay: 150ms;\\n    }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {};\nexport default ___CSS_LOADER_EXPORT___;\n","import { Vec3, Mat4, mat4, Quat } from 'wgpu-matrix';\r\nimport { TypeSizes } from '../constants';\r\n\r\nexport type CameraParams = {\r\n    nearPlane: number,\r\n    farPlane: number,\r\n    fov: number,\r\n    width: number,\r\n    height: number,\r\n    projection: 'perspective' | 'ortho',\r\n};\r\n\r\nexport default class Camera {\r\n    static readonly worldToViewOffset = 0;\r\n    static readonly viewToClipOffset = this.worldToViewOffset + TypeSizes.sizeofMat4x4f;\r\n    static readonly worldToClipOffset = this.viewToClipOffset + TypeSizes.sizeofMat4x4f;\r\n    static readonly viewToWorldOffset = this.worldToClipOffset + TypeSizes.sizeofMat4x4f;\r\n    static readonly clipToViewOffset = this.viewToWorldOffset + TypeSizes.sizeofMat4x4f;\r\n    static readonly clipToWorldOffset = this.clipToViewOffset + TypeSizes.sizeofMat4x4f;\r\n\r\n    static readonly bufferLength = this.clipToWorldOffset + TypeSizes.sizeofMat4x4f;\r\n\r\n    /**\r\n   *  An ArrayBuffer containing the camera's worldToView, viewToClip, worldToClip,\r\n   *  viewToWorld, clipToView, and clipToWorld matrices as Float32Arrays for\r\n   *  easier transfer. Ordered as listed above.\r\n   */\r\n    readonly buffer: ArrayBuffer = new ArrayBuffer(Camera.bufferLength);\r\n\r\n    readonly worldToView: Mat4 = new Float32Array(\r\n        this.buffer,\r\n        Camera.worldToViewOffset,\r\n        TypeSizes.mat4x4Count,\r\n    );\r\n\r\n    readonly viewToClip: Mat4 = new Float32Array(\r\n        this.buffer,\r\n        Camera.viewToClipOffset,\r\n        TypeSizes.mat4x4Count,\r\n    );\r\n\r\n    readonly worldToClip: Mat4 = new Float32Array(\r\n        this.buffer,\r\n        Camera.worldToClipOffset,\r\n        TypeSizes.mat4x4Count,\r\n    );\r\n\r\n    readonly viewToWorld: Mat4 = new Float32Array(\r\n        this.buffer,\r\n        Camera.viewToWorldOffset,\r\n        TypeSizes.mat4x4Count,\r\n    );\r\n\r\n    readonly clipToView: Mat4 = new Float32Array(\r\n        this.buffer,\r\n        Camera.clipToViewOffset,\r\n        TypeSizes.mat4x4Count,\r\n    );\r\n\r\n    readonly clipToWorld: Mat4 = new Float32Array(\r\n        this.buffer,\r\n        Camera.clipToWorldOffset,\r\n        TypeSizes.mat4x4Count,\r\n    );\r\n\r\n    readonly location: Vec3 = new Float32Array([0, 0, 0]);\r\n    readonly rotation: Quat = new Float32Array([0, 0, 0, 1]);\r\n\r\n    params: CameraParams = {\r\n        nearPlane: 0.01,\r\n        farPlane: 500.0,\r\n        fov: 40,\r\n        width: 1920,\r\n        height: 1080,\r\n        projection: 'perspective',\r\n    };\r\n\r\n    constructor(viewParams: Partial<CameraParams> = {}) {\r\n        this.updateParams(viewParams);\r\n    }\r\n\r\n    updateParams(val: Partial<CameraParams>) {\r\n        this.params = { ...this.params, ...val };\r\n        this.#cacheProjection();\r\n    }\r\n\r\n    cacheView(): void {\r\n        mat4.fromQuat(this.rotation, this.viewToWorld);\r\n        mat4.setTranslation(this.viewToWorld, this.location, this.viewToWorld);\r\n        mat4.invert(this.viewToWorld, this.worldToView);\r\n        mat4.mul(this.viewToClip, this.worldToView, this.worldToClip);\r\n        mat4.mul(this.viewToWorld, this.clipToView, this.clipToWorld);\r\n    }\r\n\r\n    #cacheProjection(): void {\r\n        if (this.params.projection === 'perspective') {\r\n            mat4.perspective(\r\n                this.params.fov * (Math.PI / 180),\r\n                this.params.width / this.params.height,\r\n                this.params.nearPlane,\r\n                this.params.farPlane,\r\n                this.viewToClip,\r\n            );\r\n        } else {\r\n            const x = this.params.width / 2;\r\n            const y = this.params.height / 2;\r\n\r\n            mat4.ortho(\r\n                -x,\r\n                x,\r\n                -y,\r\n                y,\r\n                this.params.nearPlane,\r\n                this.params.farPlane,\r\n                this.viewToClip,\r\n            );\r\n        }\r\n\r\n        mat4.invert(this.viewToClip, this.clipToView);\r\n    }\r\n}\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `html{--hover-scale: 1.075;--active-scale: 0.95;--scale-bezier: cubic-bezier(0.81, 0, 0.37, 3.69);--scale-transition-duration: 0.2s}@media(prefers-reduced-motion)or (hover: none){html{--hover-scale: 1 !important;--active-scale: 1 !important}}.hqgt3TMMzCkkoelepz55{position:relative;display:grid;grid-template-columns:minmax(4rem, auto) minmax(4rem, 0.6fr) minmax(3rem, 0.3fr);gap:.5lh 1lh;color:var(--hi-vis-gray);border-radius:10px;font-size:.7em;position:absolute;top:0;left:0;z-index:2;font-weight:600;padding:1em 1em 1em 3em}.hqgt3TMMzCkkoelepz55:before{content:\"\";position:absolute;z-index:-1;top:0;left:0;width:100%;height:100%;filter:var(--distortion-filter);border-radius:inherit;background-color:var(--secondary-color)}.hqgt3TMMzCkkoelepz55>button:not([class]){color:var(--accent-3)}.hqgt3TMMzCkkoelepz55 input[type=checkbox]{justify-self:center}.hqgt3TMMzCkkoelepz55 label{margin:auto 0 auto .5em;color:var(--accent-1);grid-column:1}.hqgt3TMMzCkkoelepz55>svg:first-child{position:absolute;padding:1rem 0 1rem .5rem;width:2rem;height:100%;cursor:grab;fill:var(--background-color)}.hqgt3TMMzCkkoelepz55:before{box-shadow:color-mix(in oklch, var(--background-color) 50%, black) 6px 6px 4px}.hqgt3TMMzCkkoelepz55.lWIZ5qssR5cpP_5U_H3j{row-gap:0}.hqgt3TMMzCkkoelepz55.lWIZ5qssR5cpP_5U_H3j>:not(button:first-of-type):not(svg:first-of-type),.hqgt3TMMzCkkoelepz55.lWIZ5qssR5cpP_5U_H3j>:not(button:first-of-type):before{border-top-width:0;border-bottom-width:0;padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;height:0;min-height:0;overflow:clip}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/mixins.module.scss\",\"webpack://./src/components/viewport/settings-panel/settings-panel.module.scss\"],\"names\":[],\"mappings\":\"AAAA,KACI,oBAAA,CACA,oBAAA,CACA,iDAAA,CACA,iCAAA,CAEA,+CANJ,KAOQ,2BAAA,CACA,4BAAA,CAAA,CCNR,sBDoDI,iBAAA,CCjDA,YAAA,CACA,gFAAA,CAEA,YAAA,CAEA,wBAAA,CAEA,kBAAA,CACA,cAAA,CAEA,iBAAA,CACA,KAAA,CACA,MAAA,CACA,SAAA,CACA,eAAA,CAEA,uBAAA,CDmCA,6BACI,UAAA,CACA,iBAAA,CACA,UAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WAAA,CACA,+BAAA,CAEA,qBAAA,CACA,uCAAA,CC5CJ,0CACI,qBAAA,CAGJ,2CACI,mBAAA,CAGJ,4BACI,uBAAA,CACA,qBAAA,CACA,aAAA,CAIJ,sCACI,iBAAA,CACA,yBAAA,CACA,UAAA,CACA,WAAA,CAEA,WAAA,CACA,4BAAA,CAGJ,6BACI,8EAAA,CAGJ,2CACI,SAAA,CAEA,0KAEI,kBAAA,CACA,qBAAA,CACA,aAAA,CACA,gBAAA,CACA,YAAA,CACA,eAAA,CACA,QAAA,CACA,YAAA,CACA,aAAA\",\"sourcesContent\":[\"html {\\n    --hover-scale: 1.075;\\n    --active-scale: 0.95;\\n    --scale-bezier: cubic-bezier(0.81, 0, 0.37, 3.69);\\n    --scale-transition-duration: 0.2s; \\n\\n    @media (prefers-reduced-motion) OR (hover: none) { \\n        --hover-scale: 1 !important;\\n        --active-scale: 1 !important;\\n    }\\n}\\n\\n@mixin clickable {\\n    --scale-transition: scale var(--scale-transition-duration) var(--scale-bezier);\\n    transition: var(--scale-transition);\\n\\n    &:not(:disabled) {\\n        cursor: pointer;\\n    }\\n    \\n    &:hover:not(:disabled) {\\n        scale: var(--hover-scale);\\n    }\\n    \\n    &:active:not(:disabled) {\\n        scale: var(--active-scale);\\n    }\\n}\\n\\n@mixin distortion-border($width, $color: currentColor) {\\n    position: relative;\\n    border: #{$width} solid transparent;\\n\\n    &:before {\\n        content: '';\\n        position: absolute;\\n        z-index: 1;\\n        pointer-events: none;\\n    \\n        width: calc(100% + #{$width});\\n        height: calc(100% + #{$width});\\n        top: calc(-0.5 * #{$width});\\n        left: calc(-0.5 * #{$width});\\n        filter: var(--distortion-filter);\\n    \\n        border: solid;\\n        background-color: #0000;\\n        border-radius: inherit;\\n        border-width: #{$width};\\n        border-color: #{$color};\\n    }\\n}\\n\\n@mixin distortion-background($color:var(--background-color)) {\\n    position: relative;\\n\\n    &:before {\\n        content: '';\\n        position: absolute;\\n        z-index: -1;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        height: 100%;\\n        filter: var(--distortion-filter);\\n\\n        border-radius: inherit;\\n        background-color: #{$color};\\n    }\\n}\\n\",\"@use \\\"../../mixins.module.scss\\\" as mixins;\\n\\n.settings-panel {\\n    @include mixins.distortion-background(var(--secondary-color));\\n\\n    display: grid;\\n    grid-template-columns: minmax(4rem, auto) minmax(4rem, 0.6fr) minmax(3rem, 0.3fr);\\n\\n    gap: 0.5lh 1lh;\\n\\n    color: var(--hi-vis-gray);\\n\\n    border-radius: 10px;\\n    font-size: 0.7em;\\n\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    z-index: 2;\\n    font-weight: 600;\\n\\n    padding: 1em 1em 1em 3em;\\n\\n    > button:not([class]) {\\n        color: var(--accent-3);\\n    }\\n\\n    input[type=\\\"checkbox\\\"] {\\n        justify-self: center;\\n    }\\n\\n    label {\\n        margin: auto 0 auto 0.5em;\\n        color: var(--accent-1);\\n        grid-column: 1;\\n    }\\n\\n    /* drag handle */\\n    > svg:first-child {\\n        position: absolute;\\n        padding: 1rem 0 1rem 0.5rem;\\n        width: 2rem;\\n        height: 100%;\\n\\n        cursor: grab;\\n        fill: var(--background-color);\\n    }\\n\\n    &:before {\\n        box-shadow: color-mix(in oklch, var(--background-color) 50%, black) 6px 6px 4px;\\n    }\\n\\n    &.disabled {\\n        row-gap: 0;\\n\\n        >:not(button:first-of-type):not(svg:first-of-type),\\n        >:not(button:first-of-type):before {\\n            border-top-width: 0;\\n            border-bottom-width: 0;\\n            padding-top: 0;\\n            padding-bottom: 0;\\n            margin-top: 0;\\n            margin-bottom: 0;\\n            height: 0;\\n            min-height: 0;\\n            overflow: clip;\\n        }\\n    }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"settings-panel\": `hqgt3TMMzCkkoelepz55`,\n\t\"disabled\": `lWIZ5qssR5cpP_5U_H3j`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","export const toWorldDir: string = /* wgsl */`\n    fn toWorldDir(coord: vec3u, size: u32) -> vec3f {\n        let uv = (2.0 / f32(size)) * (vec2f(coord.xy) + 0.5) - 1.0;\n\n        var pos: vec3f;\n        switch (coord.z) {\n            case 0  { pos = vec3(  1.0, -uv.y, -uv.x); }\n            case 1  { pos = vec3( -1.0, -uv.y,  uv.x); }\n            case 2  { pos = vec3( uv.x,   1.0,  uv.y); }\n            case 3  { pos = vec3( uv.x,  -1.0, -uv.y); }\n            case 4  { pos = vec3( uv.x, -uv.y,   1.0); }\n            default { pos = vec3(-uv.x, -uv.y,  -1.0); }\n        }\n\n        return normalize(pos);\n    }\n\n    fn toWorldDirF32(coord: vec2f, face: u32) -> vec3f {\n        let uv = 2.0 * coord - 1.0;\n\n        var pos: vec3f;\n        switch (face) {\n            case 0  { pos = vec3(  1.0, -uv.y, -uv.x); }\n            case 1  { pos = vec3( -1.0, -uv.y,  uv.x); }\n            case 2  { pos = vec3( uv.x,   1.0,  uv.y); }\n            case 3  { pos = vec3( uv.x,  -1.0, -uv.y); }\n            case 4  { pos = vec3( uv.x, -uv.y,   1.0); }\n            default { pos = vec3(-uv.x, -uv.y,  -1.0); }\n        }\n\n        return normalize(pos);\n    }\n`;\n\n/**\n *  WGSL functions for sampling across adjacent faces of a cubemap\n */\nexport const cubemapSampleConversions: string = /* wgsl */`\n    const INVALID_FACE = 6;\n    const INVALID_IDX = 4294967295u; // max u32\n\n    fn cubeSampleCoord(coord: vec3i, w: u32) -> vec3u {\n        // a flattened matrix of destination faces based on\n        // starting face and direction\n        const dfaces = array(\n            //                               I  Up Down Left Right Invalid\n            0, 2, 3, 4, 5, INVALID_FACE, // +X  +Y   -Y   +Z   -Z   \n            1, 2, 3, 5, 4, INVALID_FACE, // -X  +Y   -Y   -Z   +Z \n            2, 5, 4, 1, 0, INVALID_FACE, // +Y  -Z   +Z   -X   +X \n            3, 4, 5, 1, 0, INVALID_FACE, // -Y  +Z   -Z   -X   +X \n            4, 2, 3, 1, 0, INVALID_FACE, // +Z  +Y   -Y   -X   +X \n            5, 2, 3, 0, 1, INVALID_FACE, // -Z  +Y   -Y   +X   -X \n        );\n\n        // a flattened matrix in the same form as dfaces\n        // giving the index of the dmat array containing \n        // the transformation from the starting face to \n        // the destination face\n        const dindices = array(\n            0, 1,  2,  3,  4,  0,\n            0, 5,  6,  3,  4,  0,\n            0, 7,  8,  9,  10, 0,\n            0, 11, 12, 13, 14, 0,\n            0, 11, 8,  3,  4,  0,\n            0, 7,  12, 3,  4,  0,\n        );\n\n        // 2x4 matrices transforming a coordinate vector <u, v, w, 1>\n        // from one face to another\n        const dmats = array(\n            array(// 0\n                vec4(1, 0, 0, 0),   // u = u\n                vec4(0, 1, 0, 0),   // v = v\n            ),\n            array(// 1\n                vec4(0, 1, 1, 0),   // u = v + w\n                vec4(-1, 0, 1, -1), // v = w - u - 1\n            ),\n            array(// 2\n                vec4(0, -1, 2, -1), // u = 2w - v - 1\n                vec4(1, 0, 0, 0),   // v = u\n            ),\n            array(// 3\n                vec4(1, 0, 1, 0),   // u = u + w\n                vec4(0, 1, 0, 0),   // v = v\n            ),\n            array(// 4\n                vec4(1, 0, -1, 0),  // u = u - w\n                vec4(0, 1, 0, 0),   // v = v\n            ),\n            array(// 5\n                vec4(0, -1, 0, -1), // u = -v - 1\n                vec4(1, 0, 0, 0),   // v = u\n            ),\n            array(// 6\n                vec4(0, 1, -1, 0),  // u = v - w\n                vec4(-1, 0, 1, -1), // v = w - u - 1\n            ),\n            array(// 7\n                vec4(-1, 0, 1, -1), // u = w - u - 1\n                vec4(0, -1, 0, -1), // v = -v - 1\n            ),\n            array(// 8\n                vec4(1, 0, 0, 0),   // u = u\n                vec4(0, 1, -1, 0),  // v = v - w\n            ),\n            array(// 9\n                vec4(0, 1, 0, 0),   // u = v\n                vec4(-1, 0, 0, -1), // v = -u - 1\n            ),\n            array(// 10\n                vec4(0, -1, 1, -1), // u = w - v - 1\n                vec4(1, 0, -1, 0),  // v = u - w\n            ),\n            array(// 11\n                vec4(1, 0, 0, 0),   // u = u\n                vec4(0, 1, 1, 0),   // v = v + w\n            ),\n            array(// 12\n                vec4(-1, 0, 1, -1), // u = w - u - 1\n                vec4(0, -1, 2, -1), // v = 2w - v - 1\n            ),\n            array(// 13\n                vec4(0, -1, 1, -1), // u = w - v - 1\n                vec4(1, 0, 1, 0),   // v = u + w\n            ),\n            array(// 14\n                vec4(0, 1, 0, 0),   // u = v\n                vec4(-1, 0, 2, -1), // v = 2w - u - 1\n            ),\n        );\n\n        let iw = i32(w);\n\n        var dir = 0;\n        if (\n            coord.y >= iw * 2 - 1 \n            || coord.y <= -iw \n            || coord.x >= iw * 2 - 1 \n            || coord.x <= -iw\n        ) {\n            dir = 5;\n        } else {\n            if (coord.y < 0) {\n                dir = 1;\n            } else if (coord.y >= iw) {\n                dir = 2;\n            }\n            if (coord.x < 0) {\n                dir = select(5, 3, dir == 0);\n            } else if (coord.x >= iw) {\n                dir = select(5, 4, dir == 0);\n            }\n        }\n\n        let idx = coord.z * 6 + dir;\n        let samp = vec4(coord.xy, iw, 1);\n        let dmat = dmats[dindices[idx]];\n        return vec3u(vec3(dot(dmat[0], samp), dot(dmat[1], samp), dfaces[idx]));\n    }\n\n    fn cubeCoordToIdx(coord: vec3u, w: u32) -> u32 {\n        return coord.x + coord.y * w + coord.z * w * w;\n    }\n\n    fn cubeIdxToCoord(idx: u32, w: u32) -> vec3u {\n        let w2 = w * w;\n        let fidx = idx % w2;\n        return vec3u(fidx % w, fidx / w, idx / w2);\n    }\n\n    fn cubeSampleIdx(uvf: vec3i, w: u32) -> u32 {\n        let coord = cubeSampleCoord(uvf, w);\n        return select(\n            cubeCoordToIdx(coord, w), \n            INVALID_IDX, \n            coord.z == INVALID_FACE,\n        );\n    }\n`;\n","export type UnknownObject = Record<PropertyKey, unknown>;\r\n\r\nexport function mapValues<Input, ObjectType extends Partial<Record<keyof ObjectType, Input>>, Output>(\r\n    obj: ObjectType,\r\n    fn: (val: Input) => Output,\r\n) {\r\n    const entries = Object.entries(obj) as [keyof ObjectType, Input][];\r\n    const mapped = entries.map(([key, val]) => [key, fn(val)]);\r\n    return Object.fromEntries(mapped) as { [K in keyof ObjectType]: Output };\r\n}\r\n\r\nexport function clamp(num: number, min: number, max: number) {\r\n    return Math.max(min, Math.min(max, num));\r\n}\r\n\r\nexport function padCheck(str: string | undefined) {\r\n    return str == null || str === '' ? '' : ` ${str}`;\r\n}\r\n\r\nexport function padTemplate(strings: TemplateStringsArray, ...values: (string | undefined)[]) {\r\n    const result = [strings[0]];\r\n    values.forEach((key, i) => result.push(padCheck(key), strings[i + 1]));\r\n    return result.join('');\r\n}\r\n\r\nexport function range(n: number) {\r\n    return [...Array(n).keys()];\r\n}\r\n\r\nexport function mapRange<T>(n: number, fn: (i: number) => T) {\r\n    return range(n).map(fn);\r\n}\r\n\r\nexport function debounce<Args extends Array<unknown>>(callback: (...args: Args) => unknown, delay: number) {\r\n    let tid: ReturnType<typeof setTimeout> | undefined;\r\n    return function (...args: Args) {\r\n        const ctx = self;\r\n        if (tid != null) clearTimeout(tid);\r\n        tid = setTimeout(() => { callback.apply(ctx, args); }, delay);\r\n    };\r\n};\r\n\r\n// adapted from https://stackoverflow.com/a/60702475/17108769\r\nexport function binaryInsert<T>(\r\n    arr: T[],\r\n    element: T,\r\n    comparator: (a: T, b: T) => number,\r\n    left = 0,\r\n    right = arr.length - 1,\r\n) {\r\n    if (right - left <= 1) {\r\n        if (comparator(element, arr[left] ?? element) < 0) arr.splice(left, 0, element);\r\n        else if (comparator(element, arr[right] ?? element) > 0) arr.splice(right + 1, 0, element);\r\n        else arr.splice(right, 0, element);\r\n    } else {\r\n        const pivot = Math.floor((right - left) / 2) + left;\r\n        if (comparator(element, arr[pivot]) < 0) binaryInsert(arr, element, comparator, left, pivot);\r\n        else binaryInsert(arr, element, comparator, pivot, right);\r\n    }\r\n}\r\n\r\nexport function isObject(val: unknown): val is NonNullable<UnknownObject> {\r\n    return typeof val === 'object' && val != null;\r\n}\r\n","import blit from '../shaders/blit-vert.shader';\r\n\r\nconst label = 'tonemap pass';\r\n\r\nexport default class TonemapPass {\r\n    static readonly code = /* wgsl */`\r\n        @group(0) @binding(0) var colorTexture: texture_2d<f32>;\r\n\r\n        ${blit}\r\n\r\n        fn fitRRTAndODT(color: vec3f) -> vec3f {\r\n            let a = color * (color + 0.0245786) - 0.000090537;\r\n            let b = color * (0.983729 * color + 0.4329510) + 0.238081;\r\n            return a / b;\r\n        }\r\n\r\n        fn aces_tone_map(hdr: vec3f) -> vec3f {\r\n            const inputMat = mat3x3(\r\n                0.59719, 0.07600, 0.02840,\r\n                0.35458, 0.90834, 0.13383,\r\n                0.04823, 0.01566, 0.83777,\r\n            );\r\n            const outputMat = mat3x3(\r\n                1.60475, -0.10208, -0.00327,\r\n                -0.53108, 1.10813, -0.07276,\r\n                -0.07367, -0.00605, 1.07602,\r\n            );\r\n            const boost = 1.0 / 0.6;\r\n\r\n            var color = hdr * boost;\r\n            color = inputMat * color;\r\n            color = fitRRTAndODT(color);\r\n            color = outputMat * color;\r\n            return saturate(color);\r\n        }\r\n\r\n        fn linear_to_srgb(color: vec3f) -> vec3f {\r\n            return pow(color, vec3(1.0/2.2));\r\n        }\r\n\r\n        @fragment\r\n        fn fs(@builtin(position) pos: vec4f) -> @location(0) vec4f {\r\n            let uv = vec2<i32>(floor(pos.xy));\r\n\r\n            var color = textureLoad(colorTexture, uv, 0).rgb;\r\n            color = aces_tone_map(color);\r\n            color = linear_to_srgb(color);\r\n            return vec4f(color, 1.0);\r\n        }\r\n    `;\r\n\r\n    static readonly bindGroupLayoutDescriptor: GPUBindGroupLayoutDescriptor = {\r\n        label,\r\n        entries: [{\r\n            binding: 0,\r\n            texture: { sampleType: 'float', viewDimension: '2d' },\r\n            visibility: GPUShaderStage.FRAGMENT,\r\n        }],\r\n    };\r\n\r\n    colorAttachment: GPURenderPassColorAttachment = {\r\n        loadOp: 'load',\r\n        storeOp: 'store',\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        view: undefined!,\r\n    };\r\n\r\n    passDescriptor: GPURenderPassDescriptor = {\r\n        label,\r\n        colorAttachments: [this.colorAttachment],\r\n    };\r\n\r\n    pipeline: GPURenderPipeline;\r\n    pipelineDescriptor: GPURenderPipelineDescriptor;\r\n\r\n    renderTarget: GPUColorTargetState;\r\n    bindgroupLayout: GPUBindGroupLayout;\r\n    bindgroup?: GPUBindGroup;\r\n\r\n    constructor(\r\n        public device: GPUDevice,\r\n        format: GPUTextureFormat,\r\n    ) {\r\n        this.renderTarget = { format };\r\n        this.bindgroupLayout = device.createBindGroupLayout(TonemapPass.bindGroupLayoutDescriptor);\r\n        const module = device.createShaderModule({ label, code: TonemapPass.code });\r\n\r\n        this.pipelineDescriptor = {\r\n            label,\r\n            layout: device.createPipelineLayout({\r\n                label,\r\n                bindGroupLayouts: [this.bindgroupLayout],\r\n            }),\r\n            vertex: {\r\n                module,\r\n                entryPoint: 'vs',\r\n            },\r\n            fragment: {\r\n                module,\r\n                entryPoint: 'fs',\r\n                targets: [this.renderTarget],\r\n            },\r\n        };\r\n\r\n        this.pipeline = device.createRenderPipeline(this.pipelineDescriptor);\r\n    }\r\n\r\n    updateInput(input: GPUTextureView) {\r\n        this.bindgroup = this.device.createBindGroup({\r\n            label,\r\n            layout: this.bindgroupLayout,\r\n            entries: [{\r\n                binding: 0,\r\n                resource: input,\r\n            }],\r\n        });\r\n    }\r\n\r\n    render(encoder: GPUCommandEncoder, output: GPUTexture) {\r\n        if (this.bindgroup == null) return;\r\n\r\n        if (this.renderTarget.format !== output.format) {\r\n            this.renderTarget.format = output.format;\r\n            this.pipeline = this.device.createRenderPipeline(this.pipelineDescriptor);\r\n        }\r\n\r\n        this.colorAttachment.view = output.createView({ dimension: '2d' });\r\n\r\n        const pass = encoder.beginRenderPass(this.passDescriptor);\r\n        pass.setPipeline(this.pipeline);\r\n        pass.setBindGroup(0, this.bindgroup);\r\n        pass.draw(3);\r\n        pass.end();\r\n    }\r\n}\r\n","import GlobalUniforms from './global-uniforms';\n\nconst label = 'skybox pass';\n\nexport default class SkyboxPass {\n    static readonly code = /* wgsl */`\n        ${GlobalUniforms.code(0)}\n\n        struct SkyboxUniforms {\n            mipBias: f32,\n        };\n\n        @group(1) @binding(0) var environmentTexture: texture_cube<f32>;\n        @group(1) @binding(1) var depthTexture: texture_depth_2d;\n        @group(1) @binding(2) var environmentSampler: sampler;\n        @group(1) @binding(3) var<uniform> skyboxUniforms: SkyboxUniforms;\n\n        struct Varyings {\n            @builtin(position) position: vec4f,\n            @location(0) pos: vec4f,\n            @location(1) mipBias: f32,\n        };\n    \n        @vertex \n        fn vs(@builtin(vertex_index) vNdx: u32) -> Varyings {\n            const pos = array(\n                vec2(-1.0,  3.0),\n                vec2(-1.0, -1.0),\n                vec2( 3.0, -1.0),\n            );\n    \n            var vsOut: Varyings;\n            vsOut.position = vec4(pos[vNdx], 0.0, 1.0);\n    \n            // Ignores the camera's translation without needing a separate rotation matrix.\n            vsOut.pos = globals.inverseViewToClip * vsOut.position;\n            let w = vsOut.pos.w;\n            vsOut.pos.w = 0.0;\n            vsOut.pos = globals.inverseWorldToView * vsOut.pos;\n            vsOut.pos.w = w;\n\n            vsOut.mipBias = clamp(skyboxUniforms.mipBias, 0, f32(textureNumLevels(environmentTexture)));\n            return vsOut;\n        }\n\n        @fragment\n        fn fs(in: Varyings) -> @location(0) vec4f {\n            let dimensions = textureDimensions(depthTexture);\n            let uv = min(vec2<u32>(floor(in.position.xy)), dimensions - 1);\n            let depth = textureLoad(depthTexture, uv, 0);\n            if (depth < 1.0) { discard; }\n\n            let t = normalize(in.pos.xyz / in.pos.w);\n            let color = textureSampleLevel(environmentTexture, environmentSampler, t, in.mipBias).rgb;\n            return vec4(color, 1.0);\n        }\n    `;\n\n    bindgroupLayout: GPUBindGroupLayout;\n    pipelineLayout: GPUPipelineLayout;\n    shader: GPUShaderModule;\n\n    linearSampler: GPUSampler;\n    nearestSampler: GPUSampler;\n    textureBindgroup?: GPUBindGroup;\n\n    uniformBuffer: GPUBuffer;\n    uniformArray = new Float32Array(8);\n\n    pipeline?: GPURenderPipeline;\n\n    #skyTexture?: GPUTextureView;\n    #depthTexture?: GPUTextureView;\n    #targetFormat!: GPUTextureFormat;\n    #useNearestSample = false;\n\n    get mipLevel() { return this.uniformArray[0]; }\n    set mipLevel(val: number) {\n        if (val === this.uniformArray[0]) return;\n        this.uniformArray[0] = val;\n        this.device.queue.writeBuffer(this.uniformBuffer, 0, this.uniformArray, 0, 1);\n    }\n\n    get useNearestSample() { return this.#useNearestSample; }\n    set useNearestSample(val: boolean) {\n        if (val === this.#useNearestSample) return;\n        this.#useNearestSample = val;\n        this.#updateBindgroup();\n    }\n\n    get targetFormat() { return this.#targetFormat; }\n    set targetFormat(format: GPUTextureFormat) {\n        if (format === this.#targetFormat) return;\n        this.#targetFormat = format;\n\n        this.pipeline = this.device.createRenderPipeline({\n            label,\n            layout: this.pipelineLayout,\n            vertex: {\n                entryPoint: 'vs',\n                module: this.shader,\n            },\n            fragment: {\n                entryPoint: 'fs',\n                targets: [{ format }],\n                module: this.shader,\n            },\n        });\n    }\n\n    set skyTexture(skybox: GPUTextureView) {\n        if (skybox === this.#skyTexture) return;\n        this.#skyTexture = skybox;\n        this.#updateBindgroup();\n    }\n\n    set depthTexture(depthTexture: GPUTextureView) {\n        if (depthTexture === this.#depthTexture) return;\n        this.#depthTexture = depthTexture;\n        this.#updateBindgroup();\n    }\n\n    target: GPURenderPassColorAttachment = {\n        clearValue: { r: 0.0, g: 0.0, b: 0.0, a: 1.0 },\n        loadOp: 'clear',\n        storeOp: 'store',\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        view: undefined!,\n    };\n\n    readonly passDescriptor: GPURenderPassDescriptor = { colorAttachments: [this.target] };\n\n    constructor(\n        public device: GPUDevice,\n        public globals: GlobalUniforms,\n        targetFormat: GPUTextureFormat,\n        skybox?: GPUTextureView,\n    ) {\n        this.bindgroupLayout = device.createBindGroupLayout({\n            label,\n            entries: [\n                {\n                    binding: 0,\n                    texture: { viewDimension: 'cube' },\n                    visibility: GPUShaderStage.FRAGMENT | GPUShaderStage.VERTEX,\n                },\n                {\n                    binding: 1,\n                    texture: {\n                        viewDimension: '2d',\n                        sampleType: 'depth',\n                    },\n                    visibility: GPUShaderStage.FRAGMENT,\n                },\n                {\n                    binding: 2,\n                    visibility: GPUShaderStage.FRAGMENT,\n                    sampler: {},\n                },\n                {\n                    binding: 3,\n                    visibility: GPUShaderStage.VERTEX,\n                    buffer: { type: 'uniform' },\n                },\n            ],\n        });\n\n        this.linearSampler = device.createSampler({\n            minFilter: 'linear',\n            magFilter: 'linear',\n            mipmapFilter: 'linear',\n        });\n\n        this.nearestSampler = device.createSampler({\n            minFilter: 'nearest',\n            magFilter: 'nearest',\n            mipmapFilter: 'nearest',\n        });\n\n        this.shader = device.createShaderModule({\n            code: SkyboxPass.code,\n            label,\n        });\n\n        this.pipelineLayout = device.createPipelineLayout({\n            label,\n            bindGroupLayouts: [\n                globals.bindGroupLayout,\n                this.bindgroupLayout,\n            ],\n        });\n\n        this.uniformBuffer = device.createBuffer({\n            label,\n            size: 32,\n            usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.UNIFORM,\n        });\n\n        this.targetFormat = targetFormat;\n        if (skybox != null) this.skyTexture = skybox;\n    }\n\n    render(pass: GPURenderPassEncoder) {\n        if (this.textureBindgroup == null || this.pipeline == null) return false;\n        pass.setPipeline(this.pipeline);\n        pass.setBindGroup(0, this.globals.bindgroup);\n        pass.setBindGroup(1, this.textureBindgroup);\n        pass.draw(3);\n        return true;\n    }\n\n    #updateBindgroup() {\n        if (this.#skyTexture == null || this.#depthTexture == null) return;\n\n        this.textureBindgroup = this.device.createBindGroup({\n            label,\n            layout: this.bindgroupLayout,\n            entries: [\n                {\n                    binding: 0,\n                    resource: this.#skyTexture,\n                },\n                {\n                    binding: 1,\n                    resource: this.#depthTexture,\n                },\n                {\n                    binding: 2,\n                    resource: this.useNearestSample\n                        ? this.nearestSampler\n                        : this.linearSampler,\n                },\n                {\n                    binding: 3,\n                    resource: { buffer: this.uniformBuffer },\n                },\n            ],\n        });\n    }\n}\n","type TextureData = {\n    format: GPUTextureFormat,\n    name: string,\n    clearValue?: GPUColor,\n    texture?: GPUTexture,\n    view?: GPUTextureView,\n};\n\nexport const enum GBufferGroupIndices {\n    Normal = 0,\n    Albedo,\n    Emission,\n    MetallicRoughness,\n    Depth,\n}\n\nexport default class GBuffer {\n    static readonly code = (group: number) => /* wgsl */`\n        @group(${group}) @binding(${GBufferGroupIndices.Normal}) \n        var gBufferNormal: texture_2d<f32>;\n        \n        @group(${group}) @binding(${GBufferGroupIndices.Albedo}) \n        var gBufferAlbedo: texture_2d<f32>;\n        \n        @group(${group}) @binding(${GBufferGroupIndices.Emission}) \n        var gBufferEmission: texture_2d<f32>;\n\n        @group(${group}) @binding(${GBufferGroupIndices.MetallicRoughness}) \n        var gBufferMetallicRoughness: texture_2d<f32>;\n        \n        @group(${group}) @binding(${GBufferGroupIndices.Depth})  \n        var gBufferDepth: texture_depth_2d;\n    `;\n\n    static readonly layoutDescription: GPUBindGroupLayoutDescriptor = {\n        label: 'gbuffer bind group layout',\n        entries: [\n            {\n                binding: GBufferGroupIndices.Normal,\n                visibility: GPUShaderStage.FRAGMENT,\n                texture: { sampleType: 'unfilterable-float' },\n            },\n            {\n                binding: GBufferGroupIndices.Albedo,\n                visibility: GPUShaderStage.FRAGMENT,\n                texture: { sampleType: 'float' },\n            },\n            {\n                binding: GBufferGroupIndices.Emission,\n                visibility: GPUShaderStage.FRAGMENT,\n                texture: { sampleType: 'float' },\n            },\n            {\n                binding: GBufferGroupIndices.MetallicRoughness,\n                visibility: GPUShaderStage.FRAGMENT,\n                texture: { sampleType: 'unfilterable-float' },\n            },\n            {\n                binding: GBufferGroupIndices.Depth,\n                visibility: GPUShaderStage.FRAGMENT,\n                texture: { sampleType: 'depth' },\n            },\n        ],\n    };\n\n    normal = this.createTexture({\n        format: 'rgba16float',\n        name: 'normal',\n        clearValue: { r: 0, g: 0, b: 1, a: 1 },\n    });\n\n    albedo = this.createTexture({\n        format: 'rgba8unorm',\n        name: 'albedo',\n        clearValue: { r: 0, g: 0, b: 0, a: 1 },\n    });\n\n    emission = this.createTexture({\n        format: 'rgba16float',\n        name: 'emission',\n        clearValue: { r: 0, g: 0, b: 0, a: 1 },\n    });\n\n    metallicRoughness = this.createTexture({\n        format: 'rg8unorm',\n        name: 'metallic roughness',\n        clearValue: { r: 0, g: 0, b: 0, a: 0 },\n    });\n\n    depth = this.createTexture({\n        format: 'depth32float',\n        name: 'depth',\n    });\n\n    textures = [\n        this.normal,\n        this.albedo,\n        this.emission,\n        this.metallicRoughness,\n        this.depth,\n    ];\n\n    targets = this.textures.slice(0, -1).map(({ format }) => ({ format }));\n\n    bindGroupLayout = this.device.createBindGroupLayout(GBuffer.layoutDescription);\n    bindgroup = this.updateBindgroup();\n    passDescriptor = this.updatePassDescriptor();\n\n    get size() { return this._size; }\n    set size(value: GPUExtent3D) {\n        this._size = value;\n\n        this.textures.forEach((tex) => { this.createTexture(tex); });\n        this.bindgroup = this.updateBindgroup();\n        this.passDescriptor = this.updatePassDescriptor();\n    }\n\n    constructor(\n        public readonly device: GPUDevice,\n        private _size: GPUExtent3D,\n    ) { }\n\n    updateBindgroup() {\n        const entries = this.textures.map(({ view }, idx) => ({\n            binding: idx,\n            resource: view,\n        }));\n\n        return this.device.createBindGroup({\n            label: 'gbuffer bind group',\n            layout: this.bindGroupLayout,\n            entries,\n        });\n    }\n\n    updatePassDescriptor() {\n        const colorAttachments = this.textures.slice(0, -1).map(({ view, clearValue }) => ({\n            view: view,\n            clearValue: clearValue,\n            loadOp: 'clear',\n            storeOp: 'store',\n        } satisfies GPURenderPassColorAttachment));\n\n        return {\n            label: 'forward pass encoder',\n            colorAttachments,\n            depthStencilAttachment: {\n                view: this.depth.view,\n                depthLoadOp: 'clear',\n                depthStoreOp: 'store',\n                depthClearValue: 1.0,\n            },\n        } satisfies GPURenderPassDescriptor;\n    }\n\n    createTexture(tex: TextureData) {\n        const label = `gbuffer ${tex.name}`;\n        tex.texture = this.device.createTexture({\n            label,\n            size: this._size,\n            format: tex.format,\n            usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,\n        });\n        tex.view = tex.texture.createView({ label });\n        return tex as TextureData & Required<Pick<TextureData, 'texture' | 'view'>>;\n    }\n}\n","export default /* wgsl */`\n    fn hammersley(i: u32, N: u32) -> vec2f {\n        var bits = (i << 16u) | (i >> 16u);\n        bits = ((bits & 0x55555555u) << 1u) | ((bits & 0xAAAAAAAAu) >> 1u);\n        bits = ((bits & 0x33333333u) << 2u) | ((bits & 0xCCCCCCCCu) >> 2u);\n        bits = ((bits & 0x0F0F0F0Fu) << 4u) | ((bits & 0xF0F0F0F0u) >> 4u);\n        bits = ((bits & 0x00FF00FFu) << 8u) | ((bits & 0xFF00FF00u) >> 8u);\n        let rdi = f32(bits) * 2.3283064365386963e-10; // / 0x100000000\n        return vec2(f32(i) / f32(N), rdi);\n    }\n\n    fn tangentSampleGGX(N: vec3f, Xi: vec2f, a2: f32) -> vec3f {\n        const PI = 3.14159265359;\n\n        let phi = 2.0 * PI * Xi.x;\n        let cosTheta = sqrt((1.0 - Xi.y) / (1.0 + (a2 - 1.0) * Xi.y));\n        let sinTheta = sqrt(1.0 - cosTheta * cosTheta);\n        \n        var H: vec3f;\n        H.x = cos(phi) * sinTheta;\n        H.y = sin(phi) * sinTheta;\n        H.z = cosTheta;\n\n        let up = select(vec3(0.0, 0.0, 1.0), vec3(1.0, 0.0, 0.0), abs(N.z) >= 0.999);\n        let T = normalize(cross(up, N));\n        let B = cross(N, T);\n\n        let S = T * H.x + B * H.y + N * H.z;\n        return normalize(S);\n    }\n\n    fn vPartLambda(NoV: f32, a2: f32) -> f32 {\n        return sqrt(NoV * NoV * (1.0 - a2) + a2);\n    }\n\n    fn vCorrelatedGGX(NoV: f32, NoL: f32, a2: f32) -> f32 {\n        let GGXV = NoL * vPartLambda(NoV, a2);\n        let GGXL = NoV * vPartLambda(NoL, a2);\n        return 0.5 / (GGXV + GGXL);\n    }\n\n    fn dS2GGX(NoH: f32, a2: f32) -> f32 {\n        let s = (a2 - 1.0) * NoH * NoH + 1.0;\n        return s * s;\n    }\n\n    fn dGGX(NoH: f32, a2: f32) -> f32 {\n        const invPI = 1.0 / 3.14159265359;\n\n        let s2 = dS2GGX(NoH, a2);\n        return invPI * select(1, a2 / s2, a2 != s2);\n    }\n`;\n","import brdfs from '../../shaders/brdfs.shader';\nimport blit from '../../shaders/blit-vert.shader';\n\nconst code = /* wgsl */ `\noverride SAMPLE_COUNT: u32 = 1024u;\n\n${blit}\n${brdfs}\n\n@fragment\nfn fs(@location(0) uv: vec2f) -> @location(0) vec4f  {\n    let NoV = uv.x;\n    let roughness = uv.y;\n    let alpha = roughness * roughness;\n    let a2 = alpha * alpha;\n    let V = vec3(sqrt(1.0 - NoV * NoV), NoV, 0.0);\n    let N = vec3(0.0, 1.0, 0.0);\n\n    var brdf = vec2(0.0);\n\n    for (var i = 0u; i < SAMPLE_COUNT; i++) {\n        let Xi = hammersley(i, SAMPLE_COUNT);\n        let H = tangentSampleGGX(N, Xi, a2);\n        let L = normalize(2.0 * dot(V, H) * H - V);\n\n        let NoL = saturate(L.y);\n        let NoH = saturate(H.y);\n        let VoH = saturate(dot(V, H));\n\n        if (NoL > 0.0) {\n            let pdf = vCorrelatedGGX(NoV, NoL, a2) * VoH * NoL / NoH;\n            let Fc = pow(1.0 - VoH, 5.0);\n            brdf += vec2(1.0 - Fc, Fc) * pdf;\n        }\n    }\n\n    return vec4f(brdf * 4.0 / f32(SAMPLE_COUNT), 0.0, 1.0);\n}\n`;\n\nexport type BfrdLutDescriptor = {\n    device: GPUDevice,\n    label?: string,\n    width?: number,\n    height?: number,\n    format?: GPUTextureFormat,\n    sampleCount?: number,\n};\n\nexport function createBfrdLut({\n    device,\n    label,\n    sampleCount,\n    width = 1024,\n    height = 1024,\n    format = 'rg32float',\n}: BfrdLutDescriptor) {\n    const bfrdLut = device.createTexture({\n        label,\n        format,\n        dimension: '2d',\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,\n        size: { width, height },\n    });\n\n    const module = device.createShaderModule({ label: 'bfrdLut shader', code });\n\n    const pipeline = device.createRenderPipeline({\n        label: 'bfrd lut pipeline',\n        layout: 'auto',\n        vertex: {\n            entryPoint: 'vs',\n            module,\n        },\n        fragment: {\n            entryPoint: 'fs',\n            targets: [{ format }],\n            constants: sampleCount ? { SAMPLE_COUNT: sampleCount } : undefined,\n            module,\n        },\n    });\n\n    const encoder = device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n        label: 'brdf lut render pass',\n        colorAttachments: [{\n            view: bfrdLut.createView(),\n            loadOp: 'clear',\n            storeOp: 'store',\n        }],\n    });\n\n    pass.setPipeline(pipeline);\n    pass.draw(3);\n    pass.end();\n\n    device.queue.submit([encoder.finish()]);\n\n    return bfrdLut;\n}\n","import { toWorldDir } from '../../shaders/cubemap-sampling.shader';\nimport brdfs from '../../shaders/brdfs.shader';\nimport blit from '../../shaders/blit-vert.shader';\nimport { createAndCopyBuffer } from '../../utils/data-copy';\n\nconst code = /* wgsl */`\n    const PI = 3.14159265359;\n\n    override SAMPLES: u32 = 2048u;\n\n    struct Params {\n        face: u32,\n        size: u32,\n    }\n\n    @group(0) @binding(0) var environment: texture_cube<f32>;\n    @group(0) @binding(1) var environmentSampler: sampler;\n    @group(0) @binding(2) var<uniform> params: Params;\n\n    ${toWorldDir}\n    ${brdfs}\n    ${blit}\n\n    @fragment\n    fn fs(@builtin(position) pos: vec4f) -> @location(0) vec4f {\n        let coord = vec3u(vec2u(floor(pos.xy)), params.face);\n        let size = f32(textureDimensions(environment).x);\n        let lodFactor = 6.0 * size * size / f32(SAMPLES);\n\n        let N = toWorldDir(coord, params.size);\n        let right = normalize(cross(vec3(0.0, 1.0, 0.0), N));\n        let up = normalize(cross(N, right));\n        let TBN = mat3x3(right, up, N);\n        \n        var irradiance = vec3(0.0);\n        var samples = 0.0;\n\n        for (var i = 0u; i < SAMPLES; i += 1) {\n            let xi = hammersley(i, SAMPLES);\n            let cosTheta = sqrt(1.0 - xi.y);\n            let sinTheta = sqrt(xi.y);\n            let phi = 2.0 * PI * xi.x;\n            let invPdf = PI / cosTheta;\n            let localDir = normalize(vec3(sinTheta * cos(phi), sinTheta * sin(phi), cosTheta));\n            let worldDir = TBN * localDir;\n            let lod = 0.5 * log2(lodFactor * invPdf);\n            irradiance += textureSampleLevel(environment, environmentSampler, worldDir, lod).rgb;\n        }\n\n        return vec4(irradiance / f32(SAMPLES), 1.0);\n    }\n`;\n\nexport type IrradianceTextureDescriptor = {\n    device: GPUDevice,\n    texture: GPUTexture,\n    label?: string,\n    usage?: GPUTextureUsageFlags,\n    samples?: number,\n    outputWidth?: number,\n    outputFormat?: GPUTextureFormat,\n    outputTexture?: GPUTexture,\n};\n\nexport default function createIrradianceTexture({\n    device,\n    texture,\n    label = 'irradiance',\n    usage = 0,\n    samples = 2048,\n    outputWidth,\n    outputFormat,\n    outputTexture,\n}: IrradianceTextureDescriptor) {\n    const format = outputTexture?.format ?? outputFormat ?? texture.format;\n    const width = outputTexture?.width ?? outputWidth ?? 64;\n\n    const bindgroupLayout = device.createBindGroupLayout({\n        label,\n        entries: [\n            {\n                binding: 0,\n                visibility: GPUShaderStage.FRAGMENT,\n                texture: { viewDimension: 'cube' },\n            },\n            {\n                binding: 1,\n                visibility: GPUShaderStage.FRAGMENT,\n                sampler: {},\n            },\n            {\n                binding: 2,\n                visibility: GPUShaderStage.FRAGMENT,\n                buffer: { type: 'uniform' },\n            },\n        ],\n    });\n\n    const sampler = device.createSampler({ minFilter: 'linear', magFilter: 'linear', mipmapFilter: 'linear' });\n\n    const irradianceTexture = outputTexture?.depthOrArrayLayers === 6\n        ? outputTexture\n        : device.createTexture({\n                label,\n                format,\n                dimension: '2d',\n                usage: GPUTextureUsage.RENDER_ATTACHMENT | usage,\n                size: { width, height: width, depthOrArrayLayers: 6 },\n            });\n\n    const params = new Uint32Array([0, irradianceTexture.width]);\n    const paramBuffer = createAndCopyBuffer(\n        params,\n        GPUBufferUsage.COPY_DST | GPUBufferUsage.UNIFORM,\n        device,\n    );\n\n    const bindgroup = device.createBindGroup({\n        label,\n        layout: bindgroupLayout,\n        entries: [\n            {\n                binding: 0,\n                resource: texture.createView({ dimension: 'cube' }),\n            },\n            {\n                binding: 1,\n                resource: sampler,\n            },\n            {\n                binding: 2,\n                resource: { buffer: paramBuffer },\n            },\n        ],\n    });\n\n    const pipelineLayout = device.createPipelineLayout({\n        label,\n        bindGroupLayouts: [bindgroupLayout],\n    });\n\n    const module = device.createShaderModule({ label, code });\n\n    const pipeline = device.createRenderPipeline({\n        label,\n        layout: pipelineLayout,\n        vertex: {\n            module,\n            entryPoint: 'vs',\n        },\n        fragment: {\n            entryPoint: 'fs',\n            constants: {\n                SAMPLES: samples,\n            },\n            module,\n            targets: [{ format }],\n        },\n    });\n\n    for (let i = 0; i < 6; i += 1) {\n        params[0] = i;\n        device.queue.writeBuffer(paramBuffer, 0, params, 0, 1);\n\n        const view = irradianceTexture.createView({\n            dimension: '2d',\n            arrayLayerCount: 1,\n            baseArrayLayer: i,\n        });\n\n        const encoder = device.createCommandEncoder();\n        const pass = encoder.beginRenderPass({\n            colorAttachments: [{\n                view,\n                loadOp: 'clear',\n                storeOp: 'store',\n            }],\n        });\n\n        pass.setPipeline(pipeline);\n        pass.setBindGroup(0, bindgroup);\n        pass.draw(3);\n        pass.end();\n        device.queue.submit([encoder.finish()]);\n    }\n\n    return irradianceTexture;\n}\n","import { toWorldDir } from '../../shaders/cubemap-sampling.shader';\nimport brdfs from '../../shaders/brdfs.shader';\nimport blit from '../../shaders/blit-vert.shader';\nimport { createAndCopyBuffer } from '../../utils/data-copy';\n\nconst code = /* wgsl */`\n    override SAMPLES: u32 = 1024u;\n\n    const PI = 3.14159265359;\n    const invPI = 1.0 / PI;\n\n    struct Params {\n        face: u32,\n        mipSize: u32,\n        invOmegaP: f32,\n        a2: f32,\n    }\n\n    @group(0) @binding(0) var environment: texture_cube<f32>;\n    @group(0) @binding(1) var environmentSampler: sampler;\n    @group(0) @binding(2) var<uniform> params: Params;\n\n    ${toWorldDir}\n    ${brdfs}\n    ${blit}\n\n    @fragment\n    fn fs(@location(0) uv: vec2f) -> @location(0) vec4f {\n        let N = toWorldDirF32(uv, params.face);\n\n        var radiance = vec3(0.0);\n        var totalWeight = 0.0;\n        \n        for (var i = 0u; i < SAMPLES; i += 1) {\n            let Xi = hammersley(i, SAMPLES);\n            let H = tangentSampleGGX(N, Xi, params.a2);\n            let HoV = saturate(dot(H, N));\n            let L = normalize(2.0 * HoV * H - N);\n            let NoL = saturate(dot(N, L));\n\n            if (NoL <= 0.0) { continue; }\n\n            let pdf = dGGX(HoV, params.a2) / 4.0 + 0.001;\n            let omegaS = 1.0 / (f32(SAMPLES) * pdf);\n            let mipLevel = 0.5 * log2(omegaS * params.invOmegaP) + params.a2;\n\n            radiance += textureSampleLevel(environment, environmentSampler, L, mipLevel).rgb * NoL;\n            totalWeight += NoL;\n        }\n    \n        return vec4(radiance / totalWeight, 1.0);\n    }\n`;\n\nexport type IrradianceTextureDescriptor = {\n    device: GPUDevice,\n    texture: GPUTexture,\n    label?: string,\n    usage?: GPUTextureUsageFlags,\n    targetFormat?: GPUTextureFormat,\n    outputTexture?: GPUTexture,\n    outputWidth?: number,\n    samples?: number,\n    inPlaceMips?: boolean,\n};\n\nexport default function createRadianceTexture({\n    device,\n    texture,\n    targetFormat,\n    usage = 0,\n    label = 'radiance',\n    samples = 1024,\n    outputWidth,\n    outputTexture,\n}: IrradianceTextureDescriptor) {\n    const format = outputTexture?.format ?? targetFormat ?? texture.format;\n    const width = outputTexture?.width ?? outputWidth ?? texture.width;\n\n    const bindgroupLayout = device.createBindGroupLayout({\n        label,\n        entries: [\n            {\n                binding: 0,\n                visibility: GPUShaderStage.FRAGMENT,\n                texture: { viewDimension: 'cube' },\n            },\n            {\n                binding: 1,\n                visibility: GPUShaderStage.FRAGMENT,\n                sampler: {},\n            },\n            {\n                binding: 2,\n                visibility: GPUShaderStage.FRAGMENT,\n                buffer: { type: 'uniform' },\n            },\n        ],\n    });\n\n    const sampler = device.createSampler({ minFilter: 'linear', magFilter: 'linear', mipmapFilter: 'linear' });\n    const paramArrayBuffer = new ArrayBuffer(4 * 4);\n    const uintParams = new Uint32Array(paramArrayBuffer, 0, 2);\n    const floatParams = new Float32Array(paramArrayBuffer, 2 * 4, 2);\n\n    const paramBuffer = createAndCopyBuffer(\n        paramArrayBuffer,\n        GPUBufferUsage.COPY_DST | GPUBufferUsage.UNIFORM,\n        device,\n    );\n\n    const radianceTexture = outputTexture?.depthOrArrayLayers === 6\n        ? outputTexture\n        : device.createTexture({\n                label,\n                format,\n                dimension: '2d',\n                usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | usage,\n                size: { width, height: width, depthOrArrayLayers: 6 },\n                mipLevelCount: Math.max((Math.log2(width) | 0) - 2, 1),\n            });\n\n    const copyEncoder = device.createCommandEncoder({\n        label: `${label} copy encoder`,\n    });\n\n    copyEncoder.copyTextureToTexture(\n        { texture, mipLevel: 0 },\n        { texture: radianceTexture, mipLevel: 0 },\n        { width, height: width, depthOrArrayLayers: 6 },\n    );\n    device.queue.submit([copyEncoder.finish()]);\n\n    const pipelineLayout = device.createPipelineLayout({\n        label,\n        bindGroupLayouts: [bindgroupLayout],\n    });\n\n    const module = device.createShaderModule({ label, code });\n\n    const pipeline = device.createRenderPipeline({\n        label,\n        layout: pipelineLayout,\n        vertex: {\n            module,\n            entryPoint: 'vs',\n        },\n        fragment: {\n            entryPoint: 'fs',\n            targets: [{ format: radianceTexture.format }],\n            constants: {\n                SAMPLES: samples,\n            },\n            module,\n        },\n    });\n\n    floatParams[0] = (6 * texture.width * texture.width) / (4 * Math.PI);\n\n    void Promise.resolve().then(async () => {\n        const bindgroup = device.createBindGroup({\n            label,\n            layout: bindgroupLayout,\n            entries: [\n                {\n                    binding: 0,\n                    resource: texture.createView({ dimension: 'cube' }),\n                },\n                {\n                    binding: 1,\n                    resource: sampler,\n                },\n                {\n                    binding: 2,\n                    resource: { buffer: paramBuffer },\n                },\n            ],\n        });\n\n        for (let mip = 1; mip < radianceTexture.mipLevelCount; mip += 1) {\n            const roughness = mip / (radianceTexture.mipLevelCount - 1);\n            floatParams[1] = roughness ** 4;\n            uintParams[1] = (radianceTexture.width >> mip) | 0;\n\n            for (let face = 0; face < 6; face += 1) {\n                await device.queue.onSubmittedWorkDone();\n                uintParams[0] = face;\n                device.queue.writeBuffer(paramBuffer, 0, paramArrayBuffer);\n\n                const view = radianceTexture.createView({\n                    dimension: '2d',\n                    arrayLayerCount: 1,\n                    baseArrayLayer: face,\n                    mipLevelCount: 1,\n                    baseMipLevel: mip,\n                });\n\n                const encoder = device.createCommandEncoder();\n                const pass = encoder.beginRenderPass({\n                    colorAttachments: [{\n                        view,\n                        loadOp: 'clear',\n                        storeOp: 'store',\n                    }],\n                });\n\n                pass.setPipeline(pipeline);\n                pass.setBindGroup(0, bindgroup);\n                pass.draw(3);\n                pass.end();\n                device.queue.submit([encoder.finish()]);\n            }\n        }\n    });\n\n    return radianceTexture;\n}\n","import GBuffer from './gbuffer';\nimport brdfs from '../shaders/brdfs.shader';\nimport blit from '../shaders/blit-vert.shader';\nimport GlobalUniforms from './global-uniforms';\nimport { createBfrdLut } from './ibl-textures/create-bfrd-lut';\nimport createIrradianceTexture from './ibl-textures/create-irradiance-texture';\nimport createRadianceTexture from './ibl-textures/create-radiance-texture';\n\nexport default class DeferredPass {\n    static readonly code = /* wgsl */`\n        ${GlobalUniforms.code(0)}\n        ${GBuffer.code(1)}\n\n        @group(2) @binding(0) var radianceTexture: texture_cube<f32>;\n        @group(2) @binding(1) var irradianceTexture: texture_cube<f32>;\n        @group(2) @binding(2) var brdfTexture: texture_2d<f32>;\n        @group(2) @binding(3) var generalSampler: sampler;\n\n        ${brdfs}\n        ${blit}\n\n        @fragment\n        fn fs(@builtin(position) pos: vec4f, @location(0) uv: vec2f) -> @location(0) vec4f {\n            let uvi = vec2<u32>(pos.xy);\n            let depth = textureLoad(gBufferDepth, uvi, 0);\n\n            if (depth >= 1.0) { discard; }\n\n            let uvClip = vec2(uv.x * 2.0 - 1.0, 1.0 - uv.y * 2.0);\n            let clipPos = vec4(uvClip, depth, 1.0);\n            let viewPos = globals.inverseViewToClip * clipPos;\n            let worldDir = globals.inverseWorldToView * vec4(viewPos.xyz / viewPos.w, 0.0);\n            let view = -normalize(worldDir.xyz);\n\n            let normal = textureLoad(gBufferNormal, uvi, 0).rgb;\n            let albedo = textureLoad(gBufferAlbedo, uvi, 0).rgb;\n            let emission = textureLoad(gBufferEmission, uvi, 0).rgb;\n            let metallicRoughnessSample = textureLoad(gBufferMetallicRoughness, uvi, 0);\n            let metallic = metallicRoughnessSample.r;\n            let roughness = metallicRoughnessSample.g;\n            let alpha = roughness * roughness;\n            let a2 = alpha * alpha;\n\n            let NoV = saturate(dot(normal, view));\n            let F0 = mix(vec3f(0.04), albedo, metallic);\n            let R = reflect(-view, normal);\n\n            let level = roughness * f32(textureNumLevels(radianceTexture) - 1u);\n            let radiance = textureSampleLevel(radianceTexture, generalSampler, R, level).rgb;\n            let irradiance = textureSample(irradianceTexture, generalSampler, normal).rgb;\n            let brdf = textureSample(brdfTexture, generalSampler, saturate(vec2f(NoV, roughness))).xy;\n\n            // Roughness dependent fresnel\n            let Fr = max(vec3f(1.0 - roughness), F0) - F0;\n            let kS = F0 + Fr * pow(1.0 - NoV, 5.0);\n            let FssEss = kS * brdf.x + brdf.y;\n\n            // Multiple scattering, originally proposed by Fdez-Aguera\n            // and here adapted from https://bruop.github.io/ibl\n            let Ems = 1.0 - (brdf.x + brdf.y);\n            let Favg = F0 + (1.0 - F0) / 21.0;\n            let FmsEms = Ems * FssEss * Favg / (1.0 - Favg * Ems);\n            let kD = albedo * (1.0 - 0.04) * (1.0 - metallic) * (1.0 - FssEss + FmsEms);\n\n            let specular = FssEss * radiance;\n            let diffuse = (FmsEms + kD) * irradiance;\n            let ambient = specular + diffuse + emission;\n\n            return vec4f(ambient, 1.0);\n        }\n    `;\n\n    target: GPURenderPassColorAttachment = {\n        view: undefined!, // eslint-disable-line @typescript-eslint/no-non-null-assertion\n        clearValue: { r: 0, g: 0, b: 0, a: 1 },\n        loadOp: 'clear',\n        storeOp: 'store',\n    };\n\n    bfrdLut = createBfrdLut({ device: this.device });\n    bfrdLutView = this.bfrdLut.createView();\n\n    irradianceTexture?: GPUTexture;\n    irradianceView?: GPUTextureView;\n    radianceTexture?: GPUTexture;\n    radianceView?: GPUTextureView;\n    bindgroup?: GPUBindGroup;\n\n    sampler: GPUSampler;\n    pipeline: GPURenderPipeline;\n    bindgroupLayout: GPUBindGroupLayout;\n\n    readonly passDescriptor: GPURenderPassDescriptor = { colorAttachments: [this.target] };\n\n    set skybox(texture: GPUTexture) {\n        this.irradianceTexture = createIrradianceTexture({\n            texture,\n            device: this.device,\n            usage: GPUTextureUsage.TEXTURE_BINDING,\n        });\n\n        this.radianceTexture = createRadianceTexture({\n            texture,\n            device: this.device,\n            usage: GPUTextureUsage.TEXTURE_BINDING,\n        });\n\n        this.irradianceView = this.irradianceTexture.createView({ dimension: 'cube' });\n        this.radianceView = this.radianceTexture.createView({ dimension: 'cube' });\n\n        this.bindgroup = this.device.createBindGroup({\n            layout: this.bindgroupLayout,\n            entries: [\n                {\n                    binding: 0,\n                    resource: this.radianceView,\n                },\n                {\n                    binding: 1,\n                    resource: this.irradianceView,\n                },\n                {\n                    binding: 2,\n                    resource: this.bfrdLutView,\n                },\n                {\n                    binding: 3,\n                    resource: this.sampler,\n                },\n            ],\n        });\n    }\n\n    constructor(public device: GPUDevice, public globals: GlobalUniforms, public gbuffer: GBuffer, format: GPUTextureFormat, skybox?: GPUTexture) {\n        this.sampler = device.createSampler({ magFilter: 'linear', minFilter: 'linear', mipmapFilter: 'linear' });\n\n        if (skybox != null) this.skybox = skybox;\n\n        this.bindgroupLayout = device.createBindGroupLayout({\n            label: 'deferred pass',\n            entries: [\n                {\n                    binding: 0,\n                    visibility: GPUShaderStage.FRAGMENT,\n                    texture: { viewDimension: 'cube' },\n                },\n                {\n                    binding: 1,\n                    visibility: GPUShaderStage.FRAGMENT,\n                    texture: { viewDimension: 'cube' },\n                },\n                {\n                    binding: 2,\n                    visibility: GPUShaderStage.FRAGMENT,\n                    texture: { viewDimension: '2d' },\n                },\n                {\n                    binding: 3,\n                    visibility: GPUShaderStage.FRAGMENT,\n                    sampler: {},\n                },\n            ],\n        });\n\n        const layout = device.createPipelineLayout({\n            label: 'deferred pass bindgroup layout',\n            bindGroupLayouts: [\n                this.globals.bindGroupLayout,\n                this.gbuffer.bindGroupLayout,\n                this.bindgroupLayout,\n            ],\n        });\n\n        const module = device.createShaderModule({ code: DeferredPass.code, label: 'deferred pass shader' });\n\n        this.pipeline = device.createRenderPipeline({\n            layout,\n            vertex: {\n                entryPoint: 'vs',\n                module,\n            },\n            fragment: {\n                entryPoint: 'fs',\n                targets: [{ format }],\n                module,\n            },\n        });\n    }\n\n    render(pass: GPURenderPassEncoder) {\n        if (this.bindgroup == null) return;\n        pass.setPipeline(this.pipeline);\n        pass.setBindGroup(0, this.globals.bindgroup);\n        pass.setBindGroup(1, this.gbuffer.bindgroup);\n        pass.setBindGroup(2, this.bindgroup);\n        pass.draw(3);\n    }\n}\n","import Camera from './camera/camera';\nimport GlobalUniforms from './global-uniforms';\nimport TonemapPass from './tonemap-pass';\nimport SkyboxPass from './skybox-pass';\nimport GBuffer from './gbuffer';\nimport DeferredPass from './deferred-pass';\n\nimport { binaryInsert, debounce } from '../../utils/general';\n\nexport type ForwardPassParams = {\n    encoder: GPUCommandEncoder,\n    globals: GlobalUniforms,\n    gbuffer: GBuffer,\n};\n\nexport type ForwardPass = {\n    render: (params: ForwardPassParams) => void,\n    priority: number,\n};\n\nexport default class Renderer {\n    static readonly requiredFeatures: GPUFeatureName[] = ['float32-filterable'];\n    static readonly outputFormat: GPUTextureFormat = navigator.gpu.getPreferredCanvasFormat();\n    static readonly postProcessFormat: GPUTextureFormat = 'rgba32float';\n\n    colorAttachment: GPURenderPassColorAttachment = {\n        clearValue: { r: 0, g: 0, b: 0, a: 1 },\n        loadOp: 'clear',\n        storeOp: 'store',\n        view: undefined!, // eslint-disable-line @typescript-eslint/no-non-null-assertion\n    };\n\n    passDescriptor: GPURenderPassDescriptor = { colorAttachments: [this.colorAttachment] };\n\n    context: GPUCanvasContext;\n    camera: Camera;\n    globals: GlobalUniforms;\n    gbuffer: GBuffer;\n\n    forwardPasses: ForwardPass[] = [];\n    deferredPass: DeferredPass;\n    skyboxPass: SkyboxPass;\n    tonemapPass: TonemapPass;\n\n    postprocessTarget!: GPUTexture;\n\n    set skybox(texture: GPUTexture) {\n        this.deferredPass.skybox = texture;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.skyboxPass.skyTexture = this.deferredPass.radianceView!;\n    }\n\n    constructor(\n        public readonly canvas: HTMLCanvasElement,\n        public readonly device: GPUDevice,\n    ) {\n        const size = { width: this.canvas.width, height: this.canvas.height };\n        this.camera = new Camera(size);\n        this.globals = new GlobalUniforms(this.device);\n        this.gbuffer = new GBuffer(device, size);\n        this.deferredPass = new DeferredPass(device, this.globals, this.gbuffer, Renderer.postProcessFormat);\n\n        this.skyboxPass = new SkyboxPass(\n            this.device,\n            this.globals,\n            Renderer.postProcessFormat,\n        );\n        this.tonemapPass = new TonemapPass(this.device, Renderer.outputFormat);\n\n        const context = this.canvas.getContext('webgpu');\n        if (context == null) throw new Error('renderer -- given canvas already initialized to non-webgpu context');\n\n        this.context = context as unknown as GPUCanvasContext;\n\n        this.context.configure({\n            device: this.device,\n            format: Renderer.outputFormat,\n            usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,\n            alphaMode: 'opaque',\n            colorSpace: 'srgb',\n        });\n\n        this.updateBackings(size);\n        this.#createResizeObserver();\n    }\n\n    static async CreateInitialized(canvas: HTMLCanvasElement): Promise<Renderer> {\n        const adapter = await navigator.gpu.requestAdapter();\n        if (adapter == null) {\n            throw new Error('Could not initialize GPU.');\n        }\n\n        const {\n            maxComputeWorkgroupSizeX,\n            maxComputeWorkgroupsPerDimension,\n            maxComputeInvocationsPerWorkgroup,\n        } = adapter.limits;\n\n        const device = await adapter.requestDevice({\n            label: 'main logical device',\n            requiredFeatures: Renderer.requiredFeatures,\n            requiredLimits: {\n                maxComputeWorkgroupSizeX,\n                maxComputeWorkgroupsPerDimension,\n                maxComputeInvocationsPerWorkgroup,\n            },\n        });\n\n        return new Renderer(canvas, device);\n    }\n\n    updateBackings(size: { width: number, height: number }) {\n        this.camera.updateParams(size);\n        this.postprocessTarget = this.device.createTexture({\n            dimension: '2d',\n            format: Renderer.postProcessFormat,\n            usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,\n            size,\n        });\n\n        this.colorAttachment.view = this.postprocessTarget.createView();\n        this.tonemapPass.updateInput(this.colorAttachment.view);\n        this.gbuffer.size = size;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.skyboxPass.depthTexture = this.gbuffer.depth.view!;\n    }\n\n    #createResizeObserver() {\n        const resizeCanvas = debounce((rawWidth: number, rawHeight: number) => {\n            const width = Math.max(1, Math.min(rawWidth | 0, this.device.limits.maxTextureDimension2D));\n            const height = Math.max(1, Math.min(rawHeight | 0, this.device.limits.maxTextureDimension2D));\n            const dimensions = { width, height };\n            this.canvas.width = width;\n            this.canvas.height = height;\n            this.updateBackings(dimensions);\n        }, 20);\n\n        try {\n            const observer = new ResizeObserver((entries) => {\n                const [{ inlineSize, blockSize }] = entries[entries.length - 1].devicePixelContentBoxSize;\n                resizeCanvas(inlineSize, blockSize);\n            });\n            observer.observe(this.canvas, { box: 'device-pixel-content-box' });\n        } catch {\n            // Safari doesn't support device-pixel-content-box, so it would fail into this.\n            const observer = new ResizeObserver((entries) => {\n                const [{ inlineSize, blockSize }] = entries[entries.length - 1].contentBoxSize;\n                resizeCanvas(inlineSize * devicePixelRatio, blockSize * devicePixelRatio);\n            });\n            observer.observe(this.canvas, { box: 'content-box' });\n        }\n    }\n\n    addForwardPass(forwardPass: ForwardPass) {\n        binaryInsert(this.forwardPasses, forwardPass, (a, b) => a.priority - b.priority);\n    }\n\n    render = () => {\n        requestAnimationFrame(this.render);\n\n        this.globals.updateDeviceBuffer(this.device.queue, this.camera);\n\n        const encoder = this.device.createCommandEncoder({ label: 'main render encoder' });\n        const forwardPassParams = { encoder, globals: this.globals, gbuffer: this.gbuffer };\n\n        for (const forwardPass of this.forwardPasses) {\n            forwardPass.render(forwardPassParams);\n        }\n\n        const pass = encoder.beginRenderPass(this.passDescriptor);\n        this.deferredPass.render(pass);\n        this.skyboxPass.render(pass);\n        pass.end();\n\n        this.tonemapPass.render(encoder, this.context.getCurrentTexture());\n\n        this.device.queue.submit([encoder.finish()]);\n    };\n}\n","\n      import API from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/.pnpm/sass-loader@16.0.5_sass@1.86.0_webpack@5.98.0/node_modules/sass-loader/dist/cjs.js!./button.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/.pnpm/sass-loader@16.0.5_sass@1.86.0_webpack@5.98.0/node_modules/sass-loader/dist/cjs.js!./button.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import DistortComponent from 'react-distortion';\r\nimport { ComponentPropsWithoutRef, Ref } from 'react';\r\n\r\nimport './button.module.scss';\r\nimport { interactiveDisabledFilters } from '../distortion-styles';\r\n\r\nexport default function Button(props: ComponentPropsWithoutRef<'button'> & { forwardedRef?: Ref<HTMLButtonElement> }) {\r\n    return (\r\n        <DistortComponent\r\n            as=\"button\"\r\n            type=\"button\"\r\n            {...interactiveDisabledFilters}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n","\n      import API from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/.pnpm/sass-loader@16.0.5_sass@1.86.0_webpack@5.98.0/node_modules/sass-loader/dist/cjs.js!./select.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/.pnpm/sass-loader@16.0.5_sass@1.86.0_webpack@5.98.0/node_modules/sass-loader/dist/cjs.js!./select.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { CSSProperties } from 'react';\n\nimport './select.module.scss';\n\nexport type SelectProps<T extends object> = {\n    label: string,\n    items: T,\n    defaultSelected?: string,\n    style?: CSSProperties,\n    onChange?: (value: T[keyof T]) => void,\n};\n\nexport function Select<T extends Record<string, unknown>>({\n    label,\n    items,\n    onChange,\n    defaultSelected,\n    style,\n}: SelectProps<T>) {\n    return (\n        <select\n            style={style}\n            aria-label={label}\n            disabled={Object.keys(items).length <= 1}\n            onChange={(e) => { onChange?.(items[e.target.value] as T[keyof T]); }}\n        >\n            {Object.keys(items).map((key) => (\n                <option\n                    defaultChecked={key === defaultSelected}\n                    value={key}\n                    key={key}\n                >\n                    {key}\n                </option>\n            ))}\n        </select>\n    );\n}\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nimport type { ValueKeyCallback } from '../../rendering/samples/settings/property-listener';\r\n\r\nimport Button from '../button/button';\r\nimport { Select } from '../select/select';\r\n\r\nexport type FileUploadProps<T> = {\r\n    label: string,\r\n    accept?: string,\r\n    buttonText?: string,\r\n    process: (file: File) => T,\r\n    onChange?: ((value: T) => void),\r\n    value?: string,\r\n    initialValues?: Record<string, T>,\r\n    callbacks?: Set<ValueKeyCallback<FileUploadProps<T>>>,\r\n};\r\n\r\nexport default function FileUpload<T>({\r\n    label,\r\n    process,\r\n    buttonText,\r\n    accept,\r\n    onChange,\r\n    value,\r\n    initialValues,\r\n    callbacks,\r\n}: FileUploadProps<T>) {\r\n    const inputRef = useRef<null | HTMLInputElement>(null);\r\n    const [files, setFiles] = useState(initialValues ?? {});\r\n\r\n    useEffect(() => {\r\n        if (value == null) return;\r\n        onChange?.(files[value]);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function update<K extends keyof FileUploadProps<T>>(changed: FileUploadProps<T>[K], key: K) {\r\n            if (changed == null) return;\r\n            if (key === 'initialValues') {\r\n                const newValues = changed as NonNullable<FileUploadProps<T>['initialValues']>;\r\n                setFiles((files) => ({ ...files, ...newValues }));\r\n            }\r\n        };\r\n\r\n        callbacks?.add(update);\r\n        return () => { callbacks?.delete(update); };\r\n    }, [callbacks]);\r\n\r\n    return (\r\n        <>\r\n            <label style={{ gridRow: 'span 2' }}>{label}</label>\r\n            <Select\r\n                label={`${label} select`}\r\n                style={{ gridColumn: 'span 2' }}\r\n                items={files}\r\n                defaultSelected={value}\r\n                onChange={(value) => { onChange?.(value); }}\r\n            />\r\n            <Button\r\n                onClick={() => { inputRef.current?.click(); }}\r\n                style={{ fontStretch: '100%', gridColumn: 'span 2' }}\r\n            >\r\n                {buttonText ?? `Upload ${accept ?? 'file'}`}\r\n                <input\r\n                    type=\"file\"\r\n                    style={{ display: 'none' }}\r\n                    ref={inputRef}\r\n                    accept={accept}\r\n                    onInput={(e) => {\r\n                        const file = e.currentTarget.files?.[0];\r\n                        if (file == null) return;\r\n                        setFiles((files) => ({ ...files, [file.name]: process(file) }));\r\n                    }}\r\n                />\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n","import { useEffect, useRef, useState } from 'react';\nimport Distortion, { DistortHandle } from 'react-distortion';\n\nexport function useTooltip(content?: string, id?: string) {\n    const distortionRef = useRef<DistortHandle>(null);\n    const [shown, setShown] = useState(false);\n\n    const tooltip = content != null\n        ? (\n                <Distortion\n                    id={id}\n                    role=\"tooltip\"\n                    defaultFilter={{\n                        scale: 10,\n                        disable: true,\n                    }}\n                    ref={distortionRef}\n                >\n                    {content}\n                </Distortion>\n            )\n        : undefined;\n\n    const show = () => { setShown(true); };\n\n    const hide = () => {\n        setShown(false);\n        distortionRef.current?.refreshSeed();\n    };\n\n    return [shown ? tooltip : undefined, show, hide] as const;\n}\n\nexport function useRerenderEffect(fn: () => void, deps: unknown[]) {\n    const isMountingRef = useRef(false);\n\n    useEffect(() => { isMountingRef.current = true; }, []);\n\n    useEffect(() => {\n        if (!isMountingRef.current) {\n            fn();\n        } else {\n            isMountingRef.current = false;\n        }\n    }, deps);\n}\n","\n      import API from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/.pnpm/sass-loader@16.0.5_sass@1.86.0_webpack@5.98.0/node_modules/sass-loader/dist/cjs.js!./checkbox.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/.pnpm/sass-loader@16.0.5_sass@1.86.0_webpack@5.98.0/node_modules/sass-loader/dist/cjs.js!./checkbox.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { ChangeEvent, useState, useId, useEffect } from 'react';\r\nimport Distortion from 'react-distortion';\r\n\r\nimport type { ValueKeyCallback } from '../../rendering/samples/settings/property-listener';\r\nimport { useTooltip } from '../../utils/hooks';\r\n\r\nimport './checkbox.module.scss';\r\nimport { interactiveFilters } from '../distortion-styles';\r\n\r\nexport type CheckboxProps = {\r\n    label: string,\r\n    value?: boolean,\r\n    disabled?: boolean,\r\n    description?: string,\r\n    onChange?: (val: boolean) => void,\r\n    callbacks?: Pick<Set<ValueKeyCallback<CheckboxProps>>, 'add' | 'delete'>,\r\n};\r\n\r\nexport default function Checkbox({\r\n    label,\r\n    onChange: callback = () => {},\r\n    value: propVal,\r\n    disabled,\r\n    callbacks,\r\n    description,\r\n}: CheckboxProps) {\r\n    const id = useId();\r\n    const [value, setValue] = useState(propVal);\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.target.checked);\r\n        callback(e.target.checked);\r\n    };\r\n\r\n    const update = (val: unknown) => {\r\n        if (typeof val === 'boolean' && val !== value) setValue(val);\r\n    };\r\n\r\n    useEffect(() => {\r\n        callbacks?.add(update);\r\n        return () => { callbacks?.delete(update); };\r\n    });\r\n\r\n    const [tooltip, show, hide] = useTooltip(description);\r\n\r\n    return (\r\n        <>\r\n            <label\r\n                style={{ position: 'relative' }}\r\n                htmlFor={id}\r\n                onMouseEnter={show}\r\n                onMouseLeave={hide}\r\n            >\r\n                {label}\r\n                {tooltip}\r\n            </label>\r\n            <Distortion\r\n                as=\"input\"\r\n                disabled={disabled}\r\n                type=\"checkbox\"\r\n                aria-label={label}\r\n                checked={value}\r\n                onChange={handleChange}\r\n                id={id}\r\n                {...(disabled ? {} : interactiveFilters)}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","\n      import API from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/.pnpm/sass-loader@16.0.5_sass@1.86.0_webpack@5.98.0/node_modules/sass-loader/dist/cjs.js!./slider.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/.pnpm/sass-loader@16.0.5_sass@1.86.0_webpack@5.98.0/node_modules/sass-loader/dist/cjs.js!./slider.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { ChangeEvent, useState, useId, useEffect, useRef, useCallback } from 'react';\r\n\r\nimport Distortion, { DistortHandle } from 'react-distortion';\r\nimport { useRerenderEffect, useTooltip } from '../../utils/hooks';\r\n\r\nimport { clamp } from '../../utils/general';\r\nimport { ValueKeyCallback } from '../../rendering/samples/settings/property-listener';\r\n\r\nimport './slider.module.scss';\r\nimport { interactiveFilters } from '../distortion-styles';\r\n\r\nexport type SliderState = {\r\n    min: number,\r\n    max: number,\r\n    step: number,\r\n    value: number,\r\n};\r\n\r\nexport type SliderProps = {\r\n    label: string,\r\n    onChange?: (val: number) => void,\r\n    callbacks?: Set<ValueKeyCallback<SliderProps>>,\r\n    description?: string,\r\n    disabled?: boolean,\r\n} & Partial<SliderState>;\r\n\r\nexport default function Slider({\r\n    label,\r\n    onChange: callback,\r\n    min = 0,\r\n    max = 10,\r\n    step = 1,\r\n    value = 5,\r\n    disabled,\r\n    description,\r\n    callbacks,\r\n}: SliderProps) {\r\n    const id = useId();\r\n    const [sliderState, setSliderState] = useState({ min, max, step, value });\r\n    const [tooltip, showTooltip, hideTooltip] = useTooltip(description);\r\n    const distortionRef = useRef<DistortHandle>(null);\r\n\r\n    const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newVal = e.target.value !== '' ? parseFloat(e.target.value) : sliderState.min;\r\n        newVal = clamp(newVal, sliderState.min, sliderState.max);\r\n\r\n        setSliderState((current) => newVal === current.value\r\n            ? current\r\n            : { ...current, value: newVal });\r\n    }, [sliderState.min, sliderState.max]);\r\n\r\n    useEffect(() => {\r\n        if (callbacks == null) return undefined;\r\n\r\n        function update<K extends keyof SliderProps>(val: SliderProps[K], key: K) {\r\n            if (key !== 'max' && key !== 'min' && key !== 'value' && key !== 'step') return;\r\n\r\n            setSliderState(\r\n                (current) => current[key as keyof SliderState] !== val\r\n                    ? { ...current, [key]: val }\r\n                    : current,\r\n            );\r\n        };\r\n\r\n        callbacks.add(update);\r\n        return () => { callbacks.delete(update); };\r\n    });\r\n\r\n    useRerenderEffect(() => {\r\n        callback?.(sliderState.value);\r\n        distortionRef.current?.refreshSeed();\r\n    }, [sliderState.value]);\r\n\r\n    return (\r\n        <>\r\n            <label\r\n                style={{ position: 'relative' }}\r\n                htmlFor={id}\r\n                onMouseEnter={showTooltip}\r\n                onMouseLeave={hideTooltip}\r\n            >\r\n                {label}\r\n                {tooltip}\r\n            </label>\r\n            <Distortion\r\n                as=\"input\"\r\n                type=\"range\"\r\n                aria-label={`${label}-slider`}\r\n                aria-description={description}\r\n                disabled={disabled}\r\n                onChange={onChange}\r\n                ref={distortionRef}\r\n                minRefresh={200}\r\n                {...(disabled ? {} : interactiveFilters)}\r\n                {...sliderState}\r\n            />\r\n            <Distortion\r\n                as=\"input\"\r\n                type=\"number\"\r\n                id={id}\r\n                aria-label={`${label}-text-input`}\r\n                aria-description={description}\r\n                disabled={disabled}\r\n                onChange={onChange}\r\n                defaultFilter={{\r\n                    scale: 7,\r\n                    disable: true,\r\n                }}\r\n                {...sliderState}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","\n      import API from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/.pnpm/sass-loader@16.0.5_sass@1.86.0_webpack@5.98.0/node_modules/sass-loader/dist/cjs.js!./settings-panel.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/.pnpm/sass-loader@16.0.5_sass@1.86.0_webpack@5.98.0/node_modules/sass-loader/dist/cjs.js!./settings-panel.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { useId, useRef, useState } from 'react';\r\nimport Draggable from 'react-draggable';\r\n\r\nimport StyledButton from '../../button/button';\r\nimport Distortion, { DistortHandle } from 'react-distortion';\r\n\r\nimport styles from './settings-panel.module.scss';\r\n\r\nexport default function SettingsPanel({ children }: { children?: React.ReactNode }) {\r\n    const handleId = useId();\r\n    const nodeRef = useRef<HTMLDivElement>(null);\r\n    const distortionRef = useRef<DistortHandle>(null);\r\n    const buttonRef = useRef<HTMLButtonElement>(null);\r\n    const [isOpen, setIsOpen] = useState(true);\r\n\r\n    return (\r\n        <Draggable\r\n            handle={`#${CSS.escape(handleId)}`}\r\n            onDrag={() => distortionRef.current?.refreshSeed()}\r\n            bounds=\"parent\"\r\n            nodeRef={nodeRef as { current: NonNullable<typeof nodeRef.current> }}\r\n        >\r\n            <Distortion\r\n                ref={distortionRef}\r\n                forwardedRef={nodeRef}\r\n                className={`${styles['settings-panel']} ${isOpen ? '' : styles.disabled}`}\r\n                defaultFilter={{\r\n                    scale: 7,\r\n                    disable: true,\r\n                }}\r\n                minRefresh={600}\r\n            >\r\n                <svg id={handleId}>\r\n                    <defs>\r\n                        <pattern id=\"grab-handle\" patternUnits=\"userSpaceOnUse\"x=\"0\" y=\"0\" width=\"100%\" height=\"5\">\r\n                            <circle cx=\"33%\" cy=\"2.5\" r=\"2\"></circle>\r\n                            <circle cx=\"66%\" cy=\"2.5\" r=\"2\"></circle>\r\n                        </pattern>\r\n                    </defs>\r\n                    <rect x=\"0\" y=\"0\" fill=\"url(#grab-handle)\" width=\"100%\" height=\"100%\" />\r\n                </svg>\r\n                <StyledButton\r\n                    forwardedRef={buttonRef}\r\n                    style={{ gridColumn: 'span 3' }}\r\n                    onClick={() => { setIsOpen((open) => !open); }}\r\n                >\r\n                    {isOpen ? 'Hide Options' : 'Show Options'}\r\n                </StyledButton>\r\n                {children}\r\n            </Distortion>\r\n        </Draggable>\r\n    );\r\n}\r\n","import { ComponentProps, CSSProperties } from 'react';\r\n\r\nimport FileUpload, { FileUploadProps } from '../file-upload/file-upload';\r\nimport Checkbox, { CheckboxProps } from '../checkbox/checkbox';\r\nimport Slider, { SliderProps } from '../slider/slider';\r\nimport StyledButton from '../button/button';\r\n\r\nimport { ModelSetting } from '../../rendering/samples/settings/sample-spec';\r\nimport { ListenerSyms } from '../../rendering/samples/settings/property-listener';\r\nimport SettingsPanel from './settings-panel/settings-panel';\r\n\r\nexport default function ModelSettingsWidget(settings: Record<string, ModelSetting>) {\r\n    return (\r\n        <SettingsPanel>\r\n            {Object.entries(settings).map(([label, info]) => {\r\n                const {\r\n                    [ListenerSyms.$type]: type,\r\n                    [ListenerSyms.$listeners]: callbacks,\r\n                    ...rest\r\n                } = info;\r\n\r\n                const props = {\r\n                    ...rest,\r\n                    callbacks,\r\n                    label,\r\n                    onChange: (val: ModelSetting['value']) => { info.value = val; },\r\n                };\r\n\r\n                switch (type) {\r\n                    case 'button': return (\r\n                        <StyledButton\r\n                            key={label}\r\n                            style={{\r\n                                gridColumn: 'span 3',\r\n                                color: 'var(--accent-2)',\r\n                                '--border-color': 'var(--accent-2)',\r\n                            } as CSSProperties}\r\n                            {...rest as ComponentProps<typeof StyledButton>}\r\n                        >\r\n                            {label}\r\n                        </StyledButton>\r\n                    );\r\n                    case 'checkbox': return <Checkbox key={label} {...props as CheckboxProps} />;\r\n                    case 'slider': return <Slider key={label} {...props as SliderProps} />;\r\n                    case 'file': return <FileUpload key={label} {...props as FileUploadProps<unknown>} />;\r\n                    default: throw new Error();\r\n                }\r\n            })}\r\n        </SettingsPanel>\r\n    );\r\n}\r\n","\n      import API from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.98.0/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/.pnpm/sass-loader@16.0.5_sass@1.86.0_webpack@5.98.0/node_modules/sass-loader/dist/cjs.js!./fullscreen-button.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/.pnpm/sass-loader@16.0.5_sass@1.86.0_webpack@5.98.0/node_modules/sass-loader/dist/cjs.js!./fullscreen-button.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { useEffect, useState, RefObject } from 'react';\r\nimport Distortion from 'react-distortion';\r\n\r\nimport styles from './fullscreen-button.module.scss';\r\nimport { interactiveConditionalFilters } from '../../distortion-styles';\r\n\r\nexport type FullscreenButtonProps = { element?: RefObject<HTMLElement | null> };\r\n\r\nconst ARROW_ID = 'arrow';\r\nconst ARROW_HREF = `#${ARROW_ID}`;\r\n\r\nconst ARROW_PATH = `\r\n    M 7.71 6.24 \r\n    L 4.42 2.97 \r\n    L 5.71 1.69 \r\n    A 1 1 0 0 0 5 -0.01 \r\n    H 1 \r\n    A 1 1 0 0 0 0 0.98 \r\n    V 4.95 \r\n    A 1 1 0 0 0 1.71 5.66 \r\n    L 3 4.38 \r\n    L 6.29 7.64 \r\n    A 1 1 0 0 0 7.71 6.23 \r\n    Z\r\n`.replaceAll(/\\s*([A-Z])\\s*/g, '$1');\r\n\r\nconst openArrows = (\r\n    <>\r\n        <use href={ARROW_HREF} transform=\"translate(10 10)\" />\r\n        <use href={ARROW_HREF} transform=\"rotate(90 -1 9)\" />\r\n        <use href={ARROW_HREF} transform=\"rotate(-90 9 -1)\" />\r\n        <use href={ARROW_HREF} transform=\"rotate(180 4 4)\" />\r\n    </>\r\n);\r\n\r\nconst closedArrows = (\r\n    <>\r\n        <use href={ARROW_HREF} />\r\n        <use href={ARROW_HREF} transform=\"rotate(90 9 9)\" />\r\n        <use href={ARROW_HREF} transform=\"rotate(180 9 9)\" />\r\n        <use href={ARROW_HREF} transform=\"rotate(-90 9 9)\" />\r\n    </>\r\n);\r\n\r\nconst isFullscreen = (element?: HTMLElement | null) => element && document.fullscreenElement === element;\r\n\r\nexport default function FullscreenButton({\r\n    element,\r\n    ...rest\r\n}: FullscreenButtonProps) {\r\n    const [open, setOpen] = useState(isFullscreen(element?.current));\r\n\r\n    useEffect(() => {\r\n        const listener = () => { setOpen(isFullscreen(element?.current)); };\r\n        document.addEventListener('fullscreenchange', listener, false);\r\n        return () => {\r\n            document.removeEventListener('fullscreenchange', listener);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Distortion\r\n            as=\"button\"\r\n            type=\"button\"\r\n            className={styles['fullscreen-button']}\r\n            aria-label=\"fullscreen button\"\r\n            onClick={open\r\n                ? () => { void document.exitFullscreen(); }\r\n                : () => { void element?.current?.requestFullscreen(); }}\r\n            {...interactiveConditionalFilters}\r\n            {...rest}\r\n        >\r\n            <svg viewBox=\"0 0 19 19\">\r\n                <defs>\r\n                    <path id={ARROW_ID} d={ARROW_PATH} />\r\n                </defs>\r\n                {open ? openArrows : closedArrows}\r\n            </svg>\r\n        </Distortion>\r\n    );\r\n}\r\n","import { quat, Vec3, vec3 } from 'wgpu-matrix';\nimport Camera from './camera';\nimport { clamp } from '../../../utils/general';\n\nconst DEG_TO_RAD = Math.PI / 180;\n\nexport class OrbitCameraController {\n    xSensitivity = 0.2;\n    ySensitivity = 0.2;\n    panSpeed = 0.0005;\n\n    zoomSensitivity = 0.001;\n    minZoomSpeed = 0.1;\n    maxZoomSpeed = 5;\n    minZoom = 0;\n    maxZoom = 50;\n\n    phi = 0;\n    theta = 0;\n\n    focusPoint: Vec3;\n\n    constructor(\n        public camera: Camera,\n        focusPoint: [number, number, number] = [0, 0, 0],\n        public currentZoom = 2.5,\n    ) {\n        this.focusPoint = vec3.create(...focusPoint);\n        this.update();\n    }\n\n    rotate(x: number, y: number) {\n        this.phi -= x * this.xSensitivity;\n        this.phi = (this.phi + 360) % 360;\n\n        this.theta -= y * this.ySensitivity;\n        this.theta = clamp(this.theta, -90, 90);\n\n        quat.fromEuler(this.theta * DEG_TO_RAD, this.phi * DEG_TO_RAD, 0, 'zyx', this.camera.rotation);\n        this.update();\n    }\n\n    pan(x: number, y: number) {\n        const speed = this.panSpeed * Math.max(this.currentZoom, 0.1);\n        const delta = vec3.transformQuat([x * speed, y * speed, 0], this.camera.rotation);\n        vec3.add(delta, this.focusPoint, this.focusPoint);\n        this.update();\n    }\n\n    zoom(delta: number) {\n        const changeAbs = this.currentZoom * Math.abs(delta) * this.zoomSensitivity;\n        const changeScaled = Math.sign(delta) * clamp(changeAbs, this.minZoomSpeed, this.maxZoomSpeed);\n        this.currentZoom = clamp(this.currentZoom + changeScaled, this.minZoom, this.maxZoom);\n        this.update();\n    }\n\n    update() {\n        const rot = vec3.transformQuat([0, 0, this.currentZoom], this.camera.rotation, []);\n        vec3.add(rot, this.focusPoint, this.camera.location);\n    }\n}\n","import { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\r\nimport { useRef, useEffect, useReducer } from 'react';\r\n\r\nimport type { WheelEvent, MouseEvent, MouseEventHandler, JSX, RefObject } from 'react';\r\nimport type { ModelConstructor } from '../../rendering/samples/settings/sample-spec';\r\n\r\nimport Renderer from '../../rendering/core/renderer';\r\nimport ModelSettingsWidget from './model-settings-gui';\r\nimport FullscreenButton from './fullscreen-button/fullscreen-button';\r\nimport { OrbitCameraController } from '../../rendering/core/camera/orbit-camera-controller';\r\n\r\nconst enum MoveState {\r\n    none = 0,\r\n    rotate = 1,\r\n    zoom = 2,\r\n    pan = 4,\r\n}\r\n\r\ntype ViewportState = {\r\n    controller?: OrbitCameraController,\r\n    focused: boolean,\r\n    canFocus: boolean,\r\n    moveState: MoveState,\r\n    settings?: JSX.Element,\r\n    mouseHandler?: MouseEventHandler,\r\n};\r\n\r\ntype ViewportAction =\r\n    ({ type: 'update' } & Partial<ViewportState>)\r\n    | { type: 'mouseMove', x: number, y: number };\r\n\r\nexport type ViewportProps = {\r\n    ModelConstructor: ModelConstructor,\r\n    viewportRef: RefObject<HTMLDivElement | null>,\r\n};\r\n\r\nfunction reducer(state: ViewportState, action: ViewportAction) {\r\n    switch (action.type) {\r\n        case 'update': {\r\n            const { type, ...rest } = action;\r\n            return { ...state, ...rest };\r\n        };\r\n        case 'mouseMove': {\r\n            const { x, y } = action;\r\n            if (state.moveState & MoveState.rotate) state.controller?.rotate(x, y);\r\n            if (state.moveState & MoveState.zoom) state.controller?.zoom(10 * y);\r\n            if (state.moveState & MoveState.pan) state.controller?.pan(-x, y);\r\n            return state;\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default function Viewport({ ModelConstructor, viewportRef }: ViewportProps) {\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n    const [{ controller, focused, canFocus, settings }, dispatch] = useReducer(reducer, {\r\n        controller: undefined,\r\n        focused: false,\r\n        canFocus: true,\r\n        moveState: MoveState.none,\r\n        mouseHandler: undefined,\r\n    });\r\n\r\n    const onMouseDown = (e: MouseEvent) => {\r\n        if (!canFocus) return;\r\n\r\n        void canvasRef.current?.requestPointerLock();\r\n\r\n        dispatch({\r\n            type: 'update',\r\n            moveState: e.buttons & 0b111,\r\n            focused: true,\r\n        });\r\n    };\r\n\r\n    const onMouseUp = (e: MouseEvent) => {\r\n        const moveState = (e.buttons & 0b111) as MoveState;\r\n        const moving = moveState !== MoveState.none;\r\n\r\n        dispatch({\r\n            type: 'update',\r\n            focused: moving,\r\n            moveState,\r\n        });\r\n\r\n        if (!moving) {\r\n            document.exitPointerLock();\r\n        }\r\n    };\r\n\r\n    const onWheel = focused\r\n        ? (e: WheelEvent<HTMLCanvasElement>) => { controller?.zoom(e.deltaY); }\r\n        : undefined;\r\n\r\n    const unlock = () => {\r\n        if (canvasRef.current) {\r\n            canvasRef.current.blur();\r\n            enableBodyScroll(canvasRef.current);\r\n        }\r\n\r\n        if (focused) {\r\n            dispatch({ type: 'update', focused: false, canFocus: false });\r\n            setTimeout(() => { dispatch({ type: 'update', canFocus: true }); }, 1500);\r\n        }\r\n    };\r\n\r\n    const handleLockChange = () => {\r\n        if (document.pointerLockElement !== canvasRef.current) {\r\n            unlock();\r\n            return;\r\n        }\r\n\r\n        dispatch({ type: 'update', focused: true });\r\n\r\n        if (canvasRef.current) disableBodyScroll(canvasRef.current, { reserveScrollBarGap: true });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current == null) throw new Error('webgpu render -- canvas uninitialized');\r\n\r\n        Renderer.CreateInitialized(canvasRef.current).then((renderer) => {\r\n            const model = new ModelConstructor(renderer);\r\n\r\n            dispatch({\r\n                type: 'update',\r\n                controller: new OrbitCameraController(renderer.camera, [-0.5, 3.5, 0], 20),\r\n                settings: <ModelSettingsWidget {...model.settings} />,\r\n            });\r\n\r\n            requestAnimationFrame(renderer.render);\r\n        }).catch((e: unknown) => {\r\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions, no-console\r\n            console.warn(`failed to initialize renderer:\\n${e}`);\r\n        });\r\n\r\n        document.addEventListener('pointerlockchange', handleLockChange, false);\r\n\r\n        return () => {\r\n            document.removeEventListener('pointerlockchange', handleLockChange);\r\n            unlock();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <canvas\r\n                ref={canvasRef}\r\n                onMouseDown={onMouseDown}\r\n                onMouseUp={onMouseUp}\r\n                onMouseMove={({ movementX: x, movementY: y }) => {\r\n                    if (!focused) return;\r\n                    dispatch({ type: 'mouseMove', x, y });\r\n                }}\r\n                onWheel={onWheel}\r\n            />\r\n            {settings}\r\n            <FullscreenButton element={viewportRef} />\r\n        </>\r\n    );\r\n}\r\n","import * as ktxp from 'ktx-parse';\r\n\r\nexport const TypeSizes = {\r\n    mat4x4Count: 16,\r\n    sizeofMat4x4f: 16 * Float32Array.BYTES_PER_ELEMENT,\r\n};\r\n\r\nexport const VkFormatToWebGPU: Record<number, GPUTextureFormat | undefined> = {\r\n    // 8-bit formats\r\n    [ktxp.VK_FORMAT_R8_UNORM]: 'r8unorm',\r\n    [ktxp.VK_FORMAT_R8_SNORM]: 'r8snorm',\r\n    [ktxp.VK_FORMAT_R8_UINT]: 'r8uint',\r\n    [ktxp.VK_FORMAT_R8_SINT]: 'r8sint',\r\n    // 16-bit formats\r\n    [ktxp.VK_FORMAT_R16_UINT]: 'r16uint',\r\n    [ktxp.VK_FORMAT_R16_SINT]: 'r16sint',\r\n    [ktxp.VK_FORMAT_R16_SFLOAT]: 'r16float',\r\n    [ktxp.VK_FORMAT_R8G8_UNORM]: 'rg8unorm',\r\n    [ktxp.VK_FORMAT_R8G8_SNORM]: 'rg8snorm',\r\n    [ktxp.VK_FORMAT_R8G8_UINT]: 'rg8uint',\r\n    [ktxp.VK_FORMAT_R8G8_SINT]: 'rg8sint',\r\n    // 32-bit formats\r\n    [ktxp.VK_FORMAT_R32_UINT]: 'r32uint',\r\n    [ktxp.VK_FORMAT_R32_SINT]: 'r32sint',\r\n    [ktxp.VK_FORMAT_R32_SFLOAT]: 'r32float',\r\n    [ktxp.VK_FORMAT_R16G16_UINT]: 'rg16uint',\r\n    [ktxp.VK_FORMAT_R16G16_SINT]: 'rg16sint',\r\n    [ktxp.VK_FORMAT_R16G16_SFLOAT]: 'rg16float',\r\n    [ktxp.VK_FORMAT_R8G8B8A8_UNORM]: 'rgba8unorm',\r\n    [ktxp.VK_FORMAT_R8G8B8A8_SRGB]: 'rgba8unorm-srgb',\r\n    [ktxp.VK_FORMAT_R8G8B8A8_SNORM]: 'rgba8snorm',\r\n    [ktxp.VK_FORMAT_R8G8B8A8_UINT]: 'rgba8uint',\r\n    [ktxp.VK_FORMAT_R8G8B8A8_SINT]: 'rgba8sint',\r\n    [ktxp.VK_FORMAT_B8G8R8A8_UNORM]: 'bgra8unorm',\r\n    [ktxp.VK_FORMAT_B8G8R8A8_SRGB]: 'bgra8unorm-srgb',\r\n    // Packed 32-bit formats\r\n    [ktxp.VK_FORMAT_E5B9G9R9_UFLOAT_PACK32]: 'rgb9e5ufloat',\r\n    [ktxp.VK_FORMAT_A2R10G10B10_UINT_PACK32]: 'rgb10a2uint',\r\n    [ktxp.VK_FORMAT_A2R10G10B10_UNORM_PACK32]: 'rgb10a2unorm',\r\n    [ktxp.VK_FORMAT_B10G11R11_UFLOAT_PACK32]: 'rg11b10ufloat',\r\n    // 64-bit formats\r\n    [ktxp.VK_FORMAT_R32G32_UINT]: 'rg32uint',\r\n    [ktxp.VK_FORMAT_R32G32_SINT]: 'rg32sint',\r\n    [ktxp.VK_FORMAT_R32G32_SFLOAT]: 'rg32float',\r\n    [ktxp.VK_FORMAT_R16G16B16A16_UINT]: 'rgba16uint',\r\n    [ktxp.VK_FORMAT_R16G16B16A16_SINT]: 'rgba16sint',\r\n    [ktxp.VK_FORMAT_R16G16B16A16_SFLOAT]: 'rgba16float',\r\n    // 128-bit formats\r\n    [ktxp.VK_FORMAT_R32G32B32A32_UINT]: 'rgba32uint',\r\n    [ktxp.VK_FORMAT_R32G32B32A32_SINT]: 'rgba32sint',\r\n    [ktxp.VK_FORMAT_R32G32B32A32_SFLOAT]: 'rgba32float',\r\n    // BC compressed formats usable if \"texture-compression-bc\" is both\r\n    // supported by the device/user agent and enabled in requestDevice.\r\n    [ktxp.VK_FORMAT_BC1_RGBA_UNORM_BLOCK]: 'bc1-rgba-unorm',\r\n    [ktxp.VK_FORMAT_BC1_RGBA_SRGB_BLOCK]: 'bc1-rgba-unorm-srgb',\r\n    [ktxp.VK_FORMAT_BC2_UNORM_BLOCK]: 'bc2-rgba-unorm',\r\n    [ktxp.VK_FORMAT_BC2_SRGB_BLOCK]: 'bc2-rgba-unorm-srgb',\r\n    [ktxp.VK_FORMAT_BC3_UNORM_BLOCK]: 'bc3-rgba-unorm',\r\n    [ktxp.VK_FORMAT_BC3_SRGB_BLOCK]: 'bc3-rgba-unorm-srgb',\r\n    [ktxp.VK_FORMAT_BC4_UNORM_BLOCK]: 'bc4-r-unorm',\r\n    [ktxp.VK_FORMAT_BC4_SNORM_BLOCK]: 'bc4-r-snorm',\r\n    [ktxp.VK_FORMAT_BC5_UNORM_BLOCK]: 'bc5-rg-unorm',\r\n    [ktxp.VK_FORMAT_BC5_SNORM_BLOCK]: 'bc5-rg-snorm',\r\n    [ktxp.VK_FORMAT_BC6H_UFLOAT_BLOCK]: 'bc6h-rgb-ufloat',\r\n    [ktxp.VK_FORMAT_BC6H_SFLOAT_BLOCK]: 'bc6h-rgb-float',\r\n    [ktxp.VK_FORMAT_BC7_UNORM_BLOCK]: 'bc7-rgba-unorm',\r\n    [ktxp.VK_FORMAT_BC7_SRGB_BLOCK]: 'bc7-rgba-unorm-srgb',\r\n    // Currently unsupported extension formats:\r\n    // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\r\n    // supported by the device/user agent and enabled in requestDevice.\r\n    // \"etc2-rgb8unorm\",\r\n    // \"etc2-rgb8unorm-srgb\",\r\n    // \"etc2-rgb8a1unorm\",\r\n    // \"etc2-rgb8a1unorm-srgb\",\r\n    // \"etc2-rgba8unorm\",\r\n    // \"etc2-rgba8unorm-srgb\",\r\n    // \"eac-r11unorm\",\r\n    // \"eac-r11snorm\",\r\n    // \"eac-rg11unorm\",\r\n    // \"eac-rg11snorm\",\r\n    // ASTC compressed formats usable if \"texture-compression-astc\" is both\r\n    // supported by the device/user agent and enabled in requestDevice.\r\n    // \"astc-4x4-unorm\",\r\n    // \"astc-4x4-unorm-srgb\",\r\n    // \"astc-5x4-unorm\",\r\n    // \"astc-5x4-unorm-srgb\",\r\n    // \"astc-5x5-unorm\",\r\n    // \"astc-5x5-unorm-srgb\",\r\n    // \"astc-6x5-unorm\",\r\n    // \"astc-6x5-unorm-srgb\",\r\n    // \"astc-6x6-unorm\",\r\n    // \"astc-6x6-unorm-srgb\",\r\n    // \"astc-8x5-unorm\",\r\n    // \"astc-8x5-unorm-srgb\",\r\n    // \"astc-8x6-unorm\",\r\n    // \"astc-8x6-unorm-srgb\",\r\n    // \"astc-8x8-unorm\",\r\n    // \"astc-8x8-unorm-srgb\",\r\n    // \"astc-10x5-unorm\",\r\n    // \"astc-10x5-unorm-srgb\",\r\n    // \"astc-10x6-unorm\",\r\n    // \"astc-10x6-unorm-srgb\",\r\n    // \"astc-10x8-unorm\",\r\n    // \"astc-10x8-unorm-srgb\",\r\n    // \"astc-10x10-unorm\",\r\n    // \"astc-10x10-unorm-srgb\",\r\n    // \"astc-12x10-unorm\",\r\n    // \"astc-12x10-unorm-srgb\",\r\n    // \"astc-12x12-unorm\",\r\n};\r\n\r\nexport const TextureFormatToSize: Partial<Record<GPUTextureFormat, number>> = {\r\n    // 8-bit formats\r\n    r8unorm: 1,\r\n    r8snorm: 1,\r\n    r8uint: 1,\r\n    r8sint: 1,\r\n    // 16-bit formats\r\n    r16uint: 2,\r\n    r16sint: 2,\r\n    r16float: 2,\r\n    rg8unorm: 2,\r\n    rg8snorm: 2,\r\n    rg8uint: 2,\r\n    rg8sint: 2,\r\n    // 32-bit formats\r\n    r32uint: 4,\r\n    r32sint: 4,\r\n    r32float: 4,\r\n    rg16uint: 4,\r\n    rg16sint: 4,\r\n    rg16float: 4,\r\n    rgba8unorm: 4,\r\n    'rgba8unorm-srgb': 4,\r\n    rgba8snorm: 4,\r\n    rgba8uint: 4,\r\n    rgba8sint: 4,\r\n    bgra8unorm: 4,\r\n    'bgra8unorm-srgb': 4,\r\n    // Packed 32-bit formats\r\n    rgb9e5ufloat: 4,\r\n    rgb10a2uint: 4,\r\n    rgb10a2unorm: 4,\r\n    rg11b10ufloat: 4,\r\n    // 64-bit formats\r\n    rg32uint: 8,\r\n    rg32sint: 8,\r\n    rg32float: 8,\r\n    rgba16uint: 8,\r\n    rgba16sint: 8,\r\n    rgba16float: 8,\r\n    // 128-bit formats\r\n    rgba32uint: 16,\r\n    rgba32sint: 16,\r\n    rgba32float: 16,\r\n};\r\n\r\nexport const TextureFormatToChannelSize: Partial<Record<GPUTextureFormat, number>> = {\r\n    // 8-bit formats\r\n    r8unorm: 1,\r\n    r8snorm: 1,\r\n    r8uint: 1,\r\n    r8sint: 1,\r\n    // 16-bit formats\r\n    r16uint: 2,\r\n    r16sint: 2,\r\n    r16float: 2,\r\n    rg8unorm: 1,\r\n    rg8snorm: 1,\r\n    rg8uint: 1,\r\n    rg8sint: 1,\r\n    // 32-bit formats\r\n    r32uint: 4,\r\n    r32sint: 4,\r\n    r32float: 4,\r\n    rg16uint: 2,\r\n    rg16sint: 2,\r\n    rg16float: 2,\r\n    rgba8unorm: 1,\r\n    'rgba8unorm-srgb': 1,\r\n    rgba8snorm: 1,\r\n    rgba8uint: 1,\r\n    rgba8sint: 1,\r\n    bgra8unorm: 1,\r\n    'bgra8unorm-srgb': 1,\r\n    // Packed 32-bit formats\r\n    rgb9e5ufloat: 4,\r\n    rgb10a2uint: 4,\r\n    rgb10a2unorm: 4,\r\n    rg11b10ufloat: 4,\r\n    // 64-bit formats\r\n    rg32uint: 4,\r\n    rg32sint: 4,\r\n    rg32float: 4,\r\n    rgba16uint: 2,\r\n    rgba16sint: 2,\r\n    rgba16float: 2,\r\n    // 128-bit formats\r\n    rgba32uint: 4,\r\n    rgba32sint: 4,\r\n    rgba32float: 4,\r\n};\r\n\r\nexport const WebGPUToVkFormat = Object.fromEntries(\r\n    Object.entries(VkFormatToWebGPU).map(([vk, wgpu]) => [wgpu, parseInt(vk, 10)]),\r\n) as Record<GPUTextureFormat, ktxp.VKFormat>;\r\n\r\nexport const textureTypeToDimension: Record<string, GPUTextureViewDimension> = {\r\n    texture_cube: 'cube',\r\n    texture_3d: '3d',\r\n    texture_2d: '2d',\r\n};\r\n","import { UnknownObject, mapValues } from '../../../utils/general';\n\n// Unique symbols to avoid naming collisions with underlying types\nconst $type = Symbol('PropertyListener -- Type');\nconst $callback = Symbol('PropertyListener -- Callback');\nconst $listeners = Symbol('PropertyListener -- Listeners');\nexport const ListenerSyms = Object.freeze({ $type, $callback, $listeners });\n\ntype Syms = typeof $type | typeof $callback | typeof $listeners;\nexport type ValueKeyCallback<T extends object> = <K extends keyof T, V extends T[K]>(value: V, key: K) => void;\n\nexport type GuiSetting<T extends object = object, Tag extends string = string> = {\n    [$type]: Tag,\n    [$callback]?: ValueKeyCallback<T>,\n    [$listeners]: Set<ValueKeyCallback<T>>,\n} & T;\n\nexport type ListenerSpec<T extends object = object, Tag extends string = string> =\n    Omit<GuiSetting<T, Tag>, typeof $listeners>;\n\ntype MapSpec<T extends Record<PropertyKey, ListenerSpec>> = {\n    [K in keyof T]: T[K] extends ListenerSpec<object, infer Tag> & infer Rest\n        ? Rest extends object\n            ? GuiSetting<Omit<Rest, Syms>, Tag> : never : never\n};\n\nfunction fastProxy(spec: GuiSetting<UnknownObject>, callback?: (value: unknown, key: string) => void) {\n    return Object.keys(spec)\n        .reduce((prev, key) => Object.defineProperty(prev, key, {\n            enumerable: true,\n            get() { return spec[key]; },\n            set(value: unknown) {\n                if (spec[key] !== value) {\n                    spec[key] = value;\n                    callback?.(value, key);\n                }\n            },\n        }), { [$type]: spec[$type], [$listeners]: spec[$listeners] });\n}\n\nexport default function propertyListener<T extends Record<PropertyKey, ListenerSpec<UnknownObject>>>(specs: T) {\n    for (const spec of Object.values(specs) as GuiSetting[]) {\n        spec[$listeners] = new Set();\n    }\n\n    return {\n        publicSettings: mapValues(specs, (spec) => {\n            const cast = spec as GuiSetting<UnknownObject>;\n            return fastProxy(cast, cast[$callback]);\n        }) as MapSpec<T>,\n        privateSettings: mapValues(specs, (spec) => {\n            const cast = spec as GuiSetting<UnknownObject>;\n            return fastProxy(cast, (value, key) => {\n                cast[$listeners].forEach((fn) => { fn(value, key); });\n            });\n        }) as MapSpec<T>,\n    };\n}\n","export default /* wgsl */`\r\n    struct VertOut {\r\n        @builtin(position) pos: vec4f,\r\n        @location(0) uv: vec2f,\r\n    }\r\n\r\n    @vertex\r\n    fn vs(@builtin(vertex_index) idx: u32) -> VertOut {\r\n        const pos = array(\r\n            vec2f(-1,  3),\r\n            vec2f(3, -1),\r\n            vec2f(-1, -1),\r\n        );\r\n        var res: VertOut;\r\n        res.pos = vec4f(pos[idx], 0.0, 1.0);\r\n        res.uv = pos[idx] * vec2f(0.5, -0.5) + 0.5;\r\n        return res;\r\n    }\r\n`;\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `html{--hover-scale: 1.075;--active-scale: 0.95;--scale-bezier: cubic-bezier(0.81, 0, 0.37, 3.69);--scale-transition-duration: 0.2s}@media(prefers-reduced-motion)or (hover: none){html{--hover-scale: 1 !important;--active-scale: 1 !important}}.y_wWV2HJOLQpRVu3VJT9{--scale-transition: scale var(--scale-transition-duration) var(--scale-bezier);transition:var(--scale-transition);position:absolute;right:20px;top:20px;width:5%;min-width:30px;max-width:65px;aspect-ratio:1;color:color-mix(in oklab, var(--background-color) 85%, var(--hi-vis-gray))}.y_wWV2HJOLQpRVu3VJT9:not(:disabled){cursor:pointer}.y_wWV2HJOLQpRVu3VJT9:hover:not(:disabled){scale:var(--hover-scale)}.y_wWV2HJOLQpRVu3VJT9:active:not(:disabled){scale:var(--active-scale)}.y_wWV2HJOLQpRVu3VJT9 svg{height:100%;width:100%;fill:currentColor;filter:drop-shadow(2px 2px 0 color-mix(in oklab, currentcolor 65%, var(--hi-vis-gray))) drop-shadow(-1px -1px 0 color-mix(in oklab, currentcolor 75%, var(--hi-vis-gray)))}.y_wWV2HJOLQpRVu3VJT9:hover svg{filter:drop-shadow(2px 2px 0 var(--accent-3)) drop-shadow(-1px -1px 0 var(--accent-2))}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/mixins.module.scss\",\"webpack://./src/components/viewport/fullscreen-button/fullscreen-button.module.scss\"],\"names\":[],\"mappings\":\"AAAA,KACI,oBAAA,CACA,oBAAA,CACA,iDAAA,CACA,iCAAA,CAEA,+CANJ,KAOQ,2BAAA,CACA,4BAAA,CAAA,CCNR,sBDWI,8EAAA,CACA,kCAAA,CCTA,iBAAA,CACA,UAAA,CACA,QAAA,CAEA,QAAA,CACA,cAAA,CACA,cAAA,CACA,cAAA,CAEA,0EAAA,CDEA,qCACI,cAAA,CAGJ,2CACI,wBAAA,CAGJ,4CACI,yBAAA,CCTJ,0BACI,WAAA,CACA,UAAA,CACA,iBAAA,CAEA,0KACI,CAKJ,gCACI,sFACI\",\"sourcesContent\":[\"html {\\n    --hover-scale: 1.075;\\n    --active-scale: 0.95;\\n    --scale-bezier: cubic-bezier(0.81, 0, 0.37, 3.69);\\n    --scale-transition-duration: 0.2s; \\n\\n    @media (prefers-reduced-motion) OR (hover: none) { \\n        --hover-scale: 1 !important;\\n        --active-scale: 1 !important;\\n    }\\n}\\n\\n@mixin clickable {\\n    --scale-transition: scale var(--scale-transition-duration) var(--scale-bezier);\\n    transition: var(--scale-transition);\\n\\n    &:not(:disabled) {\\n        cursor: pointer;\\n    }\\n    \\n    &:hover:not(:disabled) {\\n        scale: var(--hover-scale);\\n    }\\n    \\n    &:active:not(:disabled) {\\n        scale: var(--active-scale);\\n    }\\n}\\n\\n@mixin distortion-border($width, $color: currentColor) {\\n    position: relative;\\n    border: #{$width} solid transparent;\\n\\n    &:before {\\n        content: '';\\n        position: absolute;\\n        z-index: 1;\\n        pointer-events: none;\\n    \\n        width: calc(100% + #{$width});\\n        height: calc(100% + #{$width});\\n        top: calc(-0.5 * #{$width});\\n        left: calc(-0.5 * #{$width});\\n        filter: var(--distortion-filter);\\n    \\n        border: solid;\\n        background-color: #0000;\\n        border-radius: inherit;\\n        border-width: #{$width};\\n        border-color: #{$color};\\n    }\\n}\\n\\n@mixin distortion-background($color:var(--background-color)) {\\n    position: relative;\\n\\n    &:before {\\n        content: '';\\n        position: absolute;\\n        z-index: -1;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        height: 100%;\\n        filter: var(--distortion-filter);\\n\\n        border-radius: inherit;\\n        background-color: #{$color};\\n    }\\n}\\n\",\"@use \\\"../../mixins.module.scss\\\" as mixins;\\n\\n.fullscreen-button {\\n    @include mixins.clickable;\\n\\n    position: absolute;\\n    right: 20px;\\n    top: 20px;\\n\\n    width: 5%;\\n    min-width: 30px;\\n    max-width: 65px;\\n    aspect-ratio: 1;\\n\\n    color: color-mix(in oklab, var(--background-color) 85%, var(--hi-vis-gray));\\n\\n    svg {\\n        height: 100%;\\n        width: 100%;\\n        fill: currentColor;\\n\\n        filter:\\n            drop-shadow(2px 2px 0 color-mix(in oklab, currentcolor 65%, var(--hi-vis-gray))) \\n            drop-shadow(-1px -1px 0 color-mix(in oklab, currentcolor 75%, var(--hi-vis-gray)));\\n    }\\n\\n    &:hover {\\n        svg {\\n            filter:\\n                drop-shadow(2px 2px 0 var(--accent-3)) \\n                drop-shadow(-1px -1px 0 var(--accent-2));\\n        }\\n    }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"fullscreen-button\": `y_wWV2HJOLQpRVu3VJT9`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `html{--hover-scale: 1.075;--active-scale: 0.95;--scale-bezier: cubic-bezier(0.81, 0, 0.37, 3.69);--scale-transition-duration: 0.2s}@media(prefers-reduced-motion)or (hover: none){html{--hover-scale: 1 !important;--active-scale: 1 !important}}main button:not([class]){--scale-transition: scale var(--scale-transition-duration) var(--scale-bezier);transition:var(--scale-transition);position:relative;border:0.2lh solid rgba(0,0,0,0);--hover-scale: 1.05;--active-scale: 1;border-radius:6px;white-space:nowrap;height:1lh;padding:.75lh .5lh;width:100%;display:inline-flex;align-items:center;justify-content:center;font-weight:700;transition:font-stretch .15s var(--scale-bezier),var(--scale-transition)}main button:not([class]):not(:disabled){cursor:pointer}main button:not([class]):hover:not(:disabled){scale:var(--hover-scale)}main button:not([class]):active:not(:disabled){scale:var(--active-scale)}main button:not([class]):before{content:\"\";position:absolute;z-index:1;pointer-events:none;width:calc(100% + 0.2lh);height:calc(100% + 0.2lh);top:calc(-0.5*0.2lh);left:calc(-0.5*0.2lh);filter:var(--distortion-filter);border:solid;background-color:rgba(0,0,0,0);border-radius:inherit;border-width:0.2lh;border-color:currentColor}main button:not([class]):hover:not(:disabled){font-stretch:110%;filter:drop-shadow(0 0 2px currentColor) var(--distortion-filter)}main button:not([class]):active:not(:disabled){font-stretch:105%}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/mixins.module.scss\",\"webpack://./src/components/button/button.module.scss\"],\"names\":[],\"mappings\":\"AAAA,KACI,oBAAA,CACA,oBAAA,CACA,iDAAA,CACA,iCAAA,CAEA,+CANJ,KAOQ,2BAAA,CACA,4BAAA,CAAA,CCNR,yBDWI,8EAAA,CACA,kCAAA,CAgBA,iBAAA,CACA,gCAAA,CCzBA,mBAAA,CACA,iBAAA,CAEA,iBAAA,CAEA,kBAAA,CAEA,UAAA,CACA,kBAAA,CACA,UAAA,CAEA,mBAAA,CACA,kBAAA,CACA,sBAAA,CAEA,eAAA,CAEA,wEACI,CDRJ,wCACI,cAAA,CAGJ,8CACI,wBAAA,CAGJ,+CACI,yBAAA,CAQJ,gCACI,UAAA,CACA,iBAAA,CACA,SAAA,CACA,mBAAA,CAEA,wBAAA,CACA,yBAAA,CACA,oBAAA,CACA,qBAAA,CACA,+BAAA,CAEA,YAAA,CACA,8BAAA,CACA,qBAAA,CACA,kBAAA,CACA,yBAAA,CCtBJ,8CACI,iBAAA,CACA,iEACI,CAIR,+CACI,iBAAA\",\"sourcesContent\":[\"html {\\n    --hover-scale: 1.075;\\n    --active-scale: 0.95;\\n    --scale-bezier: cubic-bezier(0.81, 0, 0.37, 3.69);\\n    --scale-transition-duration: 0.2s; \\n\\n    @media (prefers-reduced-motion) OR (hover: none) { \\n        --hover-scale: 1 !important;\\n        --active-scale: 1 !important;\\n    }\\n}\\n\\n@mixin clickable {\\n    --scale-transition: scale var(--scale-transition-duration) var(--scale-bezier);\\n    transition: var(--scale-transition);\\n\\n    &:not(:disabled) {\\n        cursor: pointer;\\n    }\\n    \\n    &:hover:not(:disabled) {\\n        scale: var(--hover-scale);\\n    }\\n    \\n    &:active:not(:disabled) {\\n        scale: var(--active-scale);\\n    }\\n}\\n\\n@mixin distortion-border($width, $color: currentColor) {\\n    position: relative;\\n    border: #{$width} solid transparent;\\n\\n    &:before {\\n        content: '';\\n        position: absolute;\\n        z-index: 1;\\n        pointer-events: none;\\n    \\n        width: calc(100% + #{$width});\\n        height: calc(100% + #{$width});\\n        top: calc(-0.5 * #{$width});\\n        left: calc(-0.5 * #{$width});\\n        filter: var(--distortion-filter);\\n    \\n        border: solid;\\n        background-color: #0000;\\n        border-radius: inherit;\\n        border-width: #{$width};\\n        border-color: #{$color};\\n    }\\n}\\n\\n@mixin distortion-background($color:var(--background-color)) {\\n    position: relative;\\n\\n    &:before {\\n        content: '';\\n        position: absolute;\\n        z-index: -1;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        height: 100%;\\n        filter: var(--distortion-filter);\\n\\n        border-radius: inherit;\\n        background-color: #{$color};\\n    }\\n}\\n\",\"@use \\\"../mixins.module.scss\\\" as mixins;\\n\\nmain button:not([class]) {\\n    @include mixins.clickable;\\n    @include mixins.distortion-border(0.2lh);\\n\\n    --hover-scale: 1.05;\\n    --active-scale: 1;\\n\\n    border-radius: 6px;\\n\\n    white-space: nowrap;\\n\\n    height: 1lh;\\n    padding: 0.75lh 0.5lh;\\n    width: 100%;\\n\\n    display: inline-flex;\\n    align-items: center;\\n    justify-content: center;\\n\\n    font-weight: 700;\\n\\n    transition:\\n        font-stretch 0.15s var(--scale-bezier),\\n        var(--scale-transition);\\n\\n    &:hover:not(:disabled) {\\n        font-stretch: 110%;\\n        filter: \\n            drop-shadow(0 0 2px currentColor)\\n            var(--distortion-filter);\\n    }\\n\\n    &:active:not(:disabled) {\\n        font-stretch: 105%;\\n    }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {};\nexport default ___CSS_LOADER_EXPORT___;\n","import Camera from './camera/camera';\r\n\r\nconst label = 'global uniforms';\r\n\r\nexport default class GlobalUniforms {\r\n    static readonly code = (group: number) => /* wgsl */`\r\n        struct GlobalUniforms {\r\n            worldToView: mat4x4f,\r\n            viewToClip: mat4x4f,\r\n            worldToClip: mat4x4f,\r\n            inverseWorldToView: mat4x4f,\r\n            inverseViewToClip: mat4x4f,\r\n            inverseWorldToClip: mat4x4f,\r\n        }\r\n\r\n        @group(${group}) @binding(0) var<uniform> globals: GlobalUniforms;\r\n    `;\r\n\r\n    static readonly bufferSize = Camera.bufferLength;\r\n\r\n    static readonly layoutDescriptor: GPUBindGroupLayoutDescriptor = {\r\n        label,\r\n        entries: [\r\n            {\r\n                binding: 0,\r\n                buffer: { minBindingSize: GlobalUniforms.bufferSize },\r\n                visibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\r\n            },\r\n        ],\r\n    };\r\n\r\n    static readonly bufferDescriptor: GPUBufferDescriptor = {\r\n        label,\r\n        size: GlobalUniforms.bufferSize,\r\n        usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\r\n    };\r\n\r\n    deviceBuffer: GPUBuffer;\r\n    bindGroupLayout: GPUBindGroupLayout;\r\n    bindGroupDescriptor!: GPUBindGroupDescriptor;\r\n    bindgroup!: GPUBindGroup;\r\n\r\n    constructor(device: GPUDevice) {\r\n        this.deviceBuffer = device.createBuffer(GlobalUniforms.bufferDescriptor);\r\n        this.bindGroupLayout = device.createBindGroupLayout(GlobalUniforms.layoutDescriptor);\r\n\r\n        this.bindGroupDescriptor = {\r\n            label,\r\n            layout: this.bindGroupLayout,\r\n            entries: [\r\n                {\r\n                    binding: 0,\r\n                    resource: {\r\n                        buffer: this.deviceBuffer,\r\n                        offset: 0,\r\n                        size: GlobalUniforms.bufferSize,\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        this.bindgroup = device.createBindGroup(this.bindGroupDescriptor);\r\n    }\r\n\r\n    updateDeviceBuffer(queue: GPUQueue, camera: Camera) {\r\n        camera.cacheView();\r\n        queue.writeBuffer(this.deviceBuffer, 0, camera.buffer);\r\n    }\r\n}\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.98.0/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `html{--hover-scale: 1.075;--active-scale: 0.95;--scale-bezier: cubic-bezier(0.81, 0, 0.37, 3.69);--scale-transition-duration: 0.2s}@media(prefers-reduced-motion)or (hover: none){html{--hover-scale: 1 !important;--active-scale: 1 !important}}input[type=range]{--scale-transition: scale var(--scale-transition-duration) var(--scale-bezier);transition:var(--scale-transition);--track-color: var(--accent-2);--slider-color: oklch(from var(--track-color) calc(l * var(--ok-l2)) calc(c * 0.6) h);border-radius:5px;border:solid .2lh var(--track-color);background:rgba(0,0,0,0);transition:background-color .3s,var(--scale-transition);color:var(--slider-color);appearance:none;overflow:hidden;height:1lh;width:100%}input[type=range]:not(:disabled){cursor:pointer}input[type=range]:hover:not(:disabled){scale:var(--hover-scale)}input[type=range]:active:not(:disabled){scale:var(--active-scale)}input[type=range]::-webkit-slider-thumb{width:0;appearance:none;transition:color .3s ease;box-shadow:calc(-100vmax + 2px) 0 0 100vmax currentcolor}input[type=range]::-moz-range-track,input[type=range]::-moz-range-thumb{visibility:hidden}input[type=range]::-moz-range-progress{background:currentcolor;transition:color .3s;height:100%}input[type=range]:hover:not(:disabled)::-webkit-slider-thumb{color:color-mix(in oklch, var(--slider-color) 50%, var(--track-color))}input[type=range]:hover:not(:disabled)::-moz-range-progress{color:color-mix(in oklch, var(--slider-color) 50%, var(--track-color))}input[type=number]{width:100%;height:100%;font:inherit;color:inherit;caret-color:currentColor;appearance:none;border:none;background-color:var(--background-color);outline-color:var(--hi-vis-color);border-radius:5px;padding-left:6px;-moz-appearance:textfield}input[type=number]::-webkit-inner-spin-button{appearance:none;margin:0}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/mixins.module.scss\",\"webpack://./src/components/slider/slider.module.scss\"],\"names\":[],\"mappings\":\"AAAA,KACI,oBAAA,CACA,oBAAA,CACA,iDAAA,CACA,iCAAA,CAEA,+CANJ,KAOQ,2BAAA,CACA,4BAAA,CAAA,CCNR,kBDWI,8EAAA,CACA,kCAAA,CCTA,8BAAA,CACA,qFAAA,CAEA,iBAAA,CACA,oCAAA,CAEA,wBAAA,CACA,uDACI,CAGJ,yBAAA,CACA,eAAA,CACA,eAAA,CACA,UAAA,CACA,UAAA,CDJA,iCACI,cAAA,CAGJ,uCACI,wBAAA,CAGJ,wCACI,yBAAA,CCFJ,wCACI,OAAA,CACA,eAAA,CACA,yBAAA,CACA,wDAAA,CAIJ,wEAEI,iBAAA,CAGJ,uCACI,uBAAA,CACA,oBAAA,CACA,WAAA,CAIA,6DACI,sEAAA,CAGJ,4DACI,sEAAA,CAKZ,mBACI,UAAA,CACA,WAAA,CACA,YAAA,CACA,aAAA,CACA,wBAAA,CACA,eAAA,CACA,WAAA,CACA,wCAAA,CACA,iCAAA,CAEA,iBAAA,CACA,gBAAA,CACA,yBAAA,CAEA,8CACI,eAAA,CACA,QAAA\",\"sourcesContent\":[\"html {\\n    --hover-scale: 1.075;\\n    --active-scale: 0.95;\\n    --scale-bezier: cubic-bezier(0.81, 0, 0.37, 3.69);\\n    --scale-transition-duration: 0.2s; \\n\\n    @media (prefers-reduced-motion) OR (hover: none) { \\n        --hover-scale: 1 !important;\\n        --active-scale: 1 !important;\\n    }\\n}\\n\\n@mixin clickable {\\n    --scale-transition: scale var(--scale-transition-duration) var(--scale-bezier);\\n    transition: var(--scale-transition);\\n\\n    &:not(:disabled) {\\n        cursor: pointer;\\n    }\\n    \\n    &:hover:not(:disabled) {\\n        scale: var(--hover-scale);\\n    }\\n    \\n    &:active:not(:disabled) {\\n        scale: var(--active-scale);\\n    }\\n}\\n\\n@mixin distortion-border($width, $color: currentColor) {\\n    position: relative;\\n    border: #{$width} solid transparent;\\n\\n    &:before {\\n        content: '';\\n        position: absolute;\\n        z-index: 1;\\n        pointer-events: none;\\n    \\n        width: calc(100% + #{$width});\\n        height: calc(100% + #{$width});\\n        top: calc(-0.5 * #{$width});\\n        left: calc(-0.5 * #{$width});\\n        filter: var(--distortion-filter);\\n    \\n        border: solid;\\n        background-color: #0000;\\n        border-radius: inherit;\\n        border-width: #{$width};\\n        border-color: #{$color};\\n    }\\n}\\n\\n@mixin distortion-background($color:var(--background-color)) {\\n    position: relative;\\n\\n    &:before {\\n        content: '';\\n        position: absolute;\\n        z-index: -1;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        height: 100%;\\n        filter: var(--distortion-filter);\\n\\n        border-radius: inherit;\\n        background-color: #{$color};\\n    }\\n}\\n\",\"@use \\\"../mixins.module.scss\\\" as mixins;\\n\\ninput[type=\\\"range\\\"] {\\n    @include mixins.clickable;\\n\\n    --track-color: var(--accent-2);\\n    --slider-color: oklch(from var(--track-color) calc(l * var(--ok-l2)) calc(c * 0.6) h);\\n\\n    border-radius: 5px;\\n    border: solid 0.2lh var(--track-color);\\n\\n    background: #0000;\\n    transition:\\n        background-color 0.3s,\\n        var(--scale-transition);\\n\\n    color: var(--slider-color);\\n    appearance: none;\\n    overflow: hidden;\\n    height: 1lh;\\n    width: 100%;\\n\\n    /* === WebKit specific styles === */\\n    &::-webkit-slider-thumb {\\n        width: 0;\\n        appearance: none;\\n        transition: color 0.3s ease;\\n        box-shadow: calc(-100vmax + 2px) 0 0 100vmax currentcolor;\\n    }\\n\\n    /* === Firefox specific styles === */\\n    &::-moz-range-track,\\n    &::-moz-range-thumb {\\n        visibility: hidden;\\n    }\\n\\n    &::-moz-range-progress {\\n        background: currentcolor;\\n        transition: color 0.3s;\\n        height: 100%;\\n    }\\n\\n    &:hover:not(:disabled) {\\n        &::-webkit-slider-thumb {\\n            color: color-mix(in oklch, var(--slider-color) 50%, var(--track-color));\\n        }\\n\\n        &::-moz-range-progress {\\n            color: color-mix(in oklch, var(--slider-color) 50%, var(--track-color));\\n        }\\n    }\\n}\\n\\ninput[type=\\\"number\\\"] {\\n    width: 100%;\\n    height: 100%;\\n    font: inherit;\\n    color: inherit;\\n    caret-color: currentColor;\\n    appearance: none;\\n    border: none;\\n    background-color: var(--background-color);\\n    outline-color: var(--hi-vis-color);\\n\\n    border-radius: 5px;\\n    padding-left: 6px;\\n    -moz-appearance: textfield;\\n\\n    &::-webkit-inner-spin-button {\\n        appearance: none;\\n        margin: 0;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["createAndCopyBuffer","arr","usage","device","label","alignment","pad","buffer","createBuffer","size","byteLength","mappedAtCreation","writeArray","Uint8Array","getMappedRange","readArray","ArrayBuffer","byteOffset","set","unmap","async","textureToArrayBuffer","texture","mipLevel","returnBuffer","storageBuffer","resultBuffer","description","pixelSize","format","fullDescription","Error","width","height","rawBytesPerRow","bytesPerRow","Math","max","rowsPerImage","byteSize","depthOrArrayLayers","resultSize","requiredUsage","GPUBufferUsage","COPY_DST","MAP_READ","imageData","storage","encoder","createCommandEncoder","copyTextureToBuffer","queue","submit","finish","Promise","all","mapAsync","GPUMapMode","READ","onSubmittedWorkDone","mapped","h","w","slice","undefined","textureToKTX","cube","typeSize","container","pixelWidth","pixelHeight","vkFormat","keyValue","KTXswizzle","dataFormat","dataFormatDescriptor","colorModel","transferFunction","bytesPlane","samples","i","channelType","samplePosition","bitLength","bitOffset","sampleLower","sampleUpper","dimension","faceCount","pixelDepth","cubeLayers","layerCount","mipLevelCount","levels","push","levelData","uncompressedByteLength","___CSS_LOADER_EXPORT___","module","id","locals","Camera","constructor","viewParams","bufferLength","worldToView","Float32Array","this","worldToViewOffset","mat4x4Count","viewToClip","viewToClipOffset","worldToClip","worldToClipOffset","viewToWorld","viewToWorldOffset","clipToView","clipToViewOffset","clipToWorld","clipToWorldOffset","location","rotation","params","nearPlane","farPlane","fov","projection","updateParams","val","cacheView","fromQuat","setTranslation","invert","mul","perspective","PI","x","y","ortho","sizeofMat4x4f","toWorldDir","cubemapSampleConversions","mapValues","obj","fn","Object","entries","map","key","fromEntries","clamp","num","min","padTemplate","strings","values","result","forEach","str","join","mapRange","n","Array","keys","range","debounce","callback","delay","tid","args","ctx","self","clearTimeout","setTimeout","apply","binaryInsert","element","comparator","left","right","length","splice","pivot","floor","isObject","TonemapPass","colorAttachment","loadOp","storeOp","view","passDescriptor","colorAttachments","renderTarget","bindgroupLayout","createBindGroupLayout","bindGroupLayoutDescriptor","createShaderModule","code","pipelineDescriptor","layout","createPipelineLayout","bindGroupLayouts","vertex","entryPoint","fragment","targets","pipeline","createRenderPipeline","updateInput","input","bindgroup","createBindGroup","binding","resource","render","output","createView","pass","beginRenderPass","setPipeline","setBindGroup","draw","end","sampleType","viewDimension","visibility","GPUShaderStage","FRAGMENT","SkyboxPass","uniformArray","writeBuffer","uniformBuffer","useNearestSample","targetFormat","pipelineLayout","shader","skyTexture","skybox","depthTexture","globals","target","clearValue","r","g","b","a","VERTEX","sampler","type","linearSampler","createSampler","minFilter","magFilter","mipmapFilter","nearestSampler","bindGroupLayout","UNIFORM","textureBindgroup","GBuffer","_size","value","textures","tex","createTexture","updateBindgroup","updatePassDescriptor","normal","name","albedo","emission","metallicRoughness","depth","layoutDescription","idx","depthStencilAttachment","depthLoadOp","depthStoreOp","depthClearValue","GPUTextureUsage","RENDER_ATTACHMENT","TEXTURE_BINDING","group","DeferredPass","irradianceTexture","outputWidth","outputFormat","outputTexture","Uint32Array","paramBuffer","constants","SAMPLES","arrayLayerCount","baseArrayLayer","createIrradianceTexture","radianceTexture","paramArrayBuffer","uintParams","floatParams","log2","copyEncoder","copyTextureToTexture","resolve","then","mip","roughness","face","baseMipLevel","createRadianceTexture","irradianceView","radianceView","bfrdLutView","gbuffer","bfrdLut","sampleCount","SAMPLE_COUNT","createBfrdLut","Renderer","deferredPass","skyboxPass","canvas","forwardPasses","requestAnimationFrame","updateDeviceBuffer","camera","forwardPassParams","forwardPass","tonemapPass","context","getCurrentTexture","postProcessFormat","getContext","configure","COPY_SRC","alphaMode","colorSpace","updateBackings","CreateInitialized","adapter","navigator","gpu","requestAdapter","maxComputeWorkgroupSizeX","maxComputeWorkgroupsPerDimension","maxComputeInvocationsPerWorkgroup","limits","requestDevice","requiredFeatures","requiredLimits","postprocessTarget","addForwardPass","priority","resizeCanvas","rawWidth","rawHeight","maxTextureDimension2D","dimensions","ResizeObserver","inlineSize","blockSize","devicePixelContentBoxSize","observe","box","contentBoxSize","devicePixelRatio","getPreferredCanvasFormat","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","Button","props","as","Select","items","onChange","defaultSelected","style","disabled","e","defaultChecked","FileUpload","process","buttonText","accept","initialValues","callbacks","inputRef","useRef","files","setFiles","useState","useEffect","update","changed","newValues","add","delete","gridRow","gridColumn","onClick","current","click","fontStretch","display","ref","onInput","file","currentTarget","useTooltip","content","distortionRef","shown","setShown","tooltip","role","defaultFilter","scale","disable","refreshSeed","Checkbox","propVal","useId","setValue","show","hide","position","htmlFor","onMouseEnter","onMouseLeave","checked","Slider","step","sliderState","setSliderState","showTooltip","hideTooltip","useCallback","newVal","parseFloat","deps","isMountingRef","useRerenderEffect","minRefresh","SettingsPanel","children","handleId","nodeRef","buttonRef","isOpen","setIsOpen","handle","CSS","escape","onDrag","bounds","forwardedRef","className","patternUnits","cx","cy","fill","open","ModelSettingsWidget","settings","info","$type","$listeners","rest","color","ARROW_ID","ARROW_HREF","ARROW_PATH","replaceAll","openArrows","href","transform","closedArrows","isFullscreen","document","fullscreenElement","FullscreenButton","setOpen","listener","addEventListener","removeEventListener","exitFullscreen","requestFullscreen","viewBox","d","DEG_TO_RAD","OrbitCameraController","focusPoint","currentZoom","xSensitivity","ySensitivity","panSpeed","zoomSensitivity","minZoomSpeed","maxZoomSpeed","minZoom","maxZoom","phi","theta","create","rotate","fromEuler","pan","speed","delta","transformQuat","zoom","changeAbs","abs","changeScaled","sign","rot","reducer","state","action","moveState","controller","Viewport","ModelConstructor","viewportRef","canvasRef","focused","canFocus","dispatch","useReducer","mouseHandler","onWheel","deltaY","unlock","blur","handleLockChange","pointerLockElement","reserveScrollBarGap","renderer","model","catch","console","warn","onMouseDown","requestPointerLock","buttons","onMouseUp","moving","exitPointerLock","onMouseMove","movementX","movementY","TypeSizes","BYTES_PER_ELEMENT","VkFormatToWebGPU","TextureFormatToSize","r8unorm","r8snorm","r8uint","r8sint","r16uint","r16sint","r16float","rg8unorm","rg8snorm","rg8uint","rg8sint","r32uint","r32sint","r32float","rg16uint","rg16sint","rg16float","rgba8unorm","rgba8snorm","rgba8uint","rgba8sint","bgra8unorm","rgb9e5ufloat","rgb10a2uint","rgb10a2unorm","rg11b10ufloat","rg32uint","rg32sint","rg32float","rgba16uint","rgba16sint","rgba16float","rgba32uint","rgba32sint","rgba32float","TextureFormatToChannelSize","WebGPUToVkFormat","vk","wgpu","parseInt","Symbol","$callback","ListenerSyms","freeze","fastProxy","spec","reduce","prev","defineProperty","enumerable","get","propertyListener","specs","Set","publicSettings","privateSettings","cast","GlobalUniforms","deviceBuffer","bufferDescriptor","layoutDescriptor","bindGroupDescriptor","offset","bufferSize","minBindingSize"],"sourceRoot":""}