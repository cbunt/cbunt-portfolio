/*! For license information see: https://cbunt.ing/oss-licenses.json */
"use strict";(self.webpackChunkcbunt_portfolio=self.webpackChunkcbunt_portfolio||[]).push([[777],{543:(e,t,r)=>{r.r(t),r.d(t,{FileSystemDirectoryHandle:()=>l,default:()=>c});var a=r(9890),n=r(5275);const{GONE:i,MOD_ERR:s}=n.errors,o=Symbol("adapter");class l extends a.A{[o];constructor(e){super(e),this[o]=e}async getDirectoryHandle(e,t={}){if(""===e)throw new TypeError("Name can't be an empty string.");if("."===e||".."===e||e.includes("/"))throw new TypeError("Name contains invalid characters.");t.create=!!t.create;const r=await this[o].getDirectoryHandle(e,t);return new l(r)}async*entries(){const{FileSystemFileHandle:e}=await Promise.resolve().then(r.bind(r,1196));for await(const[t,r]of this[o].entries())yield[r.name,"file"===r.kind?new e(r):new l(r)]}async*getEntries(){const{FileSystemFileHandle:e}=await Promise.resolve().then(r.bind(r,1196));console.warn("deprecated, use .entries() instead");for await(let t of this[o].entries())yield"file"===t.kind?new e(t):new l(t)}async getFileHandle(e,t={}){const{FileSystemFileHandle:a}=await Promise.resolve().then(r.bind(r,1196));if(""===e)throw new TypeError("Name can't be an empty string.");if("."===e||".."===e||e.includes("/"))throw new TypeError("Name contains invalid characters.");t.create=!!t.create;return new a(await this[o].getFileHandle(e,t))}async removeEntry(e,t={}){if(""===e)throw new TypeError("Name can't be an empty string.");if("."===e||".."===e||e.includes("/"))throw new TypeError("Name contains invalid characters.");return t.recursive=!!t.recursive,this[o].removeEntry(e,t)}async resolve(e){if(await e.isSameEntry(this))return[];const t=[{handle:this,path:[]}];for(;t.length;){let{handle:r,path:a}=t.pop();for await(const n of r.values()){if(await n.isSameEntry(e))return[...a,n.name];"directory"===n.kind&&t.push({handle:n,path:[...a,n.name]})}}return null}async*keys(){for await(const[e]of this[o].entries())yield e}async*values(){for await(const[e,t]of this)yield t}[Symbol.asyncIterator](){return this.entries()}}if(Object.defineProperty(l.prototype,Symbol.toStringTag,{value:"FileSystemDirectoryHandle",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(l.prototype,{getDirectoryHandle:{enumerable:!0},entries:{enumerable:!0},getFileHandle:{enumerable:!0},removeEntry:{enumerable:!0}}),globalThis.FileSystemDirectoryHandle){const d=globalThis.FileSystemDirectoryHandle.prototype;async function y(e){const t=await navigator.storage.getDirectory();if(null===await t.resolve(e))throw new DOMException(...i)}d.resolve=async function(e){if(await e.isSameEntry(this))return[];const t=[{handle:this,path:[]}];for(;t.length;){let{handle:r,path:a}=t.pop();for await(const n of r.values()){if(await n.isSameEntry(e))return[...a,n.name];"directory"===n.kind&&t.push({handle:n,path:[...a,n.name]})}}return null};const m=d.entries;d.entries=async function*(){await y(this),yield*m.call(this)},d[Symbol.asyncIterator]=async function*(){yield*this.entries()};const w=d.removeEntry;d.removeEntry=async function(e,t={}){return w.call(this,e,t).catch((async e=>{if(e instanceof DOMException&&"UnknownError"===e.name&&!t.recursive){if(!(await m.call(this).next()).done)throw new DOMException(...s)}throw e}))}}const c=l},1196:(e,t,r)=>{r.r(t),r.d(t,{FileSystemFileHandle:()=>d,default:()=>y});var a=r(9890),n=r(1178),i=r(5275);const{INVALID:s,SYNTAX:o,GONE:l}=i.errors,c=Symbol("adapter");class d extends a.A{[c];constructor(e){super(e),this[c]=e}async createWritable(e={}){return new n.A(await this[c].createWritable(e))}async getFile(){return this[c].getFile()}}if(Object.defineProperty(d.prototype,Symbol.toStringTag,{value:"FileSystemFileHandle",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(d.prototype,{createWritable:{enumerable:!0},getFile:{enumerable:!0}}),globalThis.FileSystemFileHandle&&!globalThis.FileSystemFileHandle.prototype.createWritable){const e=new WeakMap;let t;const r=()=>{let e,t;onmessage=async r=>{const a=r.ports[0],n=r.data;switch(n.type){case"open":const r=n.name;let a=await navigator.storage.getDirectory();for(const e of n.path)a=await a.getDirectoryHandle(e);e=await a.getFileHandle(r),t=await e.createSyncAccessHandle();break;case"write":t.write(n.data,{at:n.position}),t.flush();break;case"truncate":t.truncate(n.size);break;case"abort":case"close":t.close()}a.postMessage(0)}};globalThis.FileSystemFileHandle.prototype.createWritable=async function(a){if(!t){const e=`(${r.toString()})()`,a=new Blob([e],{type:"text/javascript"});t=URL.createObjectURL(a)}const i=new Worker(t,{type:"module"});let c=0;const d=new TextEncoder;let y=await this.getFile().then((e=>e.size));const m=e=>new Promise(((t,r)=>{const a=new MessageChannel;a.port1.onmessage=e=>{e.data instanceof Error?r(e.data):t(e.data),a.port1.close(),a.port2.close(),a.port1.onmessage=null},i.postMessage(e,[a.port2])})),w=await navigator.storage.getDirectory(),p=await e.get(this),u=await w.resolve(p);if(null===u)throw new DOMException(...l);let h;await m({type:"open",path:u,name:this.name}),!1===a?.keepExistingData&&(await m({type:"truncate",size:0}),y=0);return new n.A({start:e=>{h=e},async write(e){if("write"===(e=e?.constructor===Object?{...e}:{type:"write",data:e,position:c}).type){if(!("data"in e))throw await m({type:"close"}),new DOMException(...o("write requires a data argument"));if(e.position??=c,"string"==typeof e.data)e.data=d.encode(e.data);else if(e.data instanceof ArrayBuffer)e.data=new Uint8Array(e.data);else if(e.data instanceof Uint8Array||!ArrayBuffer.isView(e.data)){if(!(e.data instanceof Uint8Array)){const t=await new Response(e.data).arrayBuffer();e.data=new Uint8Array(t)}}else e.data=new Uint8Array(e.data.buffer,e.data.byteOffset,e.data.byteLength);Number.isInteger(e.position)&&e.position>=0&&(c=e.position),c+=e.data.byteLength,y+=e.data.byteLength}else{if("seek"===e.type){if(Number.isInteger(e.position)&&e.position>=0){if(y<e.position)throw new DOMException(...s);return console.log("seeking",e),void(c=e.position)}throw await m({type:"close"}),new DOMException(...o("seek requires a position argument"))}if("truncate"===e.type){if(!(Number.isInteger(e.size)&&e.size>=0))throw await m({type:"close"}),new DOMException(...o("truncate requires a size argument"));y=e.size,c>y&&(c=y)}}await m(e)},async close(){await m({type:"close"}),i.terminate()},async abort(e){await m({type:"abort",reason:e}),i.terminate()}})};const a=FileSystemDirectoryHandle.prototype.getFileHandle;FileSystemDirectoryHandle.prototype.getFileHandle=async function(...t){const r=await a.call(this,...t);return e.set(r,this),r}}const y=d},9890:(e,t,r)=>{r.d(t,{A:()=>i});const a=Symbol("adapter");class n{[a];name;kind;constructor(e){this.kind=e.kind,this.name=e.name,this[a]=e}async queryPermission(e={}){const{mode:t="read"}=e,r=this[a];if(r.queryPermission)return r.queryPermission({mode:t});if("read"===t)return"granted";if("readwrite"===t)return r.writable?"granted":"denied";throw new TypeError(`Mode ${t} must be 'read' or 'readwrite'`)}async requestPermission({mode:e="read"}={}){const t=this[a];if(t.requestPermission)return t.requestPermission({mode:e});if("read"===e)return"granted";if("readwrite"===e)return t.writable?"granted":"denied";throw new TypeError(`Mode ${e} must be 'read' or 'readwrite'`)}async remove(e={}){await this[a].remove(e)}async isSameEntry(e){return this===e||!(!e||"object"!=typeof e||this.kind!==e.kind||!e[a])&&this[a].isSameEntry(e[a])}}Object.defineProperty(n.prototype,Symbol.toStringTag,{value:"FileSystemHandle",writable:!1,enumerable:!1,configurable:!0}),globalThis.FileSystemHandle&&(globalThis.FileSystemHandle.prototype.queryPermission??=function(e){return"granted"});const i=n},1178:(e,t,r)=>{r.d(t,{A:()=>s});var a=r(8009);const{WritableStream:n}=a.A;class i extends n{#e;constructor(e){super(e),this.#e=e,Object.setPrototypeOf(this,i.prototype),this._closed=!1}async close(){this._closed=!0;const e=this.getWriter(),t=e.close();return e.releaseLock(),t}seek(e){return this.write({type:"seek",position:e})}truncate(e){return this.write({type:"truncate",size:e})}write(e){if(this._closed)return Promise.reject(new TypeError("Cannot write to a CLOSED writable stream"));const t=this.getWriter(),r=t.write(e);return t.releaseLock(),r}}Object.defineProperty(i.prototype,Symbol.toStringTag,{value:"FileSystemWritableFileStream",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(i.prototype,{close:{enumerable:!0},seek:{enumerable:!0},truncate:{enumerable:!0},write:{enumerable:!0}}),!globalThis.FileSystemFileHandle||globalThis.FileSystemFileHandle.prototype.createWritable||globalThis.FileSystemWritableFileStream||(globalThis.FileSystemWritableFileStream=i);const s=i},8009:(e,t,r)=>{r.d(t,{A:()=>a});const a={ReadableStream:globalThis.ReadableStream,WritableStream:globalThis.WritableStream,TransformStream:globalThis.TransformStream,DOMException:globalThis.DOMException,Blob:globalThis.Blob,File:globalThis.File}},1158:(e,t,r)=>{r.d(t,{H1:()=>n});globalThis.showDirectoryPicker;globalThis.showOpenFilePicker;const a=globalThis.showSaveFilePicker;const n=async function(e={}){if(a&&!e._preferPolyfill)return a(e);e._name&&(console.warn("deprecated _name, spec now have `suggestedName`"),e.suggestedName=e._name);const{FileSystemFileHandle:t}=await Promise.resolve().then(r.bind(r,1196)),{FileHandle:n}=await r.e(249).then(r.bind(r,8249));return new t(new n(e.suggestedName))};globalThis.DataTransferItem&&!DataTransferItem.prototype.getAsFileSystemHandle&&(DataTransferItem.prototype.getAsFileSystemHandle=async function(){const e=this.webkitGetAsEntry(),[{FileHandle:t,FolderHandle:a},{FileSystemDirectoryHandle:n},{FileSystemFileHandle:i}]=await Promise.all([r.e(767).then(r.bind(r,2767)),Promise.resolve().then(r.bind(r,543)),Promise.resolve().then(r.bind(r,1196))]);return e.isFile?new i(new t(e,!1)):new n(new a(e,!1))});r(1178),r(543),r(1196),r(9890)},5275:(e,t,r)=>{r.r(t),r.d(t,{config:()=>n,errors:()=>a,fromDataTransfer:()=>i,getDirHandlesFromInput:()=>s,getFileHandlesFromInput:()=>o});const a={INVALID:["seeking position failed.","InvalidStateError"],GONE:["A requested file or directory could not be found at the time an operation was processed.","NotFoundError"],MISMATCH:["The path supplied exists, but was not an entry of requested type.","TypeMismatchError"],MOD_ERR:["The object can not be modified in this way.","InvalidModificationError"],SYNTAX:e=>[`Failed to execute 'write' on 'UnderlyingSinkBase': Invalid params passed. ${e}`,"SyntaxError"],SECURITY:["It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources.","SecurityError"],DISALLOWED:["The request is not allowed by the user agent or the platform in the current context.","NotAllowedError"]},n={writable:globalThis.WritableStream};async function i(e){console.warn("deprecated fromDataTransfer - use `dt.items[0].getAsFileSystemHandle()` instead");const[t,a,n]=await Promise.all([r.e(901).then(r.bind(r,1901)),r.e(767).then(r.bind(r,2767)),Promise.resolve().then(r.bind(r,543))]),i=new t.FolderHandle("",!1);return i._entries=e.map((e=>e.isFile?new a.FileHandle(e,!1):new a.FolderHandle(e,!1))),new n.FileSystemDirectoryHandle(i)}async function s(e){const{FolderHandle:t,FileHandle:a}=await r.e(901).then(r.bind(r,1901)),{FileSystemDirectoryHandle:n}=await Promise.resolve().then(r.bind(r,543)),i=Array.from(e.files),s=i[0].webkitRelativePath.split("/",1)[0],o=new t(s,!1);return i.forEach((e=>{const r=e.webkitRelativePath.split("/");r.shift();const n=r.pop();r.reduce(((e,r)=>(e._entries[r]||(e._entries[r]=new t(r,!1)),e._entries[r])),o)._entries[n]=new a(e.name,e,!1)})),new n(o)}async function o(e){const{FileHandle:t}=await r.e(901).then(r.bind(r,1901)),{FileSystemFileHandle:a}=await Promise.resolve().then(r.bind(r,1196));return Array.from(e.files).map((e=>new a(new t(e.name,e,!1))))}}}]);
//# sourceMappingURL=777.bundle.js.map