"use strict";(self.webpackChunkwebgpu_basic=self.webpackChunkwebgpu_basic||[]).push([[777],{543:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FileSystemDirectoryHandle: () => (/* binding */ FileSystemDirectoryHandle),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _FileSystemHandle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(890);\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(275);\n\n\n\nconst { GONE, MOD_ERR } = _util_js__WEBPACK_IMPORTED_MODULE_1__.errors\n\nconst kAdapter = Symbol('adapter')\n\nclass FileSystemDirectoryHandle extends _FileSystemHandle_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A {\n  /** @type {FileSystemDirectoryHandle} */\n  [kAdapter]\n\n  constructor (adapter) {\n    super(adapter)\n    this[kAdapter] = adapter\n  }\n\n  /**\n   * @param {string} name Name of the directory\n   * @param {object} [options]\n   * @param {boolean} [options.create] create the directory if don't exist\n   * @returns {Promise<FileSystemDirectoryHandle>}\n   */\n  async getDirectoryHandle (name, options = {}) {\n    if (name === '') {\n      throw new TypeError(`Name can't be an empty string.`)\n    }\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.create = !!options.create\n    const handle = await this[kAdapter].getDirectoryHandle(name, options)\n    return new FileSystemDirectoryHandle(handle)\n  }\n\n  /** @returns {AsyncGenerator<[string, FileSystemHandle | FileSystemDirectoryHandle]>} */\n  async * entries () {\n    const {FileSystemFileHandle} = await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 196))\n\n    for await (const [_, entry] of this[kAdapter].entries())\n      yield [entry.name, entry.kind === 'file'\n        ? new FileSystemFileHandle(entry)\n        : new FileSystemDirectoryHandle(entry)]\n  }\n\n  /** @deprecated use .entries() instead */\n  async * getEntries() {\n    const {FileSystemFileHandle} = await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 196))\n    console.warn('deprecated, use .entries() instead')\n    for await (let entry of this[kAdapter].entries())\n      yield entry.kind === 'file'\n        ? new FileSystemFileHandle(entry)\n        : new FileSystemDirectoryHandle(entry)\n  }\n\n  /**\n   * @param {string} name Name of the file\n   * @param {object} [options]\n   * @param {boolean} [options.create] create the file if don't exist\n   */\n  async getFileHandle (name, options = {}) {\n    const {FileSystemFileHandle} = await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 196))\n    if (name === '') throw new TypeError(`Name can't be an empty string.`)\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.create = !!options.create\n    const handle = await this[kAdapter].getFileHandle(name, options)\n    return new FileSystemFileHandle(handle)\n  }\n\n  /**\n   * @param {string} name\n   * @param {object} [options]\n   * @param {boolean} [options.recursive]\n   */\n  async removeEntry (name, options = {}) {\n    if (name === '') {\n      throw new TypeError(`Name can't be an empty string.`)\n    }\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.recursive = !!options.recursive // cuz node's fs.rm require boolean\n    return this[kAdapter].removeEntry(name, options)\n  }\n\n  async resolve (possibleDescendant) {\n    if (await possibleDescendant.isSameEntry(this)) {\n      return []\n    }\n\n    const openSet = [{ handle: this, path: [] }]\n\n    while (openSet.length) {\n      let { handle: current, path } = openSet.pop()\n\n      for await (const entry of current.values()) {\n        if (await entry.isSameEntry(possibleDescendant)) {\n          return [...path, entry.name]\n        }\n        if (entry.kind === 'directory') {\n          openSet.push({ handle: entry, path: [...path, entry.name] })\n        }\n      }\n    }\n\n    return null\n  }\n\n  async * keys () {\n    for await (const [name] of this[kAdapter].entries())\n      yield name\n  }\n\n  async * values () {\n    for await (const [_, entry] of this)\n      yield entry\n  }\n\n  [Symbol.asyncIterator]() {\n    return this.entries()\n  }\n}\n\nObject.defineProperty(FileSystemDirectoryHandle.prototype, Symbol.toStringTag, {\n\tvalue: 'FileSystemDirectoryHandle',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n})\n\nObject.defineProperties(FileSystemDirectoryHandle.prototype, {\n\tgetDirectoryHandle: { enumerable: true },\n\tentries: { enumerable: true },\n\tgetFileHandle: { enumerable: true },\n\tremoveEntry: { enumerable: true }\n})\n\nif (globalThis.FileSystemDirectoryHandle) {\n  const proto = globalThis.FileSystemDirectoryHandle.prototype\n\n  proto.resolve = async function resolve (possibleDescendant) {\n    if (await possibleDescendant.isSameEntry(this)) {\n      return []\n    }\n\n    const openSet = [{ handle: this, path: [] }]\n\n    while (openSet.length) {\n      let { handle: current, path } = openSet.pop()\n\n      for await (const entry of current.values()) {\n        if (await entry.isSameEntry(possibleDescendant)) {\n          return [...path, entry.name]\n        }\n        if (entry.kind === 'directory') {\n          openSet.push({ handle: entry, path: [...path, entry.name] })\n        }\n      }\n    }\n\n    return null\n  }\n\n  // Safari allows us operate on deleted files,\n  // so we need to check if they still exist.\n  // Hope to remove this one day.\n  async function ensureDoActuallyStillExist (handle) {\n    const root = await navigator.storage.getDirectory()\n    const path = await root.resolve(handle)\n    if (path === null) { throw new DOMException(...GONE) }\n  }\n\n  const entries = proto.entries\n  proto.entries = async function * () {\n    await ensureDoActuallyStillExist(this)\n    yield * entries.call(this)\n  }\n  proto[Symbol.asyncIterator] = async function * () {\n    yield * this.entries()\n  }\n\n  const removeEntry = proto.removeEntry\n  proto.removeEntry = async function (name, options = {}) {\n    return removeEntry.call(this, name, options).catch(async err => {\n      const unknown = err instanceof DOMException && err.name === 'UnknownError'\n      if (unknown && !options.recursive) {\n        const empty = (await entries.call(this).next()).done\n        if (!empty) { throw new DOMException(...MOD_ERR) }\n      }\n      throw err\n    })\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FileSystemDirectoryHandle);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///543\n")},196:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FileSystemFileHandle: () => (/* binding */ FileSystemFileHandle),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _FileSystemHandle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(890);\n/* harmony import */ var _FileSystemWritableFileStream_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(275);\n\n\n\n\nconst { INVALID, SYNTAX, GONE } = _util_js__WEBPACK_IMPORTED_MODULE_2__.errors\n\nconst kAdapter = Symbol('adapter')\n\nclass FileSystemFileHandle extends _FileSystemHandle_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A {\n  /** @type {FileSystemFileHandle} */\n  [kAdapter]\n\n  constructor (adapter) {\n    super(adapter)\n    this[kAdapter] = adapter\n  }\n\n  /**\n   * @param  {Object} [options={}]\n   * @param  {boolean} [options.keepExistingData]\n   * @returns {Promise<FileSystemWritableFileStream>}\n   */\n  async createWritable (options = {}) {\n    return new _FileSystemWritableFileStream_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .A(\n      await this[kAdapter].createWritable(options)\n    )\n  }\n\n  /**\n   * @returns {Promise<File>}\n   */\n  async getFile () {\n    return this[kAdapter].getFile()\n  }\n}\n\nObject.defineProperty(FileSystemFileHandle.prototype, Symbol.toStringTag, {\n  value: 'FileSystemFileHandle',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\nObject.defineProperties(FileSystemFileHandle.prototype, {\n  createWritable: { enumerable: true },\n  getFile: { enumerable: true }\n})\n\n// Safari doesn't support async createWritable streams yet.\nif (\n  globalThis.FileSystemFileHandle &&\n  !globalThis.FileSystemFileHandle.prototype.createWritable\n) {\n  const wm = new WeakMap()\n\n  let workerUrl\n\n  // Worker code that should be inlined (can't use any external functions)\n  const code = () => {\n    let fileHandle, handle\n\n    onmessage = async evt => {\n      const port = evt.ports[0]\n      const cmd = evt.data\n      switch (cmd.type) {\n        case 'open':\n          const file = cmd.name\n\n          let dir = await navigator.storage.getDirectory()\n\n          for (const folder of cmd.path) {\n            dir = await dir.getDirectoryHandle(folder)\n          }\n\n          fileHandle = await dir.getFileHandle(file)\n          handle = await fileHandle.createSyncAccessHandle()\n          break\n        case 'write':\n          handle.write(cmd.data, { at: cmd.position })\n          handle.flush()\n          break\n        case 'truncate':\n          handle.truncate(cmd.size)\n          break\n        case 'abort':\n        case 'close':\n          handle.close()\n          break\n      }\n\n      port.postMessage(0)\n    }\n  }\n\n\n  globalThis.FileSystemFileHandle.prototype.createWritable = async function (options) {\n    // Safari only support writing data in a worker with sync access handle.\n    if (!workerUrl) {\n      const stringCode = `(${code.toString()})()`\n      const blob = new Blob([stringCode], {\n        type: 'text/javascript'\n      })\n      workerUrl = URL.createObjectURL(blob)\n    }\n    const worker = new Worker(workerUrl, { type: 'module' })\n\n    let position = 0\n    const textEncoder = new TextEncoder()\n    let size = await this.getFile().then(file => file.size)\n\n    const send = message => new Promise((resolve, reject) => {\n      const mc = new MessageChannel()\n      mc.port1.onmessage = evt => {\n        if (evt.data instanceof Error) reject(evt.data)\n        else resolve(evt.data)\n        mc.port1.close()\n        mc.port2.close()\n        mc.port1.onmessage = null\n      }\n      worker.postMessage(message, [mc.port2])\n    })\n\n    // Safari also don't support transferable file system handles.\n    // So we need to pass the path to the worker. This is a bit hacky and ugly.\n    const root = await navigator.storage.getDirectory()\n    const parent = await wm.get(this)\n    const path = await root.resolve(parent)\n\n    // Should likely never happen, but just in case...\n    if (path === null) throw new DOMException(...GONE)\n\n    let controller\n    await send({ type: 'open', path, name: this.name })\n\n    if (options?.keepExistingData === false) {\n      await send({ type: 'truncate', size: 0 })\n      size = 0\n    }\n\n    const ws = new _FileSystemWritableFileStream_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .A({\n      start: ctrl => {\n        controller = ctrl\n      },\n      async write(chunk) {\n        const isPlainObject = chunk?.constructor === Object\n\n        if (isPlainObject) {\n          chunk = { ...chunk }\n        } else {\n          chunk = { type: 'write', data: chunk, position }\n        }\n\n        if (chunk.type === 'write') {\n          if (!('data' in chunk)) {\n            await send({ type: 'close' })\n            throw new DOMException(...SYNTAX('write requires a data argument'))\n          }\n\n          chunk.position ??= position\n\n          if (typeof chunk.data === 'string') {\n            chunk.data = textEncoder.encode(chunk.data)\n          }\n\n          else if (chunk.data instanceof ArrayBuffer) {\n            chunk.data = new Uint8Array(chunk.data)\n          }\n\n          else if (!(chunk.data instanceof Uint8Array) && ArrayBuffer.isView(chunk.data)) {\n            chunk.data = new Uint8Array(chunk.data.buffer, chunk.data.byteOffset, chunk.data.byteLength)\n          }\n\n          else if (!(chunk.data instanceof Uint8Array)) {\n            const ab = await new Response(chunk.data).arrayBuffer()\n            chunk.data = new Uint8Array(ab)\n          }\n\n          if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n            position = chunk.position\n          }\n          position += chunk.data.byteLength\n          size += chunk.data.byteLength\n        } else if (chunk.type === 'seek') {\n          if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n            if (size < chunk.position) {\n              throw new DOMException(...INVALID)\n            }\n            console.log('seeking', chunk)\n            position = chunk.position\n            return // Don't need to enqueue seek...\n          } else {\n            await send({ type: 'close' })\n            throw new DOMException(...SYNTAX('seek requires a position argument'))\n          }\n        } else if (chunk.type === 'truncate') {\n          if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n            size = chunk.size\n            if (position > size) { position = size }\n          } else {\n            await send({ type: 'close' })\n            throw new DOMException(...SYNTAX('truncate requires a size argument'))\n          }\n        }\n\n        await send(chunk)\n      },\n      async close () {\n        await send({ type: 'close' })\n        worker.terminate()\n      },\n      async abort (reason) {\n        await send({ type: 'abort', reason })\n        worker.terminate()\n      },\n    })\n\n    return ws\n  }\n\n  const orig = FileSystemDirectoryHandle.prototype.getFileHandle\n  FileSystemDirectoryHandle.prototype.getFileHandle = async function (...args) {\n    const handle = await orig.call(this, ...args)\n    wm.set(handle, this)\n    return handle\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FileSystemFileHandle);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///196\n")},890:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* unused harmony export FileSystemHandle */\nconst kAdapter = Symbol('adapter')\n\n/**\n * @typedef {Object} FileSystemHandlePermissionDescriptor\n * @property {('read'|'readwrite')} [mode='read']\n */\nclass FileSystemHandle {\n  /** @type {FileSystemHandle} */\n  [kAdapter]\n\n  /** @type {string} */\n  name\n  /** @type {('file'|'directory')} */\n  kind\n\n  /** @param {FileSystemHandle & {writable}} adapter */\n  constructor (adapter) {\n    this.kind = adapter.kind\n    this.name = adapter.name\n    this[kAdapter] = adapter\n  }\n\n  /** @param {FileSystemHandlePermissionDescriptor} descriptor */\n  async queryPermission (descriptor = {}) {\n    const { mode = 'read' } = descriptor\n    const handle = this[kAdapter]\n\n    if (handle.queryPermission) {\n      return handle.queryPermission({mode})\n    }\n\n    if (mode === 'read') {\n      return 'granted'\n    } else if (mode === 'readwrite') {\n      return handle.writable ? 'granted' : 'denied'\n    } else {\n      throw new TypeError(`Mode ${mode} must be 'read' or 'readwrite'`)\n    }\n  }\n\n  async requestPermission ({mode = 'read'} = {}) {\n    const handle = this[kAdapter]\n    if (handle.requestPermission) {\n      return handle.requestPermission({mode})\n    }\n\n    if (mode === 'read') {\n      return 'granted'\n    } else if (mode === 'readwrite') {\n      return handle.writable ? 'granted' : 'denied'\n    } else {\n      throw new TypeError(`Mode ${mode} must be 'read' or 'readwrite'`)\n    }\n  }\n\n  /**\n   * Attempts to remove the entry represented by handle from the underlying file system.\n   *\n   * @param {object} options\n   * @param {boolean} [options.recursive=false]\n   */\n  async remove (options = {}) {\n    await this[kAdapter].remove(options)\n  }\n\n  /**\n   * @param {FileSystemHandle} other\n   */\n  async isSameEntry (other) {\n    if (this === other) return true\n    if (\n      (!other) ||\n      (typeof other !== 'object') ||\n      (this.kind !== other.kind) ||\n      (!other[kAdapter])\n    ) return false\n    return this[kAdapter].isSameEntry(other[kAdapter])\n  }\n}\n\nObject.defineProperty(FileSystemHandle.prototype, Symbol.toStringTag, {\n  value: 'FileSystemHandle',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\n// Safari safari doesn't support writable streams yet.\nif (globalThis.FileSystemHandle) {\n  globalThis.FileSystemHandle.prototype.queryPermission ??= function (descriptor) {\n    return 'granted'\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FileSystemHandle);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODkwLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjLHNCQUFzQjtBQUNwQztBQUNBO0FBQ0EsYUFBYSxrQkFBa0I7QUFDL0I7O0FBRUEsYUFBYSxRQUFRO0FBQ3JCO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkM7O0FBRUEsY0FBYyxvQkFBb0IsV0FBVztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGNBQWMsc0NBQXNDO0FBQ3BELHdDQUF3QztBQUN4QyxZQUFZLGdCQUFnQjtBQUM1Qjs7QUFFQTtBQUNBLHFDQUFxQyxLQUFLO0FBQzFDOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ04sa0NBQWtDLE1BQU07QUFDeEM7QUFDQTs7QUFFQSw0QkFBNEIsZUFBZSxJQUFJO0FBQy9DO0FBQ0E7QUFDQSx1Q0FBdUMsS0FBSztBQUM1Qzs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOLGtDQUFrQyxNQUFNO0FBQ3hDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsU0FBUztBQUN0QjtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBOztBQUVBO0FBQ0EsYUFBYSxrQkFBa0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSxnQkFBZ0I7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmdwdS1iYXNpYy8uL25vZGVfbW9kdWxlcy8ucG5wbS9uYXRpdmUtZmlsZS1zeXN0ZW0tYWRhcHRlckAzLjAuMS9ub2RlX21vZHVsZXMvbmF0aXZlLWZpbGUtc3lzdGVtLWFkYXB0ZXIvc3JjL0ZpbGVTeXN0ZW1IYW5kbGUuanM/YWNlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBrQWRhcHRlciA9IFN5bWJvbCgnYWRhcHRlcicpXG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gRmlsZVN5c3RlbUhhbmRsZVBlcm1pc3Npb25EZXNjcmlwdG9yXG4gKiBAcHJvcGVydHkgeygncmVhZCd8J3JlYWR3cml0ZScpfSBbbW9kZT0ncmVhZCddXG4gKi9cbmNsYXNzIEZpbGVTeXN0ZW1IYW5kbGUge1xuICAvKiogQHR5cGUge0ZpbGVTeXN0ZW1IYW5kbGV9ICovXG4gIFtrQWRhcHRlcl1cblxuICAvKiogQHR5cGUge3N0cmluZ30gKi9cbiAgbmFtZVxuICAvKiogQHR5cGUgeygnZmlsZSd8J2RpcmVjdG9yeScpfSAqL1xuICBraW5kXG5cbiAgLyoqIEBwYXJhbSB7RmlsZVN5c3RlbUhhbmRsZSAmIHt3cml0YWJsZX19IGFkYXB0ZXIgKi9cbiAgY29uc3RydWN0b3IgKGFkYXB0ZXIpIHtcbiAgICB0aGlzLmtpbmQgPSBhZGFwdGVyLmtpbmRcbiAgICB0aGlzLm5hbWUgPSBhZGFwdGVyLm5hbWVcbiAgICB0aGlzW2tBZGFwdGVyXSA9IGFkYXB0ZXJcbiAgfVxuXG4gIC8qKiBAcGFyYW0ge0ZpbGVTeXN0ZW1IYW5kbGVQZXJtaXNzaW9uRGVzY3JpcHRvcn0gZGVzY3JpcHRvciAqL1xuICBhc3luYyBxdWVyeVBlcm1pc3Npb24gKGRlc2NyaXB0b3IgPSB7fSkge1xuICAgIGNvbnN0IHsgbW9kZSA9ICdyZWFkJyB9ID0gZGVzY3JpcHRvclxuICAgIGNvbnN0IGhhbmRsZSA9IHRoaXNba0FkYXB0ZXJdXG5cbiAgICBpZiAoaGFuZGxlLnF1ZXJ5UGVybWlzc2lvbikge1xuICAgICAgcmV0dXJuIGhhbmRsZS5xdWVyeVBlcm1pc3Npb24oe21vZGV9KVxuICAgIH1cblxuICAgIGlmIChtb2RlID09PSAncmVhZCcpIHtcbiAgICAgIHJldHVybiAnZ3JhbnRlZCdcbiAgICB9IGVsc2UgaWYgKG1vZGUgPT09ICdyZWFkd3JpdGUnKSB7XG4gICAgICByZXR1cm4gaGFuZGxlLndyaXRhYmxlID8gJ2dyYW50ZWQnIDogJ2RlbmllZCdcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgTW9kZSAke21vZGV9IG11c3QgYmUgJ3JlYWQnIG9yICdyZWFkd3JpdGUnYClcbiAgICB9XG4gIH1cblxuICBhc3luYyByZXF1ZXN0UGVybWlzc2lvbiAoe21vZGUgPSAncmVhZCd9ID0ge30pIHtcbiAgICBjb25zdCBoYW5kbGUgPSB0aGlzW2tBZGFwdGVyXVxuICAgIGlmIChoYW5kbGUucmVxdWVzdFBlcm1pc3Npb24pIHtcbiAgICAgIHJldHVybiBoYW5kbGUucmVxdWVzdFBlcm1pc3Npb24oe21vZGV9KVxuICAgIH1cblxuICAgIGlmIChtb2RlID09PSAncmVhZCcpIHtcbiAgICAgIHJldHVybiAnZ3JhbnRlZCdcbiAgICB9IGVsc2UgaWYgKG1vZGUgPT09ICdyZWFkd3JpdGUnKSB7XG4gICAgICByZXR1cm4gaGFuZGxlLndyaXRhYmxlID8gJ2dyYW50ZWQnIDogJ2RlbmllZCdcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgTW9kZSAke21vZGV9IG11c3QgYmUgJ3JlYWQnIG9yICdyZWFkd3JpdGUnYClcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQXR0ZW1wdHMgdG8gcmVtb3ZlIHRoZSBlbnRyeSByZXByZXNlbnRlZCBieSBoYW5kbGUgZnJvbSB0aGUgdW5kZXJseWluZyBmaWxlIHN5c3RlbS5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAgICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5yZWN1cnNpdmU9ZmFsc2VdXG4gICAqL1xuICBhc3luYyByZW1vdmUgKG9wdGlvbnMgPSB7fSkge1xuICAgIGF3YWl0IHRoaXNba0FkYXB0ZXJdLnJlbW92ZShvcHRpb25zKVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7RmlsZVN5c3RlbUhhbmRsZX0gb3RoZXJcbiAgICovXG4gIGFzeW5jIGlzU2FtZUVudHJ5IChvdGhlcikge1xuICAgIGlmICh0aGlzID09PSBvdGhlcikgcmV0dXJuIHRydWVcbiAgICBpZiAoXG4gICAgICAoIW90aGVyKSB8fFxuICAgICAgKHR5cGVvZiBvdGhlciAhPT0gJ29iamVjdCcpIHx8XG4gICAgICAodGhpcy5raW5kICE9PSBvdGhlci5raW5kKSB8fFxuICAgICAgKCFvdGhlcltrQWRhcHRlcl0pXG4gICAgKSByZXR1cm4gZmFsc2VcbiAgICByZXR1cm4gdGhpc1trQWRhcHRlcl0uaXNTYW1lRW50cnkob3RoZXJba0FkYXB0ZXJdKVxuICB9XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShGaWxlU3lzdGVtSGFuZGxlLnByb3RvdHlwZSwgU3ltYm9sLnRvU3RyaW5nVGFnLCB7XG4gIHZhbHVlOiAnRmlsZVN5c3RlbUhhbmRsZScsXG4gIHdyaXRhYmxlOiBmYWxzZSxcbiAgZW51bWVyYWJsZTogZmFsc2UsXG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZVxufSlcblxuLy8gU2FmYXJpIHNhZmFyaSBkb2Vzbid0IHN1cHBvcnQgd3JpdGFibGUgc3RyZWFtcyB5ZXQuXG5pZiAoZ2xvYmFsVGhpcy5GaWxlU3lzdGVtSGFuZGxlKSB7XG4gIGdsb2JhbFRoaXMuRmlsZVN5c3RlbUhhbmRsZS5wcm90b3R5cGUucXVlcnlQZXJtaXNzaW9uID8/PSBmdW5jdGlvbiAoZGVzY3JpcHRvcikge1xuICAgIHJldHVybiAnZ3JhbnRlZCdcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBGaWxlU3lzdGVtSGFuZGxlXG5leHBvcnQgeyBGaWxlU3lzdGVtSGFuZGxlIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///890\n")},178:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* unused harmony export FileSystemWritableFileStream */\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);\n\n\nconst { WritableStream } = _config_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A\n\nclass FileSystemWritableFileStream extends WritableStream {\n  #writer\n  constructor (writer) {\n    super(writer)\n    this.#writer = writer\n    // Stupid Safari hack to extend native classes\n    // https://bugs.webkit.org/show_bug.cgi?id=226201\n    Object.setPrototypeOf(this, FileSystemWritableFileStream.prototype)\n\n    /** @private */\n    this._closed = false\n  }\n\n  async close () {\n    this._closed = true\n    const w = this.getWriter()\n    const p = w.close()\n    w.releaseLock()\n    return p\n    // return super.close ? super.close() : this.getWriter().close()\n  }\n\n  /** @param {number} position */\n  seek (position) {\n    return this.write({ type: 'seek', position })\n  }\n\n  /** @param {number} size */\n  truncate (size) {\n    return this.write({ type: 'truncate', size })\n  }\n\n  // The write(data) method steps are:\n  write (data) {\n    if (this._closed) {\n      return Promise.reject(new TypeError('Cannot write to a CLOSED writable stream'))\n    }\n\n    // 1. Let writer be the result of getting a writer for this.\n    const writer = this.getWriter()\n\n    // 2. Let result be the result of writing a chunk to writer given data.\n    const result = writer.write(data)\n\n    // 3. Release writer.\n    writer.releaseLock()\n\n    // 4. Return result.\n    return result\n  }\n}\n\nObject.defineProperty(FileSystemWritableFileStream.prototype, Symbol.toStringTag, {\n  value: 'FileSystemWritableFileStream',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\nObject.defineProperties(FileSystemWritableFileStream.prototype, {\n  close: { enumerable: true },\n  seek: { enumerable: true },\n  truncate: { enumerable: true },\n  write: { enumerable: true }\n})\n\n// Safari safari doesn't support writable streams yet.\nif (\n  globalThis.FileSystemFileHandle &&\n  !globalThis.FileSystemFileHandle.prototype.createWritable &&\n  !globalThis.FileSystemWritableFileStream\n) {\n  globalThis.FileSystemWritableFileStream = FileSystemWritableFileStream\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FileSystemWritableFileStream);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdDOztBQUVoQyxRQUFRLGlCQUFpQixFQUFFLDJEQUFNOztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGNBQWMsUUFBUTtBQUN0QjtBQUNBLHdCQUF3Qix3QkFBd0I7QUFDaEQ7O0FBRUEsY0FBYyxRQUFRO0FBQ3RCO0FBQ0Esd0JBQXdCLHdCQUF3QjtBQUNoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0EsV0FBVyxrQkFBa0I7QUFDN0IsVUFBVSxrQkFBa0I7QUFDNUIsY0FBYyxrQkFBa0I7QUFDaEMsV0FBVztBQUNYLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSw0QkFBNEI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmdwdS1iYXNpYy8uL25vZGVfbW9kdWxlcy8ucG5wbS9uYXRpdmUtZmlsZS1zeXN0ZW0tYWRhcHRlckAzLjAuMS9ub2RlX21vZHVsZXMvbmF0aXZlLWZpbGUtc3lzdGVtLWFkYXB0ZXIvc3JjL0ZpbGVTeXN0ZW1Xcml0YWJsZUZpbGVTdHJlYW0uanM/NTY5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29uZmlnIGZyb20gJy4vY29uZmlnLmpzJ1xuXG5jb25zdCB7IFdyaXRhYmxlU3RyZWFtIH0gPSBjb25maWdcblxuY2xhc3MgRmlsZVN5c3RlbVdyaXRhYmxlRmlsZVN0cmVhbSBleHRlbmRzIFdyaXRhYmxlU3RyZWFtIHtcbiAgI3dyaXRlclxuICBjb25zdHJ1Y3RvciAod3JpdGVyKSB7XG4gICAgc3VwZXIod3JpdGVyKVxuICAgIHRoaXMuI3dyaXRlciA9IHdyaXRlclxuICAgIC8vIFN0dXBpZCBTYWZhcmkgaGFjayB0byBleHRlbmQgbmF0aXZlIGNsYXNzZXNcbiAgICAvLyBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MjI2MjAxXG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIEZpbGVTeXN0ZW1Xcml0YWJsZUZpbGVTdHJlYW0ucHJvdG90eXBlKVxuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgdGhpcy5fY2xvc2VkID0gZmFsc2VcbiAgfVxuXG4gIGFzeW5jIGNsb3NlICgpIHtcbiAgICB0aGlzLl9jbG9zZWQgPSB0cnVlXG4gICAgY29uc3QgdyA9IHRoaXMuZ2V0V3JpdGVyKClcbiAgICBjb25zdCBwID0gdy5jbG9zZSgpXG4gICAgdy5yZWxlYXNlTG9jaygpXG4gICAgcmV0dXJuIHBcbiAgICAvLyByZXR1cm4gc3VwZXIuY2xvc2UgPyBzdXBlci5jbG9zZSgpIDogdGhpcy5nZXRXcml0ZXIoKS5jbG9zZSgpXG4gIH1cblxuICAvKiogQHBhcmFtIHtudW1iZXJ9IHBvc2l0aW9uICovXG4gIHNlZWsgKHBvc2l0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMud3JpdGUoeyB0eXBlOiAnc2VlaycsIHBvc2l0aW9uIH0pXG4gIH1cblxuICAvKiogQHBhcmFtIHtudW1iZXJ9IHNpemUgKi9cbiAgdHJ1bmNhdGUgKHNpemUpIHtcbiAgICByZXR1cm4gdGhpcy53cml0ZSh7IHR5cGU6ICd0cnVuY2F0ZScsIHNpemUgfSlcbiAgfVxuXG4gIC8vIFRoZSB3cml0ZShkYXRhKSBtZXRob2Qgc3RlcHMgYXJlOlxuICB3cml0ZSAoZGF0YSkge1xuICAgIGlmICh0aGlzLl9jbG9zZWQpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgVHlwZUVycm9yKCdDYW5ub3Qgd3JpdGUgdG8gYSBDTE9TRUQgd3JpdGFibGUgc3RyZWFtJykpXG4gICAgfVxuXG4gICAgLy8gMS4gTGV0IHdyaXRlciBiZSB0aGUgcmVzdWx0IG9mIGdldHRpbmcgYSB3cml0ZXIgZm9yIHRoaXMuXG4gICAgY29uc3Qgd3JpdGVyID0gdGhpcy5nZXRXcml0ZXIoKVxuXG4gICAgLy8gMi4gTGV0IHJlc3VsdCBiZSB0aGUgcmVzdWx0IG9mIHdyaXRpbmcgYSBjaHVuayB0byB3cml0ZXIgZ2l2ZW4gZGF0YS5cbiAgICBjb25zdCByZXN1bHQgPSB3cml0ZXIud3JpdGUoZGF0YSlcblxuICAgIC8vIDMuIFJlbGVhc2Ugd3JpdGVyLlxuICAgIHdyaXRlci5yZWxlYXNlTG9jaygpXG5cbiAgICAvLyA0LiBSZXR1cm4gcmVzdWx0LlxuICAgIHJldHVybiByZXN1bHRcbiAgfVxufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoRmlsZVN5c3RlbVdyaXRhYmxlRmlsZVN0cmVhbS5wcm90b3R5cGUsIFN5bWJvbC50b1N0cmluZ1RhZywge1xuICB2YWx1ZTogJ0ZpbGVTeXN0ZW1Xcml0YWJsZUZpbGVTdHJlYW0nLFxuICB3cml0YWJsZTogZmFsc2UsXG4gIGVudW1lcmFibGU6IGZhbHNlLFxuICBjb25maWd1cmFibGU6IHRydWVcbn0pXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKEZpbGVTeXN0ZW1Xcml0YWJsZUZpbGVTdHJlYW0ucHJvdG90eXBlLCB7XG4gIGNsb3NlOiB7IGVudW1lcmFibGU6IHRydWUgfSxcbiAgc2VlazogeyBlbnVtZXJhYmxlOiB0cnVlIH0sXG4gIHRydW5jYXRlOiB7IGVudW1lcmFibGU6IHRydWUgfSxcbiAgd3JpdGU6IHsgZW51bWVyYWJsZTogdHJ1ZSB9XG59KVxuXG4vLyBTYWZhcmkgc2FmYXJpIGRvZXNuJ3Qgc3VwcG9ydCB3cml0YWJsZSBzdHJlYW1zIHlldC5cbmlmIChcbiAgZ2xvYmFsVGhpcy5GaWxlU3lzdGVtRmlsZUhhbmRsZSAmJlxuICAhZ2xvYmFsVGhpcy5GaWxlU3lzdGVtRmlsZUhhbmRsZS5wcm90b3R5cGUuY3JlYXRlV3JpdGFibGUgJiZcbiAgIWdsb2JhbFRoaXMuRmlsZVN5c3RlbVdyaXRhYmxlRmlsZVN0cmVhbVxuKSB7XG4gIGdsb2JhbFRoaXMuRmlsZVN5c3RlbVdyaXRhYmxlRmlsZVN0cmVhbSA9IEZpbGVTeXN0ZW1Xcml0YWJsZUZpbGVTdHJlYW1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRmlsZVN5c3RlbVdyaXRhYmxlRmlsZVN0cmVhbVxuZXhwb3J0IHsgRmlsZVN5c3RlbVdyaXRhYmxlRmlsZVN0cmVhbSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///178\n")},9:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst config = {\n  ReadableStream: globalThis.ReadableStream,\n  WritableStream: globalThis.WritableStream,\n  TransformStream: globalThis.TransformStream,\n  DOMException: globalThis.DOMException,\n  Blob: globalThis.Blob,\n  File: globalThis.File,\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (config);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlFQUFlLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJncHUtYmFzaWMvLi9ub2RlX21vZHVsZXMvLnBucG0vbmF0aXZlLWZpbGUtc3lzdGVtLWFkYXB0ZXJAMy4wLjEvbm9kZV9tb2R1bGVzL25hdGl2ZS1maWxlLXN5c3RlbS1hZGFwdGVyL3NyYy9jb25maWcuanM/YzBkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb25maWcgPSB7XG4gIFJlYWRhYmxlU3RyZWFtOiBnbG9iYWxUaGlzLlJlYWRhYmxlU3RyZWFtLFxuICBXcml0YWJsZVN0cmVhbTogZ2xvYmFsVGhpcy5Xcml0YWJsZVN0cmVhbSxcbiAgVHJhbnNmb3JtU3RyZWFtOiBnbG9iYWxUaGlzLlRyYW5zZm9ybVN0cmVhbSxcbiAgRE9NRXhjZXB0aW9uOiBnbG9iYWxUaGlzLkRPTUV4Y2VwdGlvbixcbiAgQmxvYjogZ2xvYmFsVGhpcy5CbG9iLFxuICBGaWxlOiBnbG9iYWxUaGlzLkZpbGUsXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbmZpZ1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9\n")},777:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  H1: () => (/* reexport */ src_showSaveFilePicker)\n});\n\n// UNUSED EXPORTS: FileSystemDirectoryHandle, FileSystemFileHandle, FileSystemHandle, FileSystemWritableFileStream, getOriginPrivateDirectory, showDirectoryPicker, showOpenFilePicker\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/showDirectoryPicker.js\n/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\n\nconst showDirectoryPicker_native = globalThis.showDirectoryPicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @returns {Promise<FileSystemDirectoryHandle>}\n */\nasync function showDirectoryPicker (options = {}) {\n  if (showDirectoryPicker_native && !options._preferPolyfill) {\n    return showDirectoryPicker_native(options)\n  }\n\n  const input = document.createElement('input')\n  input.type = 'file'\n  input.webkitdirectory = true\n  // Fallback to multiple files input for iOS Safari\n  input.multiple = true\n\n  // See https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n  input.style.position = 'fixed'\n  input.style.top = '-100000px'\n  input.style.left = '-100000px'\n  document.body.appendChild(input)\n\n  // Lazy load while the user is choosing the directory\n  const p = Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 275))\n\n  await new Promise(resolve => {\n    input.addEventListener('change', resolve)\n    input.click()\n  })\n\n  return p.then(mod => mod.getDirHandlesFromInput(input))\n}\n\n/* harmony default export */ const src_showDirectoryPicker = ((/* unused pure expression or super */ null && (showDirectoryPicker)));\n\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/showOpenFilePicker.js\n/** @typedef {import('./FileSystemFileHandle.js').default} FileSystemFileHandle */\n\nconst def = { accepts: [] }\nconst showOpenFilePicker_native = globalThis.showOpenFilePicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options.multiple] If you want to allow more than one file\n * @param {boolean} [options.excludeAcceptAllOption=false] Prevent user for selecting any\n * @param {Object[]} [options.accepts] Files you want to accept\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @returns {Promise<FileSystemFileHandle[]>}\n */\nasync function showOpenFilePicker (options = {}) {\n  const opts = { ...def, ...options }\n\n  if (showOpenFilePicker_native && !options._preferPolyfill) {\n    return showOpenFilePicker_native(opts)\n  }\n\n  const input = document.createElement('input')\n  input.type = 'file'\n  input.multiple = opts.multiple\n  input.accept = (opts.accepts || [])\n    .map(e => [\n      ...(e.extensions || []).map(e => '.' + e),\n      ...e.mimeTypes || []]\n    )\n    .flat()\n    .join(',')\n\n  // See https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n  Object.assign(input.style, {\n    position: 'fixed',\n    top: '-100000px',\n    left: '-100000px'\n  })\n\n  document.body.appendChild(input)\n\n  // Lazy load while the user is choosing the directory\n  const p = Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 275))\n\n  await new Promise(resolve => {\n    input.addEventListener('change', resolve, { once: true })\n    input.click()\n  })\n  input.remove()\n\n  return p.then(m => m.getFileHandlesFromInput(input))\n}\n\n/* harmony default export */ const src_showOpenFilePicker = ((/* unused pure expression or super */ null && (showOpenFilePicker)));\n\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/showSaveFilePicker.js\n/** @typedef {import('./FileSystemFileHandle.js').default} FileSystemFileHandle */\n\nconst showSaveFilePicker_native = globalThis.showSaveFilePicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options.excludeAcceptAllOption=false] Prevent user for selecting any\n * @param {Object[]} [options.types] Files you want to accept\n * @param {string} [options.suggestedName] the name to fall back to when using polyfill\n * @param {string} [options._name] the name to fall back to when using polyfill\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @return {Promise<FileSystemFileHandle>}\n */\nasync function showSaveFilePicker (options = {}) {\n  if (showSaveFilePicker_native && !options._preferPolyfill) {\n    return showSaveFilePicker_native(options)\n  }\n\n  if (options._name) {\n    console.warn('deprecated _name, spec now have `suggestedName`')\n    options.suggestedName = options._name\n  }\n\n  const { FileSystemFileHandle } = await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 196))\n  const { FileHandle } = await __webpack_require__.e(/* import() */ 249).then(__webpack_require__.bind(__webpack_require__, 249))\n  return new FileSystemFileHandle(new FileHandle(options.suggestedName))\n}\n\n/* harmony default export */ const src_showSaveFilePicker = (showSaveFilePicker);\n\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/getOriginPrivateDirectory.js\n/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\n\nif (globalThis.DataTransferItem && !DataTransferItem.prototype.getAsFileSystemHandle) {\n  DataTransferItem.prototype.getAsFileSystemHandle = async function () {\n    const entry = this.webkitGetAsEntry()\n    const [\n      { FileHandle, FolderHandle },\n      { FileSystemDirectoryHandle },\n      { FileSystemFileHandle }\n    ] = await Promise.all([\n      __webpack_require__.e(/* import() */ 767).then(__webpack_require__.bind(__webpack_require__, 767)),\n      Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 543)),\n      Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 196))\n    ])\n\n    return entry.isFile\n      ? new FileSystemFileHandle(new FileHandle(entry, false))\n      : new FileSystemDirectoryHandle(new FolderHandle(entry, false))\n  }\n}\n\n/**\n * @param {object=} driver\n * @return {Promise<FileSystemDirectoryHandle>}\n */\nasync function getOriginPrivateDirectory (driver, options = {}) {\n  if (!driver) {\n    return globalThis.navigator?.storage?.getDirectory() || globalThis.getOriginPrivateDirectory()\n  }\n  const {FileSystemDirectoryHandle} = await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 543))\n  const module = await driver\n  const sandbox = await (module.default\n    ? module.default(options)\n    : module(options)\n  )\n  return new FileSystemDirectoryHandle(sandbox)\n}\n\n/* harmony default export */ const src_getOriginPrivateDirectory = ((/* unused pure expression or super */ null && (getOriginPrivateDirectory)));\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/FileSystemWritableFileStream.js\nvar FileSystemWritableFileStream = __webpack_require__(178);\n// EXTERNAL MODULE: ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/FileSystemDirectoryHandle.js\nvar FileSystemDirectoryHandle = __webpack_require__(543);\n// EXTERNAL MODULE: ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/FileSystemFileHandle.js\nvar FileSystemFileHandle = __webpack_require__(196);\n// EXTERNAL MODULE: ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/FileSystemHandle.js\nvar FileSystemHandle = __webpack_require__(890);\n;// CONCATENATED MODULE: ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/es6.js\n\n\n\n\n// FileSystemWritableFileStream must be loaded before FileSystemFileHandle\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///777\n")},275:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   errors: () => (/* binding */ errors),\n/* harmony export */   fromDataTransfer: () => (/* binding */ fromDataTransfer),\n/* harmony export */   getDirHandlesFromInput: () => (/* binding */ getDirHandlesFromInput),\n/* harmony export */   getFileHandlesFromInput: () => (/* binding */ getFileHandlesFromInput)\n/* harmony export */ });\nconst errors = {\n  INVALID: ['seeking position failed.', 'InvalidStateError'],\n  GONE: ['A requested file or directory could not be found at the time an operation was processed.', 'NotFoundError'],\n  MISMATCH: ['The path supplied exists, but was not an entry of requested type.', 'TypeMismatchError'],\n  MOD_ERR: ['The object can not be modified in this way.', 'InvalidModificationError'],\n  SYNTAX: m => [`Failed to execute 'write' on 'UnderlyingSinkBase': Invalid params passed. ${m}`, 'SyntaxError'],\n  SECURITY: ['It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources.', 'SecurityError'],\n  DISALLOWED: ['The request is not allowed by the user agent or the platform in the current context.', 'NotAllowedError']\n}\n\nconst config = {\n  writable: globalThis.WritableStream\n}\n\nasync function fromDataTransfer (entries) {\n  console.warn('deprecated fromDataTransfer - use `dt.items[0].getAsFileSystemHandle()` instead')\n  const [memory, sandbox, fs] = await Promise.all([\n    __webpack_require__.e(/* import() */ 901).then(__webpack_require__.bind(__webpack_require__, 901)),\n    __webpack_require__.e(/* import() */ 767).then(__webpack_require__.bind(__webpack_require__, 767)),\n    Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 543))\n  ])\n\n  const folder = new memory.FolderHandle('', false)\n  folder._entries = entries.map(entry => entry.isFile\n    ? new sandbox.FileHandle(entry, false)\n    : new sandbox.FolderHandle(entry, false)\n  )\n\n  return new fs.FileSystemDirectoryHandle(folder)\n}\n\nasync function getDirHandlesFromInput (input) {\n  const { FolderHandle, FileHandle } = await __webpack_require__.e(/* import() */ 901).then(__webpack_require__.bind(__webpack_require__, 901))\n  const { FileSystemDirectoryHandle } = await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 543))\n\n  const files = Array.from(input.files)\n  const rootName = files[0].webkitRelativePath.split('/', 1)[0]\n  const root = new FolderHandle(rootName, false)\n\n  files.forEach(file => {\n    const path = file.webkitRelativePath.split('/')\n    path.shift()\n    const name = path.pop()\n\n    const dir = path.reduce((dir, path) => {\n      if (!dir._entries[path]) dir._entries[path] = new FolderHandle(path, false)\n      return dir._entries[path]\n    }, root)\n\n    dir._entries[name] = new FileHandle(file.name, file, false)\n  })\n\n  return new FileSystemDirectoryHandle(root)\n}\n\nasync function getFileHandlesFromInput (input) {\n  const { FileHandle } = await __webpack_require__.e(/* import() */ 901).then(__webpack_require__.bind(__webpack_require__, 901))\n  const { FileSystemFileHandle } = await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 196))\n\n  return Array.from(input.files).map(file =>\n    new FileSystemFileHandle(new FileHandle(file.name, file, false))\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjc1LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZGQUE2RixFQUFFO0FBQy9GO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0EsSUFBSSxrR0FBOEI7QUFDbEMsSUFBSSxrR0FBK0I7QUFDbkMsSUFBSSx3RkFBd0M7QUFDNUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVPO0FBQ1AsVUFBVSwyQkFBMkIsUUFBUSxrR0FBOEI7QUFDM0UsVUFBVSw0QkFBNEIsUUFBUSx3RkFBd0M7O0FBRXRGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVPO0FBQ1AsVUFBVSxhQUFhLFFBQVEsa0dBQThCO0FBQzdELFVBQVUsdUJBQXVCLFFBQVEsd0ZBQW1DOztBQUU1RTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmdwdS1iYXNpYy8uL25vZGVfbW9kdWxlcy8ucG5wbS9uYXRpdmUtZmlsZS1zeXN0ZW0tYWRhcHRlckAzLjAuMS9ub2RlX21vZHVsZXMvbmF0aXZlLWZpbGUtc3lzdGVtLWFkYXB0ZXIvc3JjL3V0aWwuanM/NTE4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZXJyb3JzID0ge1xuICBJTlZBTElEOiBbJ3NlZWtpbmcgcG9zaXRpb24gZmFpbGVkLicsICdJbnZhbGlkU3RhdGVFcnJvciddLFxuICBHT05FOiBbJ0EgcmVxdWVzdGVkIGZpbGUgb3IgZGlyZWN0b3J5IGNvdWxkIG5vdCBiZSBmb3VuZCBhdCB0aGUgdGltZSBhbiBvcGVyYXRpb24gd2FzIHByb2Nlc3NlZC4nLCAnTm90Rm91bmRFcnJvciddLFxuICBNSVNNQVRDSDogWydUaGUgcGF0aCBzdXBwbGllZCBleGlzdHMsIGJ1dCB3YXMgbm90IGFuIGVudHJ5IG9mIHJlcXVlc3RlZCB0eXBlLicsICdUeXBlTWlzbWF0Y2hFcnJvciddLFxuICBNT0RfRVJSOiBbJ1RoZSBvYmplY3QgY2FuIG5vdCBiZSBtb2RpZmllZCBpbiB0aGlzIHdheS4nLCAnSW52YWxpZE1vZGlmaWNhdGlvbkVycm9yJ10sXG4gIFNZTlRBWDogbSA9PiBbYEZhaWxlZCB0byBleGVjdXRlICd3cml0ZScgb24gJ1VuZGVybHlpbmdTaW5rQmFzZSc6IEludmFsaWQgcGFyYW1zIHBhc3NlZC4gJHttfWAsICdTeW50YXhFcnJvciddLFxuICBTRUNVUklUWTogWydJdCB3YXMgZGV0ZXJtaW5lZCB0aGF0IGNlcnRhaW4gZmlsZXMgYXJlIHVuc2FmZSBmb3IgYWNjZXNzIHdpdGhpbiBhIFdlYiBhcHBsaWNhdGlvbiwgb3IgdGhhdCB0b28gbWFueSBjYWxscyBhcmUgYmVpbmcgbWFkZSBvbiBmaWxlIHJlc291cmNlcy4nLCAnU2VjdXJpdHlFcnJvciddLFxuICBESVNBTExPV0VEOiBbJ1RoZSByZXF1ZXN0IGlzIG5vdCBhbGxvd2VkIGJ5IHRoZSB1c2VyIGFnZW50IG9yIHRoZSBwbGF0Zm9ybSBpbiB0aGUgY3VycmVudCBjb250ZXh0LicsICdOb3RBbGxvd2VkRXJyb3InXVxufVxuXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICB3cml0YWJsZTogZ2xvYmFsVGhpcy5Xcml0YWJsZVN0cmVhbVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZnJvbURhdGFUcmFuc2ZlciAoZW50cmllcykge1xuICBjb25zb2xlLndhcm4oJ2RlcHJlY2F0ZWQgZnJvbURhdGFUcmFuc2ZlciAtIHVzZSBgZHQuaXRlbXNbMF0uZ2V0QXNGaWxlU3lzdGVtSGFuZGxlKClgIGluc3RlYWQnKVxuICBjb25zdCBbbWVtb3J5LCBzYW5kYm94LCBmc10gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgaW1wb3J0KCcuL2FkYXB0ZXJzL21lbW9yeS5qcycpLFxuICAgIGltcG9ydCgnLi9hZGFwdGVycy9zYW5kYm94LmpzJyksXG4gICAgaW1wb3J0KCcuL0ZpbGVTeXN0ZW1EaXJlY3RvcnlIYW5kbGUuanMnKVxuICBdKVxuXG4gIGNvbnN0IGZvbGRlciA9IG5ldyBtZW1vcnkuRm9sZGVySGFuZGxlKCcnLCBmYWxzZSlcbiAgZm9sZGVyLl9lbnRyaWVzID0gZW50cmllcy5tYXAoZW50cnkgPT4gZW50cnkuaXNGaWxlXG4gICAgPyBuZXcgc2FuZGJveC5GaWxlSGFuZGxlKGVudHJ5LCBmYWxzZSlcbiAgICA6IG5ldyBzYW5kYm94LkZvbGRlckhhbmRsZShlbnRyeSwgZmFsc2UpXG4gIClcblxuICByZXR1cm4gbmV3IGZzLkZpbGVTeXN0ZW1EaXJlY3RvcnlIYW5kbGUoZm9sZGVyKVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0RGlySGFuZGxlc0Zyb21JbnB1dCAoaW5wdXQpIHtcbiAgY29uc3QgeyBGb2xkZXJIYW5kbGUsIEZpbGVIYW5kbGUgfSA9IGF3YWl0IGltcG9ydCgnLi9hZGFwdGVycy9tZW1vcnkuanMnKVxuICBjb25zdCB7IEZpbGVTeXN0ZW1EaXJlY3RvcnlIYW5kbGUgfSA9IGF3YWl0IGltcG9ydCgnLi9GaWxlU3lzdGVtRGlyZWN0b3J5SGFuZGxlLmpzJylcblxuICBjb25zdCBmaWxlcyA9IEFycmF5LmZyb20oaW5wdXQuZmlsZXMpXG4gIGNvbnN0IHJvb3ROYW1lID0gZmlsZXNbMF0ud2Via2l0UmVsYXRpdmVQYXRoLnNwbGl0KCcvJywgMSlbMF1cbiAgY29uc3Qgcm9vdCA9IG5ldyBGb2xkZXJIYW5kbGUocm9vdE5hbWUsIGZhbHNlKVxuXG4gIGZpbGVzLmZvckVhY2goZmlsZSA9PiB7XG4gICAgY29uc3QgcGF0aCA9IGZpbGUud2Via2l0UmVsYXRpdmVQYXRoLnNwbGl0KCcvJylcbiAgICBwYXRoLnNoaWZ0KClcbiAgICBjb25zdCBuYW1lID0gcGF0aC5wb3AoKVxuXG4gICAgY29uc3QgZGlyID0gcGF0aC5yZWR1Y2UoKGRpciwgcGF0aCkgPT4ge1xuICAgICAgaWYgKCFkaXIuX2VudHJpZXNbcGF0aF0pIGRpci5fZW50cmllc1twYXRoXSA9IG5ldyBGb2xkZXJIYW5kbGUocGF0aCwgZmFsc2UpXG4gICAgICByZXR1cm4gZGlyLl9lbnRyaWVzW3BhdGhdXG4gICAgfSwgcm9vdClcblxuICAgIGRpci5fZW50cmllc1tuYW1lXSA9IG5ldyBGaWxlSGFuZGxlKGZpbGUubmFtZSwgZmlsZSwgZmFsc2UpXG4gIH0pXG5cbiAgcmV0dXJuIG5ldyBGaWxlU3lzdGVtRGlyZWN0b3J5SGFuZGxlKHJvb3QpXG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRGaWxlSGFuZGxlc0Zyb21JbnB1dCAoaW5wdXQpIHtcbiAgY29uc3QgeyBGaWxlSGFuZGxlIH0gPSBhd2FpdCBpbXBvcnQoJy4vYWRhcHRlcnMvbWVtb3J5LmpzJylcbiAgY29uc3QgeyBGaWxlU3lzdGVtRmlsZUhhbmRsZSB9ID0gYXdhaXQgaW1wb3J0KCcuL0ZpbGVTeXN0ZW1GaWxlSGFuZGxlLmpzJylcblxuICByZXR1cm4gQXJyYXkuZnJvbShpbnB1dC5maWxlcykubWFwKGZpbGUgPT5cbiAgICBuZXcgRmlsZVN5c3RlbUZpbGVIYW5kbGUobmV3IEZpbGVIYW5kbGUoZmlsZS5uYW1lLCBmaWxlLCBmYWxzZSkpXG4gIClcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///275\n")}}]);