"use strict";(self.webpackChunkcbunt_portfolio=self.webpackChunkcbunt_portfolio||[]).push([[777],{543:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FileSystemDirectoryHandle: () => (/* binding */ FileSystemDirectoryHandle),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _FileSystemHandle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9890);\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5275);\n\n\n\nconst { GONE, MOD_ERR } = _util_js__WEBPACK_IMPORTED_MODULE_1__.errors\n\nconst kAdapter = Symbol('adapter')\n\nclass FileSystemDirectoryHandle extends _FileSystemHandle_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A {\n  /** @type {FileSystemDirectoryHandle} */\n  [kAdapter]\n\n  constructor (adapter) {\n    super(adapter)\n    this[kAdapter] = adapter\n  }\n\n  /**\n   * @param {string} name Name of the directory\n   * @param {object} [options]\n   * @param {boolean} [options.create] create the directory if don't exist\n   * @returns {Promise<FileSystemDirectoryHandle>}\n   */\n  async getDirectoryHandle (name, options = {}) {\n    if (name === '') {\n      throw new TypeError(`Name can't be an empty string.`)\n    }\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.create = !!options.create\n    const handle = await this[kAdapter].getDirectoryHandle(name, options)\n    return new FileSystemDirectoryHandle(handle)\n  }\n\n  /** @returns {AsyncGenerator<[string, FileSystemHandle | FileSystemDirectoryHandle]>} */\n  async * entries () {\n    const {FileSystemFileHandle} = await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 1196))\n\n    for await (const [_, entry] of this[kAdapter].entries())\n      yield [entry.name, entry.kind === 'file'\n        ? new FileSystemFileHandle(entry)\n        : new FileSystemDirectoryHandle(entry)]\n  }\n\n  /** @deprecated use .entries() instead */\n  async * getEntries() {\n    const {FileSystemFileHandle} = await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 1196))\n    console.warn('deprecated, use .entries() instead')\n    for await (let entry of this[kAdapter].entries())\n      yield entry.kind === 'file'\n        ? new FileSystemFileHandle(entry)\n        : new FileSystemDirectoryHandle(entry)\n  }\n\n  /**\n   * @param {string} name Name of the file\n   * @param {object} [options]\n   * @param {boolean} [options.create] create the file if don't exist\n   */\n  async getFileHandle (name, options = {}) {\n    const {FileSystemFileHandle} = await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 1196))\n    if (name === '') throw new TypeError(`Name can't be an empty string.`)\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.create = !!options.create\n    const handle = await this[kAdapter].getFileHandle(name, options)\n    return new FileSystemFileHandle(handle)\n  }\n\n  /**\n   * @param {string} name\n   * @param {object} [options]\n   * @param {boolean} [options.recursive]\n   */\n  async removeEntry (name, options = {}) {\n    if (name === '') {\n      throw new TypeError(`Name can't be an empty string.`)\n    }\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.recursive = !!options.recursive // cuz node's fs.rm require boolean\n    return this[kAdapter].removeEntry(name, options)\n  }\n\n  async resolve (possibleDescendant) {\n    if (await possibleDescendant.isSameEntry(this)) {\n      return []\n    }\n\n    const openSet = [{ handle: this, path: [] }]\n\n    while (openSet.length) {\n      let { handle: current, path } = openSet.pop()\n\n      for await (const entry of current.values()) {\n        if (await entry.isSameEntry(possibleDescendant)) {\n          return [...path, entry.name]\n        }\n        if (entry.kind === 'directory') {\n          openSet.push({ handle: entry, path: [...path, entry.name] })\n        }\n      }\n    }\n\n    return null\n  }\n\n  async * keys () {\n    for await (const [name] of this[kAdapter].entries())\n      yield name\n  }\n\n  async * values () {\n    for await (const [_, entry] of this)\n      yield entry\n  }\n\n  [Symbol.asyncIterator]() {\n    return this.entries()\n  }\n}\n\nObject.defineProperty(FileSystemDirectoryHandle.prototype, Symbol.toStringTag, {\n\tvalue: 'FileSystemDirectoryHandle',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n})\n\nObject.defineProperties(FileSystemDirectoryHandle.prototype, {\n\tgetDirectoryHandle: { enumerable: true },\n\tentries: { enumerable: true },\n\tgetFileHandle: { enumerable: true },\n\tremoveEntry: { enumerable: true }\n})\n\nif (globalThis.FileSystemDirectoryHandle) {\n  const proto = globalThis.FileSystemDirectoryHandle.prototype\n\n  proto.resolve = async function resolve (possibleDescendant) {\n    if (await possibleDescendant.isSameEntry(this)) {\n      return []\n    }\n\n    const openSet = [{ handle: this, path: [] }]\n\n    while (openSet.length) {\n      let { handle: current, path } = openSet.pop()\n\n      for await (const entry of current.values()) {\n        if (await entry.isSameEntry(possibleDescendant)) {\n          return [...path, entry.name]\n        }\n        if (entry.kind === 'directory') {\n          openSet.push({ handle: entry, path: [...path, entry.name] })\n        }\n      }\n    }\n\n    return null\n  }\n\n  // Safari allows us operate on deleted files,\n  // so we need to check if they still exist.\n  // Hope to remove this one day.\n  async function ensureDoActuallyStillExist (handle) {\n    const root = await navigator.storage.getDirectory()\n    const path = await root.resolve(handle)\n    if (path === null) { throw new DOMException(...GONE) }\n  }\n\n  const entries = proto.entries\n  proto.entries = async function * () {\n    await ensureDoActuallyStillExist(this)\n    yield * entries.call(this)\n  }\n  proto[Symbol.asyncIterator] = async function * () {\n    yield * this.entries()\n  }\n\n  const removeEntry = proto.removeEntry\n  proto.removeEntry = async function (name, options = {}) {\n    return removeEntry.call(this, name, options).catch(async err => {\n      const unknown = err instanceof DOMException && err.name === 'UnknownError'\n      if (unknown && !options.recursive) {\n        const empty = (await entries.call(this).next()).done\n        if (!empty) { throw new DOMException(...MOD_ERR) }\n      }\n      throw err\n    })\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FileSystemDirectoryHandle);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0Q7QUFDbEI7O0FBRWxDLFFBQVEsZ0JBQWdCLEVBQUUsNENBQU07O0FBRWhDOztBQUVBLHdDQUF3QyxxRUFBZ0I7QUFDeEQsYUFBYSwyQkFBMkI7QUFDeEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsU0FBUztBQUN0QixlQUFlO0FBQ2Y7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZ0JBQWdCLHdFQUF3RTtBQUN4RjtBQUNBLFdBQVcsc0JBQXNCLFFBQVEseUZBQW1DOztBQUU1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLHNCQUFzQixRQUFRLHlGQUFtQztBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsU0FBUztBQUN0QjtBQUNBLHlDQUF5QztBQUN6QyxXQUFXLHNCQUFzQixRQUFRLHlGQUFtQztBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFNBQVM7QUFDdEI7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVCQUF1Qix3QkFBd0I7O0FBRS9DO0FBQ0EsWUFBWSx3QkFBd0I7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsNENBQTRDO0FBQ3JFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0EsdUJBQXVCLGtCQUFrQjtBQUN6QyxZQUFZLGtCQUFrQjtBQUM5QixrQkFBa0Isa0JBQWtCO0FBQ3BDLGdCQUFnQjtBQUNoQixDQUFDOztBQUVEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLHdCQUF3Qjs7QUFFL0M7QUFDQSxZQUFZLHdCQUF3Qjs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw0Q0FBNEM7QUFDckU7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx3REFBd0Q7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBLGlFQUFlLHlCQUF5QjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2J1bnQtcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzLy5wbnBtL25hdGl2ZS1maWxlLXN5c3RlbS1hZGFwdGVyQDMuMC4xL25vZGVfbW9kdWxlcy9uYXRpdmUtZmlsZS1zeXN0ZW0tYWRhcHRlci9zcmMvRmlsZVN5c3RlbURpcmVjdG9yeUhhbmRsZS5qcz9mMGU2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBGaWxlU3lzdGVtSGFuZGxlIGZyb20gJy4vRmlsZVN5c3RlbUhhbmRsZS5qcydcbmltcG9ydCB7IGVycm9ycyB9IGZyb20gJy4vdXRpbC5qcydcblxuY29uc3QgeyBHT05FLCBNT0RfRVJSIH0gPSBlcnJvcnNcblxuY29uc3Qga0FkYXB0ZXIgPSBTeW1ib2woJ2FkYXB0ZXInKVxuXG5jbGFzcyBGaWxlU3lzdGVtRGlyZWN0b3J5SGFuZGxlIGV4dGVuZHMgRmlsZVN5c3RlbUhhbmRsZSB7XG4gIC8qKiBAdHlwZSB7RmlsZVN5c3RlbURpcmVjdG9yeUhhbmRsZX0gKi9cbiAgW2tBZGFwdGVyXVxuXG4gIGNvbnN0cnVjdG9yIChhZGFwdGVyKSB7XG4gICAgc3VwZXIoYWRhcHRlcilcbiAgICB0aGlzW2tBZGFwdGVyXSA9IGFkYXB0ZXJcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSBOYW1lIG9mIHRoZSBkaXJlY3RvcnlcbiAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLmNyZWF0ZV0gY3JlYXRlIHRoZSBkaXJlY3RvcnkgaWYgZG9uJ3QgZXhpc3RcbiAgICogQHJldHVybnMge1Byb21pc2U8RmlsZVN5c3RlbURpcmVjdG9yeUhhbmRsZT59XG4gICAqL1xuICBhc3luYyBnZXREaXJlY3RvcnlIYW5kbGUgKG5hbWUsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmIChuYW1lID09PSAnJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgTmFtZSBjYW4ndCBiZSBhbiBlbXB0eSBzdHJpbmcuYClcbiAgICB9XG4gICAgaWYgKG5hbWUgPT09ICcuJyB8fCBuYW1lID09PSAnLi4nIHx8IG5hbWUuaW5jbHVkZXMoJy8nKSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgTmFtZSBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcnMuYClcbiAgICB9XG4gICAgb3B0aW9ucy5jcmVhdGUgPSAhIW9wdGlvbnMuY3JlYXRlXG4gICAgY29uc3QgaGFuZGxlID0gYXdhaXQgdGhpc1trQWRhcHRlcl0uZ2V0RGlyZWN0b3J5SGFuZGxlKG5hbWUsIG9wdGlvbnMpXG4gICAgcmV0dXJuIG5ldyBGaWxlU3lzdGVtRGlyZWN0b3J5SGFuZGxlKGhhbmRsZSlcbiAgfVxuXG4gIC8qKiBAcmV0dXJucyB7QXN5bmNHZW5lcmF0b3I8W3N0cmluZywgRmlsZVN5c3RlbUhhbmRsZSB8IEZpbGVTeXN0ZW1EaXJlY3RvcnlIYW5kbGVdPn0gKi9cbiAgYXN5bmMgKiBlbnRyaWVzICgpIHtcbiAgICBjb25zdCB7RmlsZVN5c3RlbUZpbGVIYW5kbGV9ID0gYXdhaXQgaW1wb3J0KCcuL0ZpbGVTeXN0ZW1GaWxlSGFuZGxlLmpzJylcblxuICAgIGZvciBhd2FpdCAoY29uc3QgW18sIGVudHJ5XSBvZiB0aGlzW2tBZGFwdGVyXS5lbnRyaWVzKCkpXG4gICAgICB5aWVsZCBbZW50cnkubmFtZSwgZW50cnkua2luZCA9PT0gJ2ZpbGUnXG4gICAgICAgID8gbmV3IEZpbGVTeXN0ZW1GaWxlSGFuZGxlKGVudHJ5KVxuICAgICAgICA6IG5ldyBGaWxlU3lzdGVtRGlyZWN0b3J5SGFuZGxlKGVudHJ5KV1cbiAgfVxuXG4gIC8qKiBAZGVwcmVjYXRlZCB1c2UgLmVudHJpZXMoKSBpbnN0ZWFkICovXG4gIGFzeW5jICogZ2V0RW50cmllcygpIHtcbiAgICBjb25zdCB7RmlsZVN5c3RlbUZpbGVIYW5kbGV9ID0gYXdhaXQgaW1wb3J0KCcuL0ZpbGVTeXN0ZW1GaWxlSGFuZGxlLmpzJylcbiAgICBjb25zb2xlLndhcm4oJ2RlcHJlY2F0ZWQsIHVzZSAuZW50cmllcygpIGluc3RlYWQnKVxuICAgIGZvciBhd2FpdCAobGV0IGVudHJ5IG9mIHRoaXNba0FkYXB0ZXJdLmVudHJpZXMoKSlcbiAgICAgIHlpZWxkIGVudHJ5LmtpbmQgPT09ICdmaWxlJ1xuICAgICAgICA/IG5ldyBGaWxlU3lzdGVtRmlsZUhhbmRsZShlbnRyeSlcbiAgICAgICAgOiBuZXcgRmlsZVN5c3RlbURpcmVjdG9yeUhhbmRsZShlbnRyeSlcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSBOYW1lIG9mIHRoZSBmaWxlXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5jcmVhdGVdIGNyZWF0ZSB0aGUgZmlsZSBpZiBkb24ndCBleGlzdFxuICAgKi9cbiAgYXN5bmMgZ2V0RmlsZUhhbmRsZSAobmFtZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3Qge0ZpbGVTeXN0ZW1GaWxlSGFuZGxlfSA9IGF3YWl0IGltcG9ydCgnLi9GaWxlU3lzdGVtRmlsZUhhbmRsZS5qcycpXG4gICAgaWYgKG5hbWUgPT09ICcnKSB0aHJvdyBuZXcgVHlwZUVycm9yKGBOYW1lIGNhbid0IGJlIGFuIGVtcHR5IHN0cmluZy5gKVxuICAgIGlmIChuYW1lID09PSAnLicgfHwgbmFtZSA9PT0gJy4uJyB8fCBuYW1lLmluY2x1ZGVzKCcvJykpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYE5hbWUgY29udGFpbnMgaW52YWxpZCBjaGFyYWN0ZXJzLmApXG4gICAgfVxuICAgIG9wdGlvbnMuY3JlYXRlID0gISFvcHRpb25zLmNyZWF0ZVxuICAgIGNvbnN0IGhhbmRsZSA9IGF3YWl0IHRoaXNba0FkYXB0ZXJdLmdldEZpbGVIYW5kbGUobmFtZSwgb3B0aW9ucylcbiAgICByZXR1cm4gbmV3IEZpbGVTeXN0ZW1GaWxlSGFuZGxlKGhhbmRsZSlcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMucmVjdXJzaXZlXVxuICAgKi9cbiAgYXN5bmMgcmVtb3ZlRW50cnkgKG5hbWUsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmIChuYW1lID09PSAnJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgTmFtZSBjYW4ndCBiZSBhbiBlbXB0eSBzdHJpbmcuYClcbiAgICB9XG4gICAgaWYgKG5hbWUgPT09ICcuJyB8fCBuYW1lID09PSAnLi4nIHx8IG5hbWUuaW5jbHVkZXMoJy8nKSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgTmFtZSBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcnMuYClcbiAgICB9XG4gICAgb3B0aW9ucy5yZWN1cnNpdmUgPSAhIW9wdGlvbnMucmVjdXJzaXZlIC8vIGN1eiBub2RlJ3MgZnMucm0gcmVxdWlyZSBib29sZWFuXG4gICAgcmV0dXJuIHRoaXNba0FkYXB0ZXJdLnJlbW92ZUVudHJ5KG5hbWUsIG9wdGlvbnMpXG4gIH1cblxuICBhc3luYyByZXNvbHZlIChwb3NzaWJsZURlc2NlbmRhbnQpIHtcbiAgICBpZiAoYXdhaXQgcG9zc2libGVEZXNjZW5kYW50LmlzU2FtZUVudHJ5KHRoaXMpKSB7XG4gICAgICByZXR1cm4gW11cbiAgICB9XG5cbiAgICBjb25zdCBvcGVuU2V0ID0gW3sgaGFuZGxlOiB0aGlzLCBwYXRoOiBbXSB9XVxuXG4gICAgd2hpbGUgKG9wZW5TZXQubGVuZ3RoKSB7XG4gICAgICBsZXQgeyBoYW5kbGU6IGN1cnJlbnQsIHBhdGggfSA9IG9wZW5TZXQucG9wKClcblxuICAgICAgZm9yIGF3YWl0IChjb25zdCBlbnRyeSBvZiBjdXJyZW50LnZhbHVlcygpKSB7XG4gICAgICAgIGlmIChhd2FpdCBlbnRyeS5pc1NhbWVFbnRyeShwb3NzaWJsZURlc2NlbmRhbnQpKSB7XG4gICAgICAgICAgcmV0dXJuIFsuLi5wYXRoLCBlbnRyeS5uYW1lXVxuICAgICAgICB9XG4gICAgICAgIGlmIChlbnRyeS5raW5kID09PSAnZGlyZWN0b3J5Jykge1xuICAgICAgICAgIG9wZW5TZXQucHVzaCh7IGhhbmRsZTogZW50cnksIHBhdGg6IFsuLi5wYXRoLCBlbnRyeS5uYW1lXSB9KVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGxcbiAgfVxuXG4gIGFzeW5jICoga2V5cyAoKSB7XG4gICAgZm9yIGF3YWl0IChjb25zdCBbbmFtZV0gb2YgdGhpc1trQWRhcHRlcl0uZW50cmllcygpKVxuICAgICAgeWllbGQgbmFtZVxuICB9XG5cbiAgYXN5bmMgKiB2YWx1ZXMgKCkge1xuICAgIGZvciBhd2FpdCAoY29uc3QgW18sIGVudHJ5XSBvZiB0aGlzKVxuICAgICAgeWllbGQgZW50cnlcbiAgfVxuXG4gIFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgcmV0dXJuIHRoaXMuZW50cmllcygpXG4gIH1cbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KEZpbGVTeXN0ZW1EaXJlY3RvcnlIYW5kbGUucHJvdG90eXBlLCBTeW1ib2wudG9TdHJpbmdUYWcsIHtcblx0dmFsdWU6ICdGaWxlU3lzdGVtRGlyZWN0b3J5SGFuZGxlJyxcblx0d3JpdGFibGU6IGZhbHNlLFxuXHRlbnVtZXJhYmxlOiBmYWxzZSxcblx0Y29uZmlndXJhYmxlOiB0cnVlXG59KVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhGaWxlU3lzdGVtRGlyZWN0b3J5SGFuZGxlLnByb3RvdHlwZSwge1xuXHRnZXREaXJlY3RvcnlIYW5kbGU6IHsgZW51bWVyYWJsZTogdHJ1ZSB9LFxuXHRlbnRyaWVzOiB7IGVudW1lcmFibGU6IHRydWUgfSxcblx0Z2V0RmlsZUhhbmRsZTogeyBlbnVtZXJhYmxlOiB0cnVlIH0sXG5cdHJlbW92ZUVudHJ5OiB7IGVudW1lcmFibGU6IHRydWUgfVxufSlcblxuaWYgKGdsb2JhbFRoaXMuRmlsZVN5c3RlbURpcmVjdG9yeUhhbmRsZSkge1xuICBjb25zdCBwcm90byA9IGdsb2JhbFRoaXMuRmlsZVN5c3RlbURpcmVjdG9yeUhhbmRsZS5wcm90b3R5cGVcblxuICBwcm90by5yZXNvbHZlID0gYXN5bmMgZnVuY3Rpb24gcmVzb2x2ZSAocG9zc2libGVEZXNjZW5kYW50KSB7XG4gICAgaWYgKGF3YWl0IHBvc3NpYmxlRGVzY2VuZGFudC5pc1NhbWVFbnRyeSh0aGlzKSkge1xuICAgICAgcmV0dXJuIFtdXG4gICAgfVxuXG4gICAgY29uc3Qgb3BlblNldCA9IFt7IGhhbmRsZTogdGhpcywgcGF0aDogW10gfV1cblxuICAgIHdoaWxlIChvcGVuU2V0Lmxlbmd0aCkge1xuICAgICAgbGV0IHsgaGFuZGxlOiBjdXJyZW50LCBwYXRoIH0gPSBvcGVuU2V0LnBvcCgpXG5cbiAgICAgIGZvciBhd2FpdCAoY29uc3QgZW50cnkgb2YgY3VycmVudC52YWx1ZXMoKSkge1xuICAgICAgICBpZiAoYXdhaXQgZW50cnkuaXNTYW1lRW50cnkocG9zc2libGVEZXNjZW5kYW50KSkge1xuICAgICAgICAgIHJldHVybiBbLi4ucGF0aCwgZW50cnkubmFtZV1cbiAgICAgICAgfVxuICAgICAgICBpZiAoZW50cnkua2luZCA9PT0gJ2RpcmVjdG9yeScpIHtcbiAgICAgICAgICBvcGVuU2V0LnB1c2goeyBoYW5kbGU6IGVudHJ5LCBwYXRoOiBbLi4ucGF0aCwgZW50cnkubmFtZV0gfSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBudWxsXG4gIH1cblxuICAvLyBTYWZhcmkgYWxsb3dzIHVzIG9wZXJhdGUgb24gZGVsZXRlZCBmaWxlcyxcbiAgLy8gc28gd2UgbmVlZCB0byBjaGVjayBpZiB0aGV5IHN0aWxsIGV4aXN0LlxuICAvLyBIb3BlIHRvIHJlbW92ZSB0aGlzIG9uZSBkYXkuXG4gIGFzeW5jIGZ1bmN0aW9uIGVuc3VyZURvQWN0dWFsbHlTdGlsbEV4aXN0IChoYW5kbGUpIHtcbiAgICBjb25zdCByb290ID0gYXdhaXQgbmF2aWdhdG9yLnN0b3JhZ2UuZ2V0RGlyZWN0b3J5KClcbiAgICBjb25zdCBwYXRoID0gYXdhaXQgcm9vdC5yZXNvbHZlKGhhbmRsZSlcbiAgICBpZiAocGF0aCA9PT0gbnVsbCkgeyB0aHJvdyBuZXcgRE9NRXhjZXB0aW9uKC4uLkdPTkUpIH1cbiAgfVxuXG4gIGNvbnN0IGVudHJpZXMgPSBwcm90by5lbnRyaWVzXG4gIHByb3RvLmVudHJpZXMgPSBhc3luYyBmdW5jdGlvbiAqICgpIHtcbiAgICBhd2FpdCBlbnN1cmVEb0FjdHVhbGx5U3RpbGxFeGlzdCh0aGlzKVxuICAgIHlpZWxkICogZW50cmllcy5jYWxsKHRoaXMpXG4gIH1cbiAgcHJvdG9bU3ltYm9sLmFzeW5jSXRlcmF0b3JdID0gYXN5bmMgZnVuY3Rpb24gKiAoKSB7XG4gICAgeWllbGQgKiB0aGlzLmVudHJpZXMoKVxuICB9XG5cbiAgY29uc3QgcmVtb3ZlRW50cnkgPSBwcm90by5yZW1vdmVFbnRyeVxuICBwcm90by5yZW1vdmVFbnRyeSA9IGFzeW5jIGZ1bmN0aW9uIChuYW1lLCBvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gcmVtb3ZlRW50cnkuY2FsbCh0aGlzLCBuYW1lLCBvcHRpb25zKS5jYXRjaChhc3luYyBlcnIgPT4ge1xuICAgICAgY29uc3QgdW5rbm93biA9IGVyciBpbnN0YW5jZW9mIERPTUV4Y2VwdGlvbiAmJiBlcnIubmFtZSA9PT0gJ1Vua25vd25FcnJvcidcbiAgICAgIGlmICh1bmtub3duICYmICFvcHRpb25zLnJlY3Vyc2l2ZSkge1xuICAgICAgICBjb25zdCBlbXB0eSA9IChhd2FpdCBlbnRyaWVzLmNhbGwodGhpcykubmV4dCgpKS5kb25lXG4gICAgICAgIGlmICghZW1wdHkpIHsgdGhyb3cgbmV3IERPTUV4Y2VwdGlvbiguLi5NT0RfRVJSKSB9XG4gICAgICB9XG4gICAgICB0aHJvdyBlcnJcbiAgICB9KVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEZpbGVTeXN0ZW1EaXJlY3RvcnlIYW5kbGVcbmV4cG9ydCB7IEZpbGVTeXN0ZW1EaXJlY3RvcnlIYW5kbGUgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///543\n")},1196:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FileSystemFileHandle: () => (/* binding */ FileSystemFileHandle),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _FileSystemHandle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9890);\n/* harmony import */ var _FileSystemWritableFileStream_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1178);\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5275);\n\n\n\n\nconst { INVALID, SYNTAX, GONE } = _util_js__WEBPACK_IMPORTED_MODULE_2__.errors\n\nconst kAdapter = Symbol('adapter')\n\nclass FileSystemFileHandle extends _FileSystemHandle_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A {\n  /** @type {FileSystemFileHandle} */\n  [kAdapter]\n\n  constructor (adapter) {\n    super(adapter)\n    this[kAdapter] = adapter\n  }\n\n  /**\n   * @param  {Object} [options={}]\n   * @param  {boolean} [options.keepExistingData]\n   * @returns {Promise<FileSystemWritableFileStream>}\n   */\n  async createWritable (options = {}) {\n    return new _FileSystemWritableFileStream_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .A(\n      await this[kAdapter].createWritable(options)\n    )\n  }\n\n  /**\n   * @returns {Promise<File>}\n   */\n  async getFile () {\n    return this[kAdapter].getFile()\n  }\n}\n\nObject.defineProperty(FileSystemFileHandle.prototype, Symbol.toStringTag, {\n  value: 'FileSystemFileHandle',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\nObject.defineProperties(FileSystemFileHandle.prototype, {\n  createWritable: { enumerable: true },\n  getFile: { enumerable: true }\n})\n\n// Safari doesn't support async createWritable streams yet.\nif (\n  globalThis.FileSystemFileHandle &&\n  !globalThis.FileSystemFileHandle.prototype.createWritable\n) {\n  const wm = new WeakMap()\n\n  let workerUrl\n\n  // Worker code that should be inlined (can't use any external functions)\n  const code = () => {\n    let fileHandle, handle\n\n    onmessage = async evt => {\n      const port = evt.ports[0]\n      const cmd = evt.data\n      switch (cmd.type) {\n        case 'open':\n          const file = cmd.name\n\n          let dir = await navigator.storage.getDirectory()\n\n          for (const folder of cmd.path) {\n            dir = await dir.getDirectoryHandle(folder)\n          }\n\n          fileHandle = await dir.getFileHandle(file)\n          handle = await fileHandle.createSyncAccessHandle()\n          break\n        case 'write':\n          handle.write(cmd.data, { at: cmd.position })\n          handle.flush()\n          break\n        case 'truncate':\n          handle.truncate(cmd.size)\n          break\n        case 'abort':\n        case 'close':\n          handle.close()\n          break\n      }\n\n      port.postMessage(0)\n    }\n  }\n\n\n  globalThis.FileSystemFileHandle.prototype.createWritable = async function (options) {\n    // Safari only support writing data in a worker with sync access handle.\n    if (!workerUrl) {\n      const stringCode = `(${code.toString()})()`\n      const blob = new Blob([stringCode], {\n        type: 'text/javascript'\n      })\n      workerUrl = URL.createObjectURL(blob)\n    }\n    const worker = new Worker(workerUrl, { type: 'module' })\n\n    let position = 0\n    const textEncoder = new TextEncoder()\n    let size = await this.getFile().then(file => file.size)\n\n    const send = message => new Promise((resolve, reject) => {\n      const mc = new MessageChannel()\n      mc.port1.onmessage = evt => {\n        if (evt.data instanceof Error) reject(evt.data)\n        else resolve(evt.data)\n        mc.port1.close()\n        mc.port2.close()\n        mc.port1.onmessage = null\n      }\n      worker.postMessage(message, [mc.port2])\n    })\n\n    // Safari also don't support transferable file system handles.\n    // So we need to pass the path to the worker. This is a bit hacky and ugly.\n    const root = await navigator.storage.getDirectory()\n    const parent = await wm.get(this)\n    const path = await root.resolve(parent)\n\n    // Should likely never happen, but just in case...\n    if (path === null) throw new DOMException(...GONE)\n\n    let controller\n    await send({ type: 'open', path, name: this.name })\n\n    if (options?.keepExistingData === false) {\n      await send({ type: 'truncate', size: 0 })\n      size = 0\n    }\n\n    const ws = new _FileSystemWritableFileStream_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .A({\n      start: ctrl => {\n        controller = ctrl\n      },\n      async write(chunk) {\n        const isPlainObject = chunk?.constructor === Object\n\n        if (isPlainObject) {\n          chunk = { ...chunk }\n        } else {\n          chunk = { type: 'write', data: chunk, position }\n        }\n\n        if (chunk.type === 'write') {\n          if (!('data' in chunk)) {\n            await send({ type: 'close' })\n            throw new DOMException(...SYNTAX('write requires a data argument'))\n          }\n\n          chunk.position ??= position\n\n          if (typeof chunk.data === 'string') {\n            chunk.data = textEncoder.encode(chunk.data)\n          }\n\n          else if (chunk.data instanceof ArrayBuffer) {\n            chunk.data = new Uint8Array(chunk.data)\n          }\n\n          else if (!(chunk.data instanceof Uint8Array) && ArrayBuffer.isView(chunk.data)) {\n            chunk.data = new Uint8Array(chunk.data.buffer, chunk.data.byteOffset, chunk.data.byteLength)\n          }\n\n          else if (!(chunk.data instanceof Uint8Array)) {\n            const ab = await new Response(chunk.data).arrayBuffer()\n            chunk.data = new Uint8Array(ab)\n          }\n\n          if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n            position = chunk.position\n          }\n          position += chunk.data.byteLength\n          size += chunk.data.byteLength\n        } else if (chunk.type === 'seek') {\n          if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n            if (size < chunk.position) {\n              throw new DOMException(...INVALID)\n            }\n            console.log('seeking', chunk)\n            position = chunk.position\n            return // Don't need to enqueue seek...\n          } else {\n            await send({ type: 'close' })\n            throw new DOMException(...SYNTAX('seek requires a position argument'))\n          }\n        } else if (chunk.type === 'truncate') {\n          if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n            size = chunk.size\n            if (position > size) { position = size }\n          } else {\n            await send({ type: 'close' })\n            throw new DOMException(...SYNTAX('truncate requires a size argument'))\n          }\n        }\n\n        await send(chunk)\n      },\n      async close () {\n        await send({ type: 'close' })\n        worker.terminate()\n      },\n      async abort (reason) {\n        await send({ type: 'abort', reason })\n        worker.terminate()\n      },\n    })\n\n    return ws\n  }\n\n  const orig = FileSystemDirectoryHandle.prototype.getFileHandle\n  FileSystemDirectoryHandle.prototype.getFileHandle = async function (...args) {\n    const handle = await orig.call(this, ...args)\n    wm.set(handle, this)\n    return handle\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FileSystemFileHandle);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1196\n")},9890:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* unused harmony export FileSystemHandle */\nconst kAdapter = Symbol('adapter')\n\n/**\n * @typedef {Object} FileSystemHandlePermissionDescriptor\n * @property {('read'|'readwrite')} [mode='read']\n */\nclass FileSystemHandle {\n  /** @type {FileSystemHandle} */\n  [kAdapter]\n\n  /** @type {string} */\n  name\n  /** @type {('file'|'directory')} */\n  kind\n\n  /** @param {FileSystemHandle & {writable}} adapter */\n  constructor (adapter) {\n    this.kind = adapter.kind\n    this.name = adapter.name\n    this[kAdapter] = adapter\n  }\n\n  /** @param {FileSystemHandlePermissionDescriptor} descriptor */\n  async queryPermission (descriptor = {}) {\n    const { mode = 'read' } = descriptor\n    const handle = this[kAdapter]\n\n    if (handle.queryPermission) {\n      return handle.queryPermission({mode})\n    }\n\n    if (mode === 'read') {\n      return 'granted'\n    } else if (mode === 'readwrite') {\n      return handle.writable ? 'granted' : 'denied'\n    } else {\n      throw new TypeError(`Mode ${mode} must be 'read' or 'readwrite'`)\n    }\n  }\n\n  async requestPermission ({mode = 'read'} = {}) {\n    const handle = this[kAdapter]\n    if (handle.requestPermission) {\n      return handle.requestPermission({mode})\n    }\n\n    if (mode === 'read') {\n      return 'granted'\n    } else if (mode === 'readwrite') {\n      return handle.writable ? 'granted' : 'denied'\n    } else {\n      throw new TypeError(`Mode ${mode} must be 'read' or 'readwrite'`)\n    }\n  }\n\n  /**\n   * Attempts to remove the entry represented by handle from the underlying file system.\n   *\n   * @param {object} options\n   * @param {boolean} [options.recursive=false]\n   */\n  async remove (options = {}) {\n    await this[kAdapter].remove(options)\n  }\n\n  /**\n   * @param {FileSystemHandle} other\n   */\n  async isSameEntry (other) {\n    if (this === other) return true\n    if (\n      (!other) ||\n      (typeof other !== 'object') ||\n      (this.kind !== other.kind) ||\n      (!other[kAdapter])\n    ) return false\n    return this[kAdapter].isSameEntry(other[kAdapter])\n  }\n}\n\nObject.defineProperty(FileSystemHandle.prototype, Symbol.toStringTag, {\n  value: 'FileSystemHandle',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\n// Safari safari doesn't support writable streams yet.\nif (globalThis.FileSystemHandle) {\n  globalThis.FileSystemHandle.prototype.queryPermission ??= function (descriptor) {\n    return 'granted'\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FileSystemHandle);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTg5MC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBRUE7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxzQkFBc0I7QUFDcEM7QUFDQTtBQUNBLGFBQWEsa0JBQWtCO0FBQy9COztBQUVBLGFBQWEsUUFBUTtBQUNyQjtBQUNBLGFBQWEsc0JBQXNCO0FBQ25DOztBQUVBLGNBQWMsb0JBQW9CLFdBQVc7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLHNDQUFzQztBQUNwRCx3Q0FBd0M7QUFDeEMsWUFBWSxnQkFBZ0I7QUFDNUI7O0FBRUE7QUFDQSxxQ0FBcUMsS0FBSztBQUMxQzs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOLGtDQUFrQyxNQUFNO0FBQ3hDO0FBQ0E7O0FBRUEsNEJBQTRCLGVBQWUsSUFBSTtBQUMvQztBQUNBO0FBQ0EsdUNBQXVDLEtBQUs7QUFDNUM7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTixrQ0FBa0MsTUFBTTtBQUN4QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFNBQVM7QUFDdEI7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTs7QUFFQTtBQUNBLGFBQWEsa0JBQWtCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsZ0JBQWdCO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYnVudC1wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvLnBucG0vbmF0aXZlLWZpbGUtc3lzdGVtLWFkYXB0ZXJAMy4wLjEvbm9kZV9tb2R1bGVzL25hdGl2ZS1maWxlLXN5c3RlbS1hZGFwdGVyL3NyYy9GaWxlU3lzdGVtSGFuZGxlLmpzP2FjZTUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qga0FkYXB0ZXIgPSBTeW1ib2woJ2FkYXB0ZXInKVxuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IEZpbGVTeXN0ZW1IYW5kbGVQZXJtaXNzaW9uRGVzY3JpcHRvclxuICogQHByb3BlcnR5IHsoJ3JlYWQnfCdyZWFkd3JpdGUnKX0gW21vZGU9J3JlYWQnXVxuICovXG5jbGFzcyBGaWxlU3lzdGVtSGFuZGxlIHtcbiAgLyoqIEB0eXBlIHtGaWxlU3lzdGVtSGFuZGxlfSAqL1xuICBba0FkYXB0ZXJdXG5cbiAgLyoqIEB0eXBlIHtzdHJpbmd9ICovXG4gIG5hbWVcbiAgLyoqIEB0eXBlIHsoJ2ZpbGUnfCdkaXJlY3RvcnknKX0gKi9cbiAga2luZFxuXG4gIC8qKiBAcGFyYW0ge0ZpbGVTeXN0ZW1IYW5kbGUgJiB7d3JpdGFibGV9fSBhZGFwdGVyICovXG4gIGNvbnN0cnVjdG9yIChhZGFwdGVyKSB7XG4gICAgdGhpcy5raW5kID0gYWRhcHRlci5raW5kXG4gICAgdGhpcy5uYW1lID0gYWRhcHRlci5uYW1lXG4gICAgdGhpc1trQWRhcHRlcl0gPSBhZGFwdGVyXG4gIH1cblxuICAvKiogQHBhcmFtIHtGaWxlU3lzdGVtSGFuZGxlUGVybWlzc2lvbkRlc2NyaXB0b3J9IGRlc2NyaXB0b3IgKi9cbiAgYXN5bmMgcXVlcnlQZXJtaXNzaW9uIChkZXNjcmlwdG9yID0ge30pIHtcbiAgICBjb25zdCB7IG1vZGUgPSAncmVhZCcgfSA9IGRlc2NyaXB0b3JcbiAgICBjb25zdCBoYW5kbGUgPSB0aGlzW2tBZGFwdGVyXVxuXG4gICAgaWYgKGhhbmRsZS5xdWVyeVBlcm1pc3Npb24pIHtcbiAgICAgIHJldHVybiBoYW5kbGUucXVlcnlQZXJtaXNzaW9uKHttb2RlfSlcbiAgICB9XG5cbiAgICBpZiAobW9kZSA9PT0gJ3JlYWQnKSB7XG4gICAgICByZXR1cm4gJ2dyYW50ZWQnXG4gICAgfSBlbHNlIGlmIChtb2RlID09PSAncmVhZHdyaXRlJykge1xuICAgICAgcmV0dXJuIGhhbmRsZS53cml0YWJsZSA/ICdncmFudGVkJyA6ICdkZW5pZWQnXG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYE1vZGUgJHttb2RlfSBtdXN0IGJlICdyZWFkJyBvciAncmVhZHdyaXRlJ2ApXG4gICAgfVxuICB9XG5cbiAgYXN5bmMgcmVxdWVzdFBlcm1pc3Npb24gKHttb2RlID0gJ3JlYWQnfSA9IHt9KSB7XG4gICAgY29uc3QgaGFuZGxlID0gdGhpc1trQWRhcHRlcl1cbiAgICBpZiAoaGFuZGxlLnJlcXVlc3RQZXJtaXNzaW9uKSB7XG4gICAgICByZXR1cm4gaGFuZGxlLnJlcXVlc3RQZXJtaXNzaW9uKHttb2RlfSlcbiAgICB9XG5cbiAgICBpZiAobW9kZSA9PT0gJ3JlYWQnKSB7XG4gICAgICByZXR1cm4gJ2dyYW50ZWQnXG4gICAgfSBlbHNlIGlmIChtb2RlID09PSAncmVhZHdyaXRlJykge1xuICAgICAgcmV0dXJuIGhhbmRsZS53cml0YWJsZSA/ICdncmFudGVkJyA6ICdkZW5pZWQnXG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYE1vZGUgJHttb2RlfSBtdXN0IGJlICdyZWFkJyBvciAncmVhZHdyaXRlJ2ApXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEF0dGVtcHRzIHRvIHJlbW92ZSB0aGUgZW50cnkgcmVwcmVzZW50ZWQgYnkgaGFuZGxlIGZyb20gdGhlIHVuZGVybHlpbmcgZmlsZSBzeXN0ZW0uXG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMucmVjdXJzaXZlPWZhbHNlXVxuICAgKi9cbiAgYXN5bmMgcmVtb3ZlIChvcHRpb25zID0ge30pIHtcbiAgICBhd2FpdCB0aGlzW2tBZGFwdGVyXS5yZW1vdmUob3B0aW9ucylcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0ZpbGVTeXN0ZW1IYW5kbGV9IG90aGVyXG4gICAqL1xuICBhc3luYyBpc1NhbWVFbnRyeSAob3RoZXIpIHtcbiAgICBpZiAodGhpcyA9PT0gb3RoZXIpIHJldHVybiB0cnVlXG4gICAgaWYgKFxuICAgICAgKCFvdGhlcikgfHxcbiAgICAgICh0eXBlb2Ygb3RoZXIgIT09ICdvYmplY3QnKSB8fFxuICAgICAgKHRoaXMua2luZCAhPT0gb3RoZXIua2luZCkgfHxcbiAgICAgICghb3RoZXJba0FkYXB0ZXJdKVxuICAgICkgcmV0dXJuIGZhbHNlXG4gICAgcmV0dXJuIHRoaXNba0FkYXB0ZXJdLmlzU2FtZUVudHJ5KG90aGVyW2tBZGFwdGVyXSlcbiAgfVxufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoRmlsZVN5c3RlbUhhbmRsZS5wcm90b3R5cGUsIFN5bWJvbC50b1N0cmluZ1RhZywge1xuICB2YWx1ZTogJ0ZpbGVTeXN0ZW1IYW5kbGUnLFxuICB3cml0YWJsZTogZmFsc2UsXG4gIGVudW1lcmFibGU6IGZhbHNlLFxuICBjb25maWd1cmFibGU6IHRydWVcbn0pXG5cbi8vIFNhZmFyaSBzYWZhcmkgZG9lc24ndCBzdXBwb3J0IHdyaXRhYmxlIHN0cmVhbXMgeWV0LlxuaWYgKGdsb2JhbFRoaXMuRmlsZVN5c3RlbUhhbmRsZSkge1xuICBnbG9iYWxUaGlzLkZpbGVTeXN0ZW1IYW5kbGUucHJvdG90eXBlLnF1ZXJ5UGVybWlzc2lvbiA/Pz0gZnVuY3Rpb24gKGRlc2NyaXB0b3IpIHtcbiAgICByZXR1cm4gJ2dyYW50ZWQnXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRmlsZVN5c3RlbUhhbmRsZVxuZXhwb3J0IHsgRmlsZVN5c3RlbUhhbmRsZSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9890\n")},1178:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* unused harmony export FileSystemWritableFileStream */\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8009);\n\n\nconst { WritableStream } = _config_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A\n\nclass FileSystemWritableFileStream extends WritableStream {\n  #writer\n  constructor (writer) {\n    super(writer)\n    this.#writer = writer\n    // Stupid Safari hack to extend native classes\n    // https://bugs.webkit.org/show_bug.cgi?id=226201\n    Object.setPrototypeOf(this, FileSystemWritableFileStream.prototype)\n\n    /** @private */\n    this._closed = false\n  }\n\n  async close () {\n    this._closed = true\n    const w = this.getWriter()\n    const p = w.close()\n    w.releaseLock()\n    return p\n    // return super.close ? super.close() : this.getWriter().close()\n  }\n\n  /** @param {number} position */\n  seek (position) {\n    return this.write({ type: 'seek', position })\n  }\n\n  /** @param {number} size */\n  truncate (size) {\n    return this.write({ type: 'truncate', size })\n  }\n\n  // The write(data) method steps are:\n  write (data) {\n    if (this._closed) {\n      return Promise.reject(new TypeError('Cannot write to a CLOSED writable stream'))\n    }\n\n    // 1. Let writer be the result of getting a writer for this.\n    const writer = this.getWriter()\n\n    // 2. Let result be the result of writing a chunk to writer given data.\n    const result = writer.write(data)\n\n    // 3. Release writer.\n    writer.releaseLock()\n\n    // 4. Return result.\n    return result\n  }\n}\n\nObject.defineProperty(FileSystemWritableFileStream.prototype, Symbol.toStringTag, {\n  value: 'FileSystemWritableFileStream',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\nObject.defineProperties(FileSystemWritableFileStream.prototype, {\n  close: { enumerable: true },\n  seek: { enumerable: true },\n  truncate: { enumerable: true },\n  write: { enumerable: true }\n})\n\n// Safari safari doesn't support writable streams yet.\nif (\n  globalThis.FileSystemFileHandle &&\n  !globalThis.FileSystemFileHandle.prototype.createWritable &&\n  !globalThis.FileSystemWritableFileStream\n) {\n  globalThis.FileSystemWritableFileStream = FileSystemWritableFileStream\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FileSystemWritableFileStream);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE3OC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnQzs7QUFFaEMsUUFBUSxpQkFBaUIsRUFBRSwyREFBTTs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLFFBQVE7QUFDdEI7QUFDQSx3QkFBd0Isd0JBQXdCO0FBQ2hEOztBQUVBLGNBQWMsUUFBUTtBQUN0QjtBQUNBLHdCQUF3Qix3QkFBd0I7QUFDaEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBLFdBQVcsa0JBQWtCO0FBQzdCLFVBQVUsa0JBQWtCO0FBQzVCLGNBQWMsa0JBQWtCO0FBQ2hDLFdBQVc7QUFDWCxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsNEJBQTRCO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYnVudC1wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvLnBucG0vbmF0aXZlLWZpbGUtc3lzdGVtLWFkYXB0ZXJAMy4wLjEvbm9kZV9tb2R1bGVzL25hdGl2ZS1maWxlLXN5c3RlbS1hZGFwdGVyL3NyYy9GaWxlU3lzdGVtV3JpdGFibGVGaWxlU3RyZWFtLmpzPzU2OWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbmZpZyBmcm9tICcuL2NvbmZpZy5qcydcblxuY29uc3QgeyBXcml0YWJsZVN0cmVhbSB9ID0gY29uZmlnXG5cbmNsYXNzIEZpbGVTeXN0ZW1Xcml0YWJsZUZpbGVTdHJlYW0gZXh0ZW5kcyBXcml0YWJsZVN0cmVhbSB7XG4gICN3cml0ZXJcbiAgY29uc3RydWN0b3IgKHdyaXRlcikge1xuICAgIHN1cGVyKHdyaXRlcilcbiAgICB0aGlzLiN3cml0ZXIgPSB3cml0ZXJcbiAgICAvLyBTdHVwaWQgU2FmYXJpIGhhY2sgdG8gZXh0ZW5kIG5hdGl2ZSBjbGFzc2VzXG4gICAgLy8gaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTIyNjIwMVxuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBGaWxlU3lzdGVtV3JpdGFibGVGaWxlU3RyZWFtLnByb3RvdHlwZSlcblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIHRoaXMuX2Nsb3NlZCA9IGZhbHNlXG4gIH1cblxuICBhc3luYyBjbG9zZSAoKSB7XG4gICAgdGhpcy5fY2xvc2VkID0gdHJ1ZVxuICAgIGNvbnN0IHcgPSB0aGlzLmdldFdyaXRlcigpXG4gICAgY29uc3QgcCA9IHcuY2xvc2UoKVxuICAgIHcucmVsZWFzZUxvY2soKVxuICAgIHJldHVybiBwXG4gICAgLy8gcmV0dXJuIHN1cGVyLmNsb3NlID8gc3VwZXIuY2xvc2UoKSA6IHRoaXMuZ2V0V3JpdGVyKCkuY2xvc2UoKVxuICB9XG5cbiAgLyoqIEBwYXJhbSB7bnVtYmVyfSBwb3NpdGlvbiAqL1xuICBzZWVrIChwb3NpdGlvbikge1xuICAgIHJldHVybiB0aGlzLndyaXRlKHsgdHlwZTogJ3NlZWsnLCBwb3NpdGlvbiB9KVxuICB9XG5cbiAgLyoqIEBwYXJhbSB7bnVtYmVyfSBzaXplICovXG4gIHRydW5jYXRlIChzaXplKSB7XG4gICAgcmV0dXJuIHRoaXMud3JpdGUoeyB0eXBlOiAndHJ1bmNhdGUnLCBzaXplIH0pXG4gIH1cblxuICAvLyBUaGUgd3JpdGUoZGF0YSkgbWV0aG9kIHN0ZXBzIGFyZTpcbiAgd3JpdGUgKGRhdGEpIHtcbiAgICBpZiAodGhpcy5fY2xvc2VkKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IFR5cGVFcnJvcignQ2Fubm90IHdyaXRlIHRvIGEgQ0xPU0VEIHdyaXRhYmxlIHN0cmVhbScpKVxuICAgIH1cblxuICAgIC8vIDEuIExldCB3cml0ZXIgYmUgdGhlIHJlc3VsdCBvZiBnZXR0aW5nIGEgd3JpdGVyIGZvciB0aGlzLlxuICAgIGNvbnN0IHdyaXRlciA9IHRoaXMuZ2V0V3JpdGVyKClcblxuICAgIC8vIDIuIExldCByZXN1bHQgYmUgdGhlIHJlc3VsdCBvZiB3cml0aW5nIGEgY2h1bmsgdG8gd3JpdGVyIGdpdmVuIGRhdGEuXG4gICAgY29uc3QgcmVzdWx0ID0gd3JpdGVyLndyaXRlKGRhdGEpXG5cbiAgICAvLyAzLiBSZWxlYXNlIHdyaXRlci5cbiAgICB3cml0ZXIucmVsZWFzZUxvY2soKVxuXG4gICAgLy8gNC4gUmV0dXJuIHJlc3VsdC5cbiAgICByZXR1cm4gcmVzdWx0XG4gIH1cbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KEZpbGVTeXN0ZW1Xcml0YWJsZUZpbGVTdHJlYW0ucHJvdG90eXBlLCBTeW1ib2wudG9TdHJpbmdUYWcsIHtcbiAgdmFsdWU6ICdGaWxlU3lzdGVtV3JpdGFibGVGaWxlU3RyZWFtJyxcbiAgd3JpdGFibGU6IGZhbHNlLFxuICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgY29uZmlndXJhYmxlOiB0cnVlXG59KVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhGaWxlU3lzdGVtV3JpdGFibGVGaWxlU3RyZWFtLnByb3RvdHlwZSwge1xuICBjbG9zZTogeyBlbnVtZXJhYmxlOiB0cnVlIH0sXG4gIHNlZWs6IHsgZW51bWVyYWJsZTogdHJ1ZSB9LFxuICB0cnVuY2F0ZTogeyBlbnVtZXJhYmxlOiB0cnVlIH0sXG4gIHdyaXRlOiB7IGVudW1lcmFibGU6IHRydWUgfVxufSlcblxuLy8gU2FmYXJpIHNhZmFyaSBkb2Vzbid0IHN1cHBvcnQgd3JpdGFibGUgc3RyZWFtcyB5ZXQuXG5pZiAoXG4gIGdsb2JhbFRoaXMuRmlsZVN5c3RlbUZpbGVIYW5kbGUgJiZcbiAgIWdsb2JhbFRoaXMuRmlsZVN5c3RlbUZpbGVIYW5kbGUucHJvdG90eXBlLmNyZWF0ZVdyaXRhYmxlICYmXG4gICFnbG9iYWxUaGlzLkZpbGVTeXN0ZW1Xcml0YWJsZUZpbGVTdHJlYW1cbikge1xuICBnbG9iYWxUaGlzLkZpbGVTeXN0ZW1Xcml0YWJsZUZpbGVTdHJlYW0gPSBGaWxlU3lzdGVtV3JpdGFibGVGaWxlU3RyZWFtXG59XG5cbmV4cG9ydCBkZWZhdWx0IEZpbGVTeXN0ZW1Xcml0YWJsZUZpbGVTdHJlYW1cbmV4cG9ydCB7IEZpbGVTeXN0ZW1Xcml0YWJsZUZpbGVTdHJlYW0gfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1178\n")},8009:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst config = {\n  ReadableStream: globalThis.ReadableStream,\n  WritableStream: globalThis.WritableStream,\n  TransformStream: globalThis.TransformStream,\n  DOMException: globalThis.DOMException,\n  Blob: globalThis.Blob,\n  File: globalThis.File,\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (config);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODAwOS5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlFQUFlLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYnVudC1wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvLnBucG0vbmF0aXZlLWZpbGUtc3lzdGVtLWFkYXB0ZXJAMy4wLjEvbm9kZV9tb2R1bGVzL25hdGl2ZS1maWxlLXN5c3RlbS1hZGFwdGVyL3NyYy9jb25maWcuanM/YzBkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb25maWcgPSB7XG4gIFJlYWRhYmxlU3RyZWFtOiBnbG9iYWxUaGlzLlJlYWRhYmxlU3RyZWFtLFxuICBXcml0YWJsZVN0cmVhbTogZ2xvYmFsVGhpcy5Xcml0YWJsZVN0cmVhbSxcbiAgVHJhbnNmb3JtU3RyZWFtOiBnbG9iYWxUaGlzLlRyYW5zZm9ybVN0cmVhbSxcbiAgRE9NRXhjZXB0aW9uOiBnbG9iYWxUaGlzLkRPTUV4Y2VwdGlvbixcbiAgQmxvYjogZ2xvYmFsVGhpcy5CbG9iLFxuICBGaWxlOiBnbG9iYWxUaGlzLkZpbGUsXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbmZpZ1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8009\n")},8777:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  H1: () => (/* reexport */ src_showSaveFilePicker)\n});\n\n// UNUSED EXPORTS: FileSystemDirectoryHandle, FileSystemFileHandle, FileSystemHandle, FileSystemWritableFileStream, getOriginPrivateDirectory, showDirectoryPicker, showOpenFilePicker\n\n;// ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/showDirectoryPicker.js\n/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\n\nconst showDirectoryPicker_native = globalThis.showDirectoryPicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @returns {Promise<FileSystemDirectoryHandle>}\n */\nasync function showDirectoryPicker (options = {}) {\n  if (showDirectoryPicker_native && !options._preferPolyfill) {\n    return showDirectoryPicker_native(options)\n  }\n\n  const input = document.createElement('input')\n  input.type = 'file'\n  input.webkitdirectory = true\n  // Fallback to multiple files input for iOS Safari\n  input.multiple = true\n\n  // See https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n  input.style.position = 'fixed'\n  input.style.top = '-100000px'\n  input.style.left = '-100000px'\n  document.body.appendChild(input)\n\n  // Lazy load while the user is choosing the directory\n  const p = Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 5275))\n\n  await new Promise(resolve => {\n    input.addEventListener('change', resolve)\n    input.click()\n  })\n\n  return p.then(mod => mod.getDirHandlesFromInput(input))\n}\n\n/* harmony default export */ const src_showDirectoryPicker = ((/* unused pure expression or super */ null && (showDirectoryPicker)));\n\n\n;// ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/showOpenFilePicker.js\n/** @typedef {import('./FileSystemFileHandle.js').default} FileSystemFileHandle */\n\nconst def = { accepts: [] }\nconst showOpenFilePicker_native = globalThis.showOpenFilePicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options.multiple] If you want to allow more than one file\n * @param {boolean} [options.excludeAcceptAllOption=false] Prevent user for selecting any\n * @param {Object[]} [options.accepts] Files you want to accept\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @returns {Promise<FileSystemFileHandle[]>}\n */\nasync function showOpenFilePicker (options = {}) {\n  const opts = { ...def, ...options }\n\n  if (showOpenFilePicker_native && !options._preferPolyfill) {\n    return showOpenFilePicker_native(opts)\n  }\n\n  const input = document.createElement('input')\n  input.type = 'file'\n  input.multiple = opts.multiple\n  input.accept = (opts.accepts || [])\n    .map(e => [\n      ...(e.extensions || []).map(e => '.' + e),\n      ...e.mimeTypes || []]\n    )\n    .flat()\n    .join(',')\n\n  // See https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n  Object.assign(input.style, {\n    position: 'fixed',\n    top: '-100000px',\n    left: '-100000px'\n  })\n\n  document.body.appendChild(input)\n\n  // Lazy load while the user is choosing the directory\n  const p = Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 5275))\n\n  await new Promise(resolve => {\n    input.addEventListener('change', resolve, { once: true })\n    input.click()\n  })\n  input.remove()\n\n  return p.then(m => m.getFileHandlesFromInput(input))\n}\n\n/* harmony default export */ const src_showOpenFilePicker = ((/* unused pure expression or super */ null && (showOpenFilePicker)));\n\n\n;// ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/showSaveFilePicker.js\n/** @typedef {import('./FileSystemFileHandle.js').default} FileSystemFileHandle */\n\nconst showSaveFilePicker_native = globalThis.showSaveFilePicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options.excludeAcceptAllOption=false] Prevent user for selecting any\n * @param {Object[]} [options.types] Files you want to accept\n * @param {string} [options.suggestedName] the name to fall back to when using polyfill\n * @param {string} [options._name] the name to fall back to when using polyfill\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @return {Promise<FileSystemFileHandle>}\n */\nasync function showSaveFilePicker (options = {}) {\n  if (showSaveFilePicker_native && !options._preferPolyfill) {\n    return showSaveFilePicker_native(options)\n  }\n\n  if (options._name) {\n    console.warn('deprecated _name, spec now have `suggestedName`')\n    options.suggestedName = options._name\n  }\n\n  const { FileSystemFileHandle } = await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 1196))\n  const { FileHandle } = await __webpack_require__.e(/* import() */ 249).then(__webpack_require__.bind(__webpack_require__, 8249))\n  return new FileSystemFileHandle(new FileHandle(options.suggestedName))\n}\n\n/* harmony default export */ const src_showSaveFilePicker = (showSaveFilePicker);\n\n\n;// ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/getOriginPrivateDirectory.js\n/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\n\nif (globalThis.DataTransferItem && !DataTransferItem.prototype.getAsFileSystemHandle) {\n  DataTransferItem.prototype.getAsFileSystemHandle = async function () {\n    const entry = this.webkitGetAsEntry()\n    const [\n      { FileHandle, FolderHandle },\n      { FileSystemDirectoryHandle },\n      { FileSystemFileHandle }\n    ] = await Promise.all([\n      __webpack_require__.e(/* import() */ 767).then(__webpack_require__.bind(__webpack_require__, 2767)),\n      Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 543)),\n      Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 1196))\n    ])\n\n    return entry.isFile\n      ? new FileSystemFileHandle(new FileHandle(entry, false))\n      : new FileSystemDirectoryHandle(new FolderHandle(entry, false))\n  }\n}\n\n/**\n * @param {object=} driver\n * @return {Promise<FileSystemDirectoryHandle>}\n */\nasync function getOriginPrivateDirectory (driver, options = {}) {\n  if (!driver) {\n    return globalThis.navigator?.storage?.getDirectory() || globalThis.getOriginPrivateDirectory()\n  }\n  const {FileSystemDirectoryHandle} = await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 543))\n  const module = await driver\n  const sandbox = await (module.default\n    ? module.default(options)\n    : module(options)\n  )\n  return new FileSystemDirectoryHandle(sandbox)\n}\n\n/* harmony default export */ const src_getOriginPrivateDirectory = ((/* unused pure expression or super */ null && (getOriginPrivateDirectory)));\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/FileSystemWritableFileStream.js\nvar FileSystemWritableFileStream = __webpack_require__(1178);\n// EXTERNAL MODULE: ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/FileSystemDirectoryHandle.js\nvar FileSystemDirectoryHandle = __webpack_require__(543);\n// EXTERNAL MODULE: ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/FileSystemFileHandle.js\nvar FileSystemFileHandle = __webpack_require__(1196);\n// EXTERNAL MODULE: ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/FileSystemHandle.js\nvar FileSystemHandle = __webpack_require__(9890);\n;// ./node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/es6.js\n\n\n\n\n// FileSystemWritableFileStream must be loaded before FileSystemFileHandle\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8777\n")},5275:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   errors: () => (/* binding */ errors),\n/* harmony export */   fromDataTransfer: () => (/* binding */ fromDataTransfer),\n/* harmony export */   getDirHandlesFromInput: () => (/* binding */ getDirHandlesFromInput),\n/* harmony export */   getFileHandlesFromInput: () => (/* binding */ getFileHandlesFromInput)\n/* harmony export */ });\nconst errors = {\n  INVALID: ['seeking position failed.', 'InvalidStateError'],\n  GONE: ['A requested file or directory could not be found at the time an operation was processed.', 'NotFoundError'],\n  MISMATCH: ['The path supplied exists, but was not an entry of requested type.', 'TypeMismatchError'],\n  MOD_ERR: ['The object can not be modified in this way.', 'InvalidModificationError'],\n  SYNTAX: m => [`Failed to execute 'write' on 'UnderlyingSinkBase': Invalid params passed. ${m}`, 'SyntaxError'],\n  SECURITY: ['It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources.', 'SecurityError'],\n  DISALLOWED: ['The request is not allowed by the user agent or the platform in the current context.', 'NotAllowedError']\n}\n\nconst config = {\n  writable: globalThis.WritableStream\n}\n\nasync function fromDataTransfer (entries) {\n  console.warn('deprecated fromDataTransfer - use `dt.items[0].getAsFileSystemHandle()` instead')\n  const [memory, sandbox, fs] = await Promise.all([\n    __webpack_require__.e(/* import() */ 901).then(__webpack_require__.bind(__webpack_require__, 1901)),\n    __webpack_require__.e(/* import() */ 767).then(__webpack_require__.bind(__webpack_require__, 2767)),\n    Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 543))\n  ])\n\n  const folder = new memory.FolderHandle('', false)\n  folder._entries = entries.map(entry => entry.isFile\n    ? new sandbox.FileHandle(entry, false)\n    : new sandbox.FolderHandle(entry, false)\n  )\n\n  return new fs.FileSystemDirectoryHandle(folder)\n}\n\nasync function getDirHandlesFromInput (input) {\n  const { FolderHandle, FileHandle } = await __webpack_require__.e(/* import() */ 901).then(__webpack_require__.bind(__webpack_require__, 1901))\n  const { FileSystemDirectoryHandle } = await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 543))\n\n  const files = Array.from(input.files)\n  const rootName = files[0].webkitRelativePath.split('/', 1)[0]\n  const root = new FolderHandle(rootName, false)\n\n  files.forEach(file => {\n    const path = file.webkitRelativePath.split('/')\n    path.shift()\n    const name = path.pop()\n\n    const dir = path.reduce((dir, path) => {\n      if (!dir._entries[path]) dir._entries[path] = new FolderHandle(path, false)\n      return dir._entries[path]\n    }, root)\n\n    dir._entries[name] = new FileHandle(file.name, file, false)\n  })\n\n  return new FileSystemDirectoryHandle(root)\n}\n\nasync function getFileHandlesFromInput (input) {\n  const { FileHandle } = await __webpack_require__.e(/* import() */ 901).then(__webpack_require__.bind(__webpack_require__, 1901))\n  const { FileSystemFileHandle } = await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 1196))\n\n  return Array.from(input.files).map(file =>\n    new FileSystemFileHandle(new FileHandle(file.name, file, false))\n  )\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTI3NS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RkFBNkYsRUFBRTtBQUMvRjtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBLElBQUksbUdBQThCO0FBQ2xDLElBQUksbUdBQStCO0FBQ25DLElBQUksd0ZBQXdDO0FBQzVDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFTztBQUNQLFVBQVUsMkJBQTJCLFFBQVEsbUdBQThCO0FBQzNFLFVBQVUsNEJBQTRCLFFBQVEsd0ZBQXdDOztBQUV0RjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFTztBQUNQLFVBQVUsYUFBYSxRQUFRLG1HQUE4QjtBQUM3RCxVQUFVLHVCQUF1QixRQUFRLHlGQUFtQzs7QUFFNUU7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYnVudC1wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvLnBucG0vbmF0aXZlLWZpbGUtc3lzdGVtLWFkYXB0ZXJAMy4wLjEvbm9kZV9tb2R1bGVzL25hdGl2ZS1maWxlLXN5c3RlbS1hZGFwdGVyL3NyYy91dGlsLmpzPzUxODQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGVycm9ycyA9IHtcbiAgSU5WQUxJRDogWydzZWVraW5nIHBvc2l0aW9uIGZhaWxlZC4nLCAnSW52YWxpZFN0YXRlRXJyb3InXSxcbiAgR09ORTogWydBIHJlcXVlc3RlZCBmaWxlIG9yIGRpcmVjdG9yeSBjb3VsZCBub3QgYmUgZm91bmQgYXQgdGhlIHRpbWUgYW4gb3BlcmF0aW9uIHdhcyBwcm9jZXNzZWQuJywgJ05vdEZvdW5kRXJyb3InXSxcbiAgTUlTTUFUQ0g6IFsnVGhlIHBhdGggc3VwcGxpZWQgZXhpc3RzLCBidXQgd2FzIG5vdCBhbiBlbnRyeSBvZiByZXF1ZXN0ZWQgdHlwZS4nLCAnVHlwZU1pc21hdGNoRXJyb3InXSxcbiAgTU9EX0VSUjogWydUaGUgb2JqZWN0IGNhbiBub3QgYmUgbW9kaWZpZWQgaW4gdGhpcyB3YXkuJywgJ0ludmFsaWRNb2RpZmljYXRpb25FcnJvciddLFxuICBTWU5UQVg6IG0gPT4gW2BGYWlsZWQgdG8gZXhlY3V0ZSAnd3JpdGUnIG9uICdVbmRlcmx5aW5nU2lua0Jhc2UnOiBJbnZhbGlkIHBhcmFtcyBwYXNzZWQuICR7bX1gLCAnU3ludGF4RXJyb3InXSxcbiAgU0VDVVJJVFk6IFsnSXQgd2FzIGRldGVybWluZWQgdGhhdCBjZXJ0YWluIGZpbGVzIGFyZSB1bnNhZmUgZm9yIGFjY2VzcyB3aXRoaW4gYSBXZWIgYXBwbGljYXRpb24sIG9yIHRoYXQgdG9vIG1hbnkgY2FsbHMgYXJlIGJlaW5nIG1hZGUgb24gZmlsZSByZXNvdXJjZXMuJywgJ1NlY3VyaXR5RXJyb3InXSxcbiAgRElTQUxMT1dFRDogWydUaGUgcmVxdWVzdCBpcyBub3QgYWxsb3dlZCBieSB0aGUgdXNlciBhZ2VudCBvciB0aGUgcGxhdGZvcm0gaW4gdGhlIGN1cnJlbnQgY29udGV4dC4nLCAnTm90QWxsb3dlZEVycm9yJ11cbn1cblxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcbiAgd3JpdGFibGU6IGdsb2JhbFRoaXMuV3JpdGFibGVTdHJlYW1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZyb21EYXRhVHJhbnNmZXIgKGVudHJpZXMpIHtcbiAgY29uc29sZS53YXJuKCdkZXByZWNhdGVkIGZyb21EYXRhVHJhbnNmZXIgLSB1c2UgYGR0Lml0ZW1zWzBdLmdldEFzRmlsZVN5c3RlbUhhbmRsZSgpYCBpbnN0ZWFkJylcbiAgY29uc3QgW21lbW9yeSwgc2FuZGJveCwgZnNdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgIGltcG9ydCgnLi9hZGFwdGVycy9tZW1vcnkuanMnKSxcbiAgICBpbXBvcnQoJy4vYWRhcHRlcnMvc2FuZGJveC5qcycpLFxuICAgIGltcG9ydCgnLi9GaWxlU3lzdGVtRGlyZWN0b3J5SGFuZGxlLmpzJylcbiAgXSlcblxuICBjb25zdCBmb2xkZXIgPSBuZXcgbWVtb3J5LkZvbGRlckhhbmRsZSgnJywgZmFsc2UpXG4gIGZvbGRlci5fZW50cmllcyA9IGVudHJpZXMubWFwKGVudHJ5ID0+IGVudHJ5LmlzRmlsZVxuICAgID8gbmV3IHNhbmRib3guRmlsZUhhbmRsZShlbnRyeSwgZmFsc2UpXG4gICAgOiBuZXcgc2FuZGJveC5Gb2xkZXJIYW5kbGUoZW50cnksIGZhbHNlKVxuICApXG5cbiAgcmV0dXJuIG5ldyBmcy5GaWxlU3lzdGVtRGlyZWN0b3J5SGFuZGxlKGZvbGRlcilcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldERpckhhbmRsZXNGcm9tSW5wdXQgKGlucHV0KSB7XG4gIGNvbnN0IHsgRm9sZGVySGFuZGxlLCBGaWxlSGFuZGxlIH0gPSBhd2FpdCBpbXBvcnQoJy4vYWRhcHRlcnMvbWVtb3J5LmpzJylcbiAgY29uc3QgeyBGaWxlU3lzdGVtRGlyZWN0b3J5SGFuZGxlIH0gPSBhd2FpdCBpbXBvcnQoJy4vRmlsZVN5c3RlbURpcmVjdG9yeUhhbmRsZS5qcycpXG5cbiAgY29uc3QgZmlsZXMgPSBBcnJheS5mcm9tKGlucHV0LmZpbGVzKVxuICBjb25zdCByb290TmFtZSA9IGZpbGVzWzBdLndlYmtpdFJlbGF0aXZlUGF0aC5zcGxpdCgnLycsIDEpWzBdXG4gIGNvbnN0IHJvb3QgPSBuZXcgRm9sZGVySGFuZGxlKHJvb3ROYW1lLCBmYWxzZSlcblxuICBmaWxlcy5mb3JFYWNoKGZpbGUgPT4ge1xuICAgIGNvbnN0IHBhdGggPSBmaWxlLndlYmtpdFJlbGF0aXZlUGF0aC5zcGxpdCgnLycpXG4gICAgcGF0aC5zaGlmdCgpXG4gICAgY29uc3QgbmFtZSA9IHBhdGgucG9wKClcblxuICAgIGNvbnN0IGRpciA9IHBhdGgucmVkdWNlKChkaXIsIHBhdGgpID0+IHtcbiAgICAgIGlmICghZGlyLl9lbnRyaWVzW3BhdGhdKSBkaXIuX2VudHJpZXNbcGF0aF0gPSBuZXcgRm9sZGVySGFuZGxlKHBhdGgsIGZhbHNlKVxuICAgICAgcmV0dXJuIGRpci5fZW50cmllc1twYXRoXVxuICAgIH0sIHJvb3QpXG5cbiAgICBkaXIuX2VudHJpZXNbbmFtZV0gPSBuZXcgRmlsZUhhbmRsZShmaWxlLm5hbWUsIGZpbGUsIGZhbHNlKVxuICB9KVxuXG4gIHJldHVybiBuZXcgRmlsZVN5c3RlbURpcmVjdG9yeUhhbmRsZShyb290KVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0RmlsZUhhbmRsZXNGcm9tSW5wdXQgKGlucHV0KSB7XG4gIGNvbnN0IHsgRmlsZUhhbmRsZSB9ID0gYXdhaXQgaW1wb3J0KCcuL2FkYXB0ZXJzL21lbW9yeS5qcycpXG4gIGNvbnN0IHsgRmlsZVN5c3RlbUZpbGVIYW5kbGUgfSA9IGF3YWl0IGltcG9ydCgnLi9GaWxlU3lzdGVtRmlsZUhhbmRsZS5qcycpXG5cbiAgcmV0dXJuIEFycmF5LmZyb20oaW5wdXQuZmlsZXMpLm1hcChmaWxlID0+XG4gICAgbmV3IEZpbGVTeXN0ZW1GaWxlSGFuZGxlKG5ldyBGaWxlSGFuZGxlKGZpbGUubmFtZSwgZmlsZSwgZmFsc2UpKVxuICApXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5275\n")}}]);