/*! For license information see: https://cbunt.ing/oss-licenses.json */
"use strict";(self.webpackChunkcbunt_portfolio=self.webpackChunkcbunt_portfolio||[]).push([[326],{1326:(e,t,n)=>{n.d(t,{$Kq:()=>B,B7n:()=>U,CSc:()=>K,CpY:()=>ce,D_t:()=>ne,FD_:()=>ge,GF$:()=>_,GJu:()=>pe,HYY:()=>P,J6Z:()=>F,KBq:()=>z,KIZ:()=>N,KMX:()=>q,LHP:()=>le,M98:()=>Le,MZV:()=>x,P1c:()=>O,QFs:()=>R,T5j:()=>g,Tre:()=>o,VIE:()=>y,W_U:()=>b,Wm_:()=>k,YeG:()=>D,ZBp:()=>te,Ze1:()=>G,_Je:()=>A,aiL:()=>w,bOE:()=>$,bc6:()=>V,brc:()=>S,cps:()=>W,e4n:()=>Y,eAA:()=>M,eLQ:()=>T,elk:()=>se,fJh:()=>I,iIv:()=>ae,kot:()=>Q,l2T:()=>j,mIY:()=>C,mQu:()=>oe,n73:()=>he,nR0:()=>H,nlo:()=>Z,rwM:()=>E,sk6:()=>m,tsP:()=>L,wt4:()=>ee,x9e:()=>J,xWH:()=>d,xXb:()=>re,yAK:()=>X,ydS:()=>ie,zqn:()=>v});const s=0,i=0,a=0,l=2,r=0,o=1,c=0,g=1,p=2,h=1,f=64,u=0,y=9,U=10,b=13,D=14,m=16,w=17,d=20,B=21,L=37,v=38,x=41,A=42,k=43,F=44,C=50,I=58,M=62,P=74,S=75,T=76,O=81,V=82,W=83,K=95,_=96,j=97,H=98,E=99,Y=100,Z=101,J=102,X=103,q=107,z=108,G=109,Q=122,N=123,R=133,$=134,ee=135,te=136,ne=137,se=138,ie=139,ae=140,le=141,re=142,oe=143,ce=144,ge=145,pe=146;function he(){return{vkFormat:u,typeSize:1,pixelWidth:0,pixelHeight:0,pixelDepth:0,layerCount:0,faceCount:1,supercompressionScheme:s,levels:[],dataFormatDescriptor:[{vendorId:a,descriptorType:i,versionNumber:l,colorModel:r,colorPrimaries:h,transferFunction:p,flags:c,texelBlockDimension:[0,0,0,0],bytesPlane:[0,0,0,0,0,0,0,0],samples:[]}],keyValue:{},globalData:null}}const fe=344==n.j?"KTX-Parse v1.0.0":null,ue=new Uint8Array([0]),ye=344==n.j?[171,75,84,88,32,50,48,187,13,10,26,10]:null,Ue=68;function be(e){return(new TextEncoder).encode(e)}function De(e){let t=0;for(const n of e)t+=n.byteLength;const n=new Uint8Array(t);let s=0;for(const t of e)n.set(new Uint8Array(t),s),s+=t.byteLength;return n}function me(e,t=4){return Math.ceil(e/t)*t-e}function we(e){return e.levels[0].levelData.byteLength/function(e,t){let n=1;const s=[e.pixelWidth,e.pixelHeight,e.pixelDepth],i=function(e){const[t,n,s]=e.dataFormatDescriptor[0].texelBlockDimension;return[t+1,n+1,s+1]}(e);for(let e=0;e<3;e++)if(s[e]>0){const a=Math.ceil(Math.floor(s[e]*2**-t)/i[e]);n*=Math.max(1,a)}e.layerCount>0&&(n*=e.layerCount);e.faceCount>0&&(n*=e.faceCount);return n}(e,0)}function de(){return de=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var s in n)({}).hasOwnProperty.call(n,s)&&(e[s]=n[s])}return e},de.apply(null,arguments)}const Be={keepWriter:!1};function Le(e,t={}){t=de({},Be,t);let n=new ArrayBuffer(0);if(e.globalData){const t=new ArrayBuffer(20+5*e.globalData.imageDescs.length*4),s=new DataView(t);s.setUint16(0,e.globalData.endpointCount,!0),s.setUint16(2,e.globalData.selectorCount,!0),s.setUint32(4,e.globalData.endpointsData.byteLength,!0),s.setUint32(8,e.globalData.selectorsData.byteLength,!0),s.setUint32(12,e.globalData.tablesData.byteLength,!0),s.setUint32(16,e.globalData.extendedData.byteLength,!0);for(let t=0;t<e.globalData.imageDescs.length;t++){const n=e.globalData.imageDescs[t];s.setUint32(20+5*t*4+0,n.imageFlags,!0),s.setUint32(20+5*t*4+4,n.rgbSliceByteOffset,!0),s.setUint32(20+5*t*4+8,n.rgbSliceByteLength,!0),s.setUint32(20+5*t*4+12,n.alphaSliceByteOffset,!0),s.setUint32(20+5*t*4+16,n.alphaSliceByteLength,!0)}n=De([t,e.globalData.endpointsData,e.globalData.selectorsData,e.globalData.tablesData,e.globalData.extendedData])}const a=[],l=Object.entries(de({},e.keyValue,!t.keepWriter&&{KTXwriter:fe}));l.sort(((e,t)=>e[0]>t[0]?1:-1));for(const[e,t]of l){const n=be(e),s="string"==typeof t?De([be(t),ue]):t,i=n.byteLength+1+s.byteLength,l=me(i,4);a.push(De([new Uint32Array([i]),n,ue,s,new Uint8Array(l).fill(0)]))}const r=De(a);if(1!==e.dataFormatDescriptor.length||e.dataFormatDescriptor[0].descriptorType!==i)throw new Error("Only BASICFORMAT Data Format Descriptor output supported.");const o=e.dataFormatDescriptor[0],c=new ArrayBuffer(28+16*o.samples.length),g=new DataView(c),p=24+16*o.samples.length;if(g.setUint32(0,c.byteLength,!0),g.setUint16(4,o.vendorId,!0),g.setUint16(6,o.descriptorType,!0),g.setUint16(8,o.versionNumber,!0),g.setUint16(10,p,!0),g.setUint8(12,o.colorModel),g.setUint8(13,o.colorPrimaries),g.setUint8(14,o.transferFunction),g.setUint8(15,o.flags),!Array.isArray(o.texelBlockDimension))throw new Error("texelBlockDimension is now an array. For dimensionality `d`, set `d - 1`.");g.setUint8(16,o.texelBlockDimension[0]),g.setUint8(17,o.texelBlockDimension[1]),g.setUint8(18,o.texelBlockDimension[2]),g.setUint8(19,o.texelBlockDimension[3]);for(let e=0;e<8;e++)g.setUint8(20+e,o.bytesPlane[e]);for(let e=0;e<o.samples.length;e++){const t=o.samples[e],n=28+16*e;g.setUint16(n+0,t.bitOffset,!0),g.setUint8(n+2,t.bitLength),g.setUint8(n+3,t.channelType),g.setUint8(n+4,t.samplePosition[0]),g.setUint8(n+5,t.samplePosition[1]),g.setUint8(n+6,t.samplePosition[2]),g.setUint8(n+7,t.samplePosition[3]),t.channelType&f?(g.setInt32(n+8,t.sampleLower,!0),g.setInt32(n+12,t.sampleUpper,!0)):(g.setUint32(n+8,t.sampleLower,!0),g.setUint32(n+12,t.sampleUpper,!0))}const h=ye.length+Ue+3*e.levels.length*8,u=h+c.byteLength;let y=n.byteLength>0?u+r.byteLength:0;y%8&&(y+=8-y%8);const U=[],b=new DataView(new ArrayBuffer(3*e.levels.length*8)),D=new Uint32Array(e.levels.length);let m=0;e.supercompressionScheme===s&&(m=function(e,t){const n=Math.max(e,t),s=Math.min(e,t);let i=n;for(;i%s!=0;)i+=n;return i}(we(e),4));let w=(y||u+r.byteLength)+n.byteLength;for(let t=e.levels.length-1;t>=0;t--){if(w%m){const e=me(w,m);U.push(new Uint8Array(e)),w+=e}const n=e.levels[t];U.push(n.levelData),D[t]=w,w+=n.levelData.byteLength}for(let t=0;t<e.levels.length;t++){const n=e.levels[t];b.setBigUint64(24*t+0,BigInt(D[t]),!0),b.setBigUint64(24*t+8,BigInt(n.levelData.byteLength),!0),b.setBigUint64(24*t+16,BigInt(n.uncompressedByteLength),!0)}const d=new ArrayBuffer(Ue),B=new DataView(d);return B.setUint32(0,e.vkFormat,!0),B.setUint32(4,e.typeSize,!0),B.setUint32(8,e.pixelWidth,!0),B.setUint32(12,e.pixelHeight,!0),B.setUint32(16,e.pixelDepth,!0),B.setUint32(20,e.layerCount,!0),B.setUint32(24,e.faceCount,!0),B.setUint32(28,e.levels.length,!0),B.setUint32(32,e.supercompressionScheme,!0),B.setUint32(36,h,!0),B.setUint32(40,c.byteLength,!0),B.setUint32(44,u,!0),B.setUint32(48,r.byteLength,!0),B.setBigUint64(52,BigInt(n.byteLength>0?y:0),!0),B.setBigUint64(60,BigInt(n.byteLength),!0),new Uint8Array(De([new Uint8Array(ye).buffer,d,b.buffer,c,r,y>0?new ArrayBuffer(y-(u+r.byteLength)):new ArrayBuffer(0),n,...U]))}}}]);
//# sourceMappingURL=326.bundle.js.map